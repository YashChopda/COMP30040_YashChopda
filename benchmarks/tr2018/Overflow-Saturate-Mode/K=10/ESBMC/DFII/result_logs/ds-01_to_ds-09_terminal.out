./esbmc ds-01-impl1.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-01-impl1.c: Parsing
In file included from benchmarks/ds-01-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-01-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-01-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.266s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.123s (1599 assignments)
Slicing time: 0.003s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.077s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.077s
Runtime decision procedure: 1.416s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 16384.000000 (01000000 11010000 00000000 00000000 00000000 00000000 00000000 00000000)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 16384 (00000000 00000000 00000000 00000000 00000000 00000000 01000000 00000000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 24576.000000 (01000000 11011000 00000000 00000000 00000000 00000000 00000000 00000000)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 24576 (00000000 00000000 00000000 00000000 00000000 00000000 01100000 00000000)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 8192.000000 (01000000 11000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 49 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 50 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = -16353 (11111111 11111111 11111111 11111111 11111111 11111111 11000000 00011111)

State 52 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 53 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = -16384 (11111111 11111111 11111111 11111111 11111111 11111111 11000000 00000000)

State 55 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 56 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = 16384 (00000000 00000000 00000000 00000000 00000000 00000000 01000000 00000000)

State 58 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 59 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = 128 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 10000000)

State 61 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 62 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 64 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 65 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 67 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 68 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 70 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 71 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 73 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 74 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 76 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 77 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = 15228 (00000000 00000000 00000000 00000000 00000000 00000000 00111011 01111100)

State 79 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 80 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 84 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 86 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 89 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 90 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 93 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 96 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -16353 (11111111 11111111 11111111 11111111 11111111 11111111 11000000 00011111)

State 102 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-16353 << 14) / 16384
An Overflow Occurred in the node b0

State 108 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -401891328 (11111111 11111111 11111111 11111111 11101000 00001011 10100000 00000000)

State 109 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -24530 (11111111 11111111 11111111 11111111 11111111 11111111 10100000 00101110)

State 110 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -24530 (11111111 11111111 11111111 11111111 11111111 11111111 10100000 00101110)

State 113 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 114 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 115 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -24530 (11111111 11111111 11111111 11111111 11111111 11111111 10100000 00101110)

State 119 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -16353 (11111111 11111111 11111111 11111111 11111111 11111111 11000000 00011111)

State 121 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 124 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 125 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 128 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 131 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -16384 (11111111 11111111 11111111 11111111 11111111 11111111 11000000 00000000)

State 137 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-16384 << 14) / 16384
An Overflow Occurred in the node b0

State 143 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -402653184 (11111111 11111111 11111111 11111111 11101000 00000000 00000000 00000000)

State 144 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -24576 (11111111 11111111 11111111 11111111 11111111 11111111 10100000 00000000)

State 145 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -24576 (11111111 11111111 11111111 11111111 11111111 11111111 10100000 00000000)

State 148 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 133963776 (00000000 00000000 00000000 00000000 00000111 11111100 00100000 00000000)

State 149 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 8177 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 11110001)

State 150 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -16399 (11111111 11111111 11111111 11111111 11111111 11111111 10111111 11110001)

State 154 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -16384 (11111111 11111111 11111111 11111111 11111111 11111111 11000000 00000000)

State 156 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 159 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 160 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 163 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 166 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 16384 (00000000 00000000 00000000 00000000 00000000 00000000 01000000 00000000)

State 172 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 16384 (00000000 00000000 00000000 00000000 00000000 00000000 01000000 00000000)
An Overflow Occurred in the node b0

State 178 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 402653184 (00000000 00000000 00000000 00000000 00011000 00000000 00000000 00000000)

State 179 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 24576 (00000000 00000000 00000000 00000000 00000000 00000000 01100000 00000000)

State 180 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 24576 (00000000 00000000 00000000 00000000 00000000 00000000 01100000 00000000)

State 183 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 134217728 (00000000 00000000 00000000 00000000 00001000 00000000 00000000 00000000)

State 184 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 8192 (00000000 00000000 00000000 00000000 00000000 00000000 00100000 00000000)

State 185 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 32768 (00000000 00000000 00000000 00000000 00000000 00000000 10000000 00000000)

State 189 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 16384 (00000000 00000000 00000000 00000000 00000000 00000000 01000000 00000000)

State 191 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 194 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 195 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 198 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 201 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 128 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 10000000)

State 207 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 128 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 10000000)
An Overflow Occurred in the node b0

State 213 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 3145728 (00000000 00000000 00000000 00000000 00000000 00110000 00000000 00000000)

State 214 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 192 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 11000000)

State 215 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 192 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 11000000)

State 218 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -134217728 (11111111 11111111 11111111 11111111 11111000 00000000 00000000 00000000)
State 219 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -8192 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 00000000)

State 220 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -8000 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 11000000)

State 224 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 128 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 10000000)

State 226 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 229 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 230 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 233 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 236 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 242 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node b0

State 248 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 249 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 250 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 253 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -1048576 (11111111 11111111 11111111 11111111 11111111 11110000 00000000 00000000)

State 254 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -64 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000000)

State 255 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -64 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000000)

State 259 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 261 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 264 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 265 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 268 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 271 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 277 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node b0

State 283 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 284 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 285 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 288 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 289 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 290 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 294 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 296 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 299 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 300 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 303 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 306 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 312 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node b0

State 318 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 319 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 320 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 323 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 324 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 325 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 329 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 331 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 334 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 335 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 338 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 341 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 347 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node b0

State 353 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 354 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 355 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 358 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 359 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 360 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 364 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 366 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 369 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 370 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 373 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 376 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 382 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node b0

State 388 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 389 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 390 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 393 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 394 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 395 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 399 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 401 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 404 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 405 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 408 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 411 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 15228 (00000000 00000000 00000000 00000000 00000000 00000000 00111011 01111100)

State 417 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 15228 (00000000 00000000 00000000 00000000 00000000 00000000 00111011 01111100)
An Overflow Occurred in the node b0

State 423 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 374243328 (00000000 00000000 00000000 00000000 00010110 01001110 10000000 00000000)

State 424 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 22842 (00000000 00000000 00000000 00000000 00000000 00000000 01011001 00111010)

State 425 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 22842 (00000000 00000000 00000000 00000000 00000000 00000000 01011001 00111010)

State 428 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 429 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 430 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 22842 (00000000 00000000 00000000 00000000 00000000 00000000 01011001 00111010)
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output

State 439 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-01-impl2.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-01-impl2.c: Parsing
In file included from benchmarks/ds-01-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-01-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-01-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.252s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.118s (1599 assignments)
Slicing time: 0.002s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.075s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.075s
Runtime decision procedure: 1.509s
BMC program time: 1.705s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-01-impl3.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-01-impl3.c: Parsing
In file included from benchmarks/ds-01-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-01-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-01-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.245s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.120s (1599 assignments)
Slicing time: 0.003s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.077s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.077s
Runtime decision procedure: 4.939s
BMC program time: 5.139s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-02-impl1.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-02-impl1.c: Parsing
In file included from benchmarks/ds-02-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-02-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-02-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.243s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.118s (1599 assignments)
Slicing time: 0.003s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.077s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.077s
Runtime decision procedure: 7.640s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 1024.000000 (01000000 10010000 00000000 00000000 00000000 00000000 00000000 00000000)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 1024 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00000000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 61440.000000 (01000000 11101110 00000000 00000000 00000000 00000000 00000000 00000000)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 61440 (00000000 00000000 00000000 00000000 00000000 00000000 11110000 00000000)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 51200.000000 (01000000 11101001 00000000 00000000 00000000 00000000 00000000 00000000)

State 49 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 50 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 52 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 53 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = 1024 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00000000)

State 55 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 56 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = 56 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00111000)

State 58 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 59 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = 200 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 11001000)

State 61 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 62 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = 285 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 00011101)

State 64 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 65 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = 1024 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00000000)

State 67 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 68 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = -1024 (11111111 11111111 11111111 11111111 11111111 11111111 11111100 00000000)

State 70 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 71 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = 501 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 11110101)

State 73 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 74 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = -277 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 11101011)

State 76 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 77 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = 11 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001011)

State 79 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 80 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 84 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 86 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 89 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 90 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 93 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 96 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 102 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node b0

State 108 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 109 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 110 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 113 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 114 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 115 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 119 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 121 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 124 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 125 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 128 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 131 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 1024 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00000000)

State 137 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 1024 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00000000)
An Overflow Occurred in the node b0

State 143 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 62914560 (00000000 00000000 00000000 00000000 00000011 11000000 00000000 00000000)

State 144 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 61440 (00000000 00000000 00000000 00000000 00000000 00000000 11110000 00000000)

State 145 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 61440 (00000000 00000000 00000000 00000000 00000000 00000000 11110000 00000000)

State 148 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 149 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 150 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 61440 (00000000 00000000 00000000 00000000 00000000 00000000 11110000 00000000)

State 154 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 1024 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00000000)

State 156 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 159 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 160 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 163 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 166 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 56 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00111000)

State 172 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 56 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00111000)
An Overflow Occurred in the node b0

State 178 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 3440640 (00000000 00000000 00000000 00000000 00000000 00110100 10000000 00000000)

State 179 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 3360 (00000000 00000000 00000000 00000000 00000000 00000000 00001101 00100000)

State 180 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 3360 (00000000 00000000 00000000 00000000 00000000 00000000 00001101 00100000)

State 183 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -52428800 (11111111 11111111 11111111 11111111 11111100 11100000 00000000 00000000)

State 184 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -51200 (11111111 11111111 11111111 11111111 11111111 11111111 00111000 00000000)

State 185 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -47840 (11111111 11111111 11111111 11111111 11111111 11111111 01000101 00100000)

State 189 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 56 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00111000)

State 191 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 194 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 195 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 198 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 201 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 200 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 11001000)

State 207 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 200 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 11001000)
An Overflow Occurred in the node b0

State 213 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 12288000 (00000000 00000000 00000000 00000000 00000000 10111011 10000000 00000000)

State 214 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 12000 (00000000 00000000 00000000 00000000 00000000 00000000 00101110 11100000)

State 215 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 12000 (00000000 00000000 00000000 00000000 00000000 00000000 00101110 11100000)

State 218 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -2867200 (11111111 11111111 11111111 11111111 11111111 11010100 01000000 00000000)

State 219 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -2800 (11111111 11111111 11111111 11111111 11111111 11111111 11110101 00010000)

State 220 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 9200 (00000000 00000000 00000000 00000000 00000000 00000000 00100011 11110000)

State 224 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 200 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 11001000)

State 226 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 229 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 230 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 233 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 236 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 285 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 00011101)

State 242 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 285 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 00011101)
An Overflow Occurred in the node b0

State 248 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 17510400 (00000000 00000000 00000000 00000000 00000001 00001011 00110000 00000000)

State 249 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 17100 (00000000 00000000 00000000 00000000 00000000 00000000 01000010 11001100)

State 250 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 17100 (00000000 00000000 00000000 00000000 00000000 00000000 01000010 11001100)

State 253 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -10240000 (11111111 11111111 11111111 11111111 11111111 01100011 11000000 00000000)

State 254 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -10000 (11111111 11111111 11111111 11111111 11111111 11111111 11011000 11110000)

State 255 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 7100 (00000000 00000000 00000000 00000000 00000000 00000000 00011011 10111100)

State 259 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 285 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 00011101)

State 261 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 264 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 265 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 268 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 271 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 1024 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00000000)

State 277 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 1024 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00000000)
An Overflow Occurred in the node b0

State 283 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 62914560 (00000000 00000000 00000000 00000000 00000011 11000000 00000000 00000000)

State 284 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 61440 (00000000 00000000 00000000 00000000 00000000 00000000 11110000 00000000)

State 285 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 61440 (00000000 00000000 00000000 00000000 00000000 00000000 11110000 00000000)

State 288 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -14592000 (11111111 11111111 11111111 11111111 11111111 00100001 01011000 00000000)

State 289 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -14250 (11111111 11111111 11111111 11111111 11111111 11111111 11001000 01010110)

State 290 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 47190 (00000000 00000000 00000000 00000000 00000000 00000000 10111000 01010110)

State 294 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 1024 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00000000)

State 296 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 299 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 300 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 303 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 306 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -1024 (11111111 11111111 11111111 11111111 11111111 11111111 11111100 00000000)

State 312 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-1024 << 10) / 1024
An Overflow Occurred in the node b0

State 318 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -62914560 (11111111 11111111 11111111 11111111 11111100 01000000 00000000 00000000)

State 319 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -61440 (11111111 11111111 11111111 11111111 11111111 11111111 00010000 00000000)

State 320 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -61440 (11111111 11111111 11111111 11111111 11111111 11111111 00010000 00000000)

State 323 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -52428800 (11111111 11111111 11111111 11111111 11111100 11100000 00000000 00000000)

State 324 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -51200 (11111111 11111111 11111111 11111111 11111111 11111111 00111000 00000000)

State 325 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -112640 (11111111 11111111 11111111 11111111 11111111 11111110 01001000 00000000)

State 329 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -1024 (11111111 11111111 11111111 11111111 11111111 11111111 11111100 00000000)

State 331 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 334 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 335 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 338 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 341 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 501 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 11110101)

State 347 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 501 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 11110101)
An Overflow Occurred in the node b0

State 353 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 30781440 (00000000 00000000 00000000 00000000 00000001 11010101 10110000 00000000)

State 354 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 30060 (00000000 00000000 00000000 00000000 00000000 00000000 01110101 01101100)

State 355 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 30060 (00000000 00000000 00000000 00000000 00000000 00000000 01110101 01101100)

State 358 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 52428800 (00000000 00000000 00000000 00000000 00000011 00100000 00000000 00000000)

State 359 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 51200 (00000000 00000000 00000000 00000000 00000000 00000000 11001000 00000000)

State 360 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 81260 (00000000 00000000 00000000 00000000 00000000 00000001 00111101 01101100)

State 364 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 501 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 11110101)

State 366 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 369 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 370 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 373 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 376 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -277 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 11101011)

State 382 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-277 << 10) / 1024
An Overflow Occurred in the node b0

State 388 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -17018880 (11111111 11111111 11111111 11111111 11111110 11111100 01010000 00000000)

State 389 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -16620 (11111111 11111111 11111111 11111111 11111111 11111111 10111111 00010100)

State 390 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -16620 (11111111 11111111 11111111 11111111 11111111 11111111 10111111 00010100)

State 393 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -25651200 (11111111 11111111 11111111 11111111 11111110 01111000 10011000 00000000)

State 394 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -25050 (11111111 11111111 11111111 11111111 11111111 11111111 10011110 00100110)

State 395 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -41670 (11111111 11111111 11111111 11111111 11111111 11111111 01011101 00111010)

State 399 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -277 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 11101011)

State 401 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 404 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 405 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 408 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 411 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 11 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001011)

State 417 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 11 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001011)
An Overflow Occurred in the node b0

State 423 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 675840 (00000000 00000000 00000000 00000000 00000000 00001010 01010000 00000000)

State 424 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 660 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 10010100)

State 425 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 660 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 10010100)

State 428 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 14182400 (00000000 00000000 00000000 00000000 00000000 11011000 01101000 00000000)

State 429 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 13850 (00000000 00000000 00000000 00000000 00000000 00000000 00110110 00011010)

State 430 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 14510 (00000000 00000000 00000000 00000000 00000000 00000000 00111000 10101110)
An Overflow Occurred in system's output
An Overflow Occurred in system's output

State 436 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-02-impl2.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-02-impl2.c: Parsing
In file included from benchmarks/ds-02-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-02-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-02-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.157s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.118s (1599 assignments)
Slicing time: 0.002s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.077s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.077s
Runtime decision procedure: 13.948s
BMC program time: 14.147s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-02-impl3.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-02-impl3.c: Parsing
In file included from benchmarks/ds-02-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-02-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-02-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.244s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.116s (1599 assignments)
Slicing time: 0.003s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.076s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.076s
Runtime decision procedure: 10.481s
BMC program time: 10.676s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-03-impl1.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-03-impl1.c: Parsing
In file included from benchmarks/ds-03-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-03-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-03-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.166s
GOTO program processing time: 0.025s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.121s (1599 assignments)
Slicing time: 0.003s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.078s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.078s
Runtime decision procedure: 3.597s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 512.000000 (01000000 10000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 512 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 56320.000000 (01000000 11101011 10000000 00000000 00000000 00000000 00000000 00000000)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 56320 (00000000 00000000 00000000 00000000 00000000 00000000 11011100 00000000)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 51200.000000 (01000000 11101001 00000000 00000000 00000000 00000000 00000000 00000000)

State 49 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 50 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 52 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 53 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 55 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 56 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = 512 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000000)

State 58 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 59 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = 512 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000000)

State 61 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 62 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = 394 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 10001010)

State 64 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 65 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = 512 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000000)

State 67 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 68 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 70 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 71 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = -512 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 00000000)

State 73 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 74 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = -512 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 00000000)

State 76 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 77 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = 259 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 00000011)

State 79 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 80 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 84 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 86 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 89 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 90 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 93 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 96 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 102 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node b0

State 108 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 109 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 110 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 113 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 114 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 115 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 119 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 121 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 124 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 125 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 128 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 131 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 137 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node b0

State 143 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 144 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 145 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 148 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 149 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 150 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 154 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 156 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 159 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 160 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 163 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 166 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 512 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000000)

State 172 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 512 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000000)
An Overflow Occurred in the node b0

State 178 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 28835840 (00000000 00000000 00000000 00000000 00000001 10111000 00000000 00000000)

State 179 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 56320 (00000000 00000000 00000000 00000000 00000000 00000000 11011100 00000000)

State 180 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 56320 (00000000 00000000 00000000 00000000 00000000 00000000 11011100 00000000)

State 183 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 184 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 185 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 56320 (00000000 00000000 00000000 00000000 00000000 00000000 11011100 00000000)

State 189 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 512 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000000)

State 191 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 194 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 195 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 198 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 201 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 512 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000000)

State 207 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 512 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000000)
An Overflow Occurred in the node b0

State 213 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 28835840 (00000000 00000000 00000000 00000000 00000001 10111000 00000000 00000000)

State 214 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 56320 (00000000 00000000 00000000 00000000 00000000 00000000 11011100 00000000)

State 215 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 56320 (00000000 00000000 00000000 00000000 00000000 00000000 11011100 00000000)

State 218 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -26214400 (11111111 11111111 11111111 11111111 11111110 01110000 00000000 00000000)

State 219 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -51200 (11111111 11111111 11111111 11111111 11111111 11111111 00111000 00000000)

State 220 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 5120 (00000000 00000000 00000000 00000000 00000000 00000000 00010100 00000000)

State 224 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 512 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000000)

State 226 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 229 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 230 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 233 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 236 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 394 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 10001010)

State 242 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 394 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 10001010)
An Overflow Occurred in the node b0

State 248 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 22190080 (00000000 00000000 00000000 00000000 00000001 01010010 10011000 00000000)

State 249 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 43340 (00000000 00000000 00000000 00000000 00000000 00000000 10101001 01001100)

State 250 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 43340 (00000000 00000000 00000000 00000000 00000000 00000000 10101001 01001100)

State 253 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -26214400 (11111111 11111111 11111111 11111111 11111110 01110000 00000000 00000000)

State 254 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -51200 (11111111 11111111 11111111 11111111 11111111 11111111 00111000 00000000)

State 255 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -7860 (11111111 11111111 11111111 11111111 11111111 11111111 11100001 01001100)

State 259 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 394 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 10001010)

State 261 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 264 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 265 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 268 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 271 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 512 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000000)

State 277 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 512 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000000)
An Overflow Occurred in the node b0

State 283 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 28835840 (00000000 00000000 00000000 00000000 00000001 10111000 00000000 00000000)

State 284 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 56320 (00000000 00000000 00000000 00000000 00000000 00000000 11011100 00000000)

State 285 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 56320 (00000000 00000000 00000000 00000000 00000000 00000000 11011100 00000000)

State 288 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -20172800 (11111111 11111111 11111111 11111111 11111110 11001100 00110000 00000000)

State 289 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -39400 (11111111 11111111 11111111 11111111 11111111 11111111 01100110 00011000)

State 290 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 16920 (00000000 00000000 00000000 00000000 00000000 00000000 01000010 00011000)

State 294 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 512 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000000)

State 296 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 299 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 300 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 303 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 306 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 312 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node b0

State 318 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 319 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 320 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 323 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -26214400 (11111111 11111111 11111111 11111111 11111110 01110000 00000000 00000000)

State 324 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -51200 (11111111 11111111 11111111 11111111 11111111 11111111 00111000 00000000)

State 325 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -51200 (11111111 11111111 11111111 11111111 11111111 11111111 00111000 00000000)

State 329 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 331 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 334 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 335 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 338 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 341 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -512 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 00000000)

State 347 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-512 << 9) / 512
An Overflow Occurred in the node b0

State 353 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -28835840 (11111111 11111111 11111111 11111111 11111110 01001000 00000000 00000000)

State 354 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -56320 (11111111 11111111 11111111 11111111 11111111 11111111 00100100 00000000)

State 355 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -56320 (11111111 11111111 11111111 11111111 11111111 11111111 00100100 00000000)

State 358 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 359 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 360 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -56320 (11111111 11111111 11111111 11111111 11111111 11111111 00100100 00000000)

State 364 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -512 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 00000000)

State 366 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 369 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 370 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 373 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 376 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -512 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 00000000)

State 382 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-512 << 9) / 512
An Overflow Occurred in the node b0

State 388 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -28835840 (11111111 11111111 11111111 11111111 11111110 01001000 00000000 00000000)

State 389 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -56320 (11111111 11111111 11111111 11111111 11111111 11111111 00100100 00000000)

State 390 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -56320 (11111111 11111111 11111111 11111111 11111111 11111111 00100100 00000000)

State 393 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 26214400 (00000000 00000000 00000000 00000000 00000001 10010000 00000000 00000000)

State 394 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 51200 (00000000 00000000 00000000 00000000 00000000 00000000 11001000 00000000)

State 395 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -5120 (11111111 11111111 11111111 11111111 11111111 11111111 11101100 00000000)

State 399 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -512 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 00000000)

State 401 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 404 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 405 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 408 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 411 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 259 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 00000011)

State 417 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 259 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 00000011)
An Overflow Occurred in the node b0

State 423 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 14586880 (00000000 00000000 00000000 00000000 00000000 11011110 10010100 00000000)

State 424 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 28490 (00000000 00000000 00000000 00000000 00000000 00000000 01101111 01001010)

State 425 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 28490 (00000000 00000000 00000000 00000000 00000000 00000000 01101111 01001010)

State 428 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 26214400 (00000000 00000000 00000000 00000000 00000001 10010000 00000000 00000000)

State 429 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 51200 (00000000 00000000 00000000 00000000 00000000 00000000 11001000 00000000)

State 430 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 79690 (00000000 00000000 00000000 00000000 00000000 00000001 00110111 01001010)
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output

State 439 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-03-impl2.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-03-impl2.c: Parsing
In file included from benchmarks/ds-03-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-03-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-03-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.271s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.119s (1599 assignments)
Slicing time: 0.003s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.076s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.076s
Runtime decision procedure: 18.777s
BMC program time: 18.975s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-03-impl3.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-03-impl3.c: Parsing
In file included from benchmarks/ds-03-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-03-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-03-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.215s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.120s (1599 assignments)
Slicing time: 0.003s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.079s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.079s
Runtime decision procedure: 19.752s
BMC program time: 19.954s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-04-impl1.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-04-impl1.c: Parsing
In file included from benchmarks/ds-04-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-04-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-04-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.194s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 3 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 3 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 3 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 3 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 3 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.165s (2179 assignments)
Slicing time: 0.004s (removed 650 assignments)
Generated 577 VCC(s), 354 remaining after simplification (1529 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.090s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.090s
Runtime decision procedure: 14.059s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 256.000000 (01000000 01110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 256 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 00000000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 256.000000 (01000000 01110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 34560.000000 (01000000 11100000 11100000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 34560 (00000000 00000000 00000000 00000000 00000000 00000000 10000111 00000000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 58 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 59 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 60 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 66560.000000 (01000000 11110000 01000000 00000000 00000000 00000000 00000000 00000000)

State 70 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 32000.000000 (01000000 11011111 01000000 00000000 00000000 00000000 00000000 00000000)

State 71 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 32000 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00000000)

State 72 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 73 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 74 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = 224 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 11100000)

State 76 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 77 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = 155 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 10011011)

State 79 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 80 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = 136 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 10001000)

State 82 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 83 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = 256 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 00000000)

State 85 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 86 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = 255 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 11111111)

State 88 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 89 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = 254 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 11111110)

State 91 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 92 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = 96 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 01100000)

State 94 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 95 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = 32 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00100000)

State 97 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 98 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = -256 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 00000000)

State 100 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 101 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = 128 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 10000000)

State 103 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 104 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 105 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 109 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 112 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 114 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 117 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 118 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 121 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 124 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 125 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 128 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 131 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 224 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 11100000)

State 137 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 224 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 11100000)
An Overflow Occurred in the node b0

State 143 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 7741440 (00000000 00000000 00000000 00000000 00000000 01110110 00100000 00000000)

State 144 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 30240 (00000000 00000000 00000000 00000000 00000000 00000000 01110110 00100000)

State 145 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 30240 (00000000 00000000 00000000 00000000 00000000 00000000 01110110 00100000)

State 148 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 149 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 150 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 30240 (00000000 00000000 00000000 00000000 00000000 00000000 01110110 00100000)

State 153 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 154 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 155 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 30240 (00000000 00000000 00000000 00000000 00000000 00000000 01110110 00100000)

State 159 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 162 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 224 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 11100000)

State 164 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 167 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -57344 (11111111 11111111 11111111 11111111 11111111 11111111 00100000 00000000)

State 168 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -224 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 00100000)

State 171 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 224 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 11100000)

State 174 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 175 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 178 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 224 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 11100000)

State 181 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 379 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 01111011)

State 187 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 379 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 01111011)
An Overflow Occurred in the node b0

State 193 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 13098240 (00000000 00000000 00000000 00000000 00000000 11000111 11011101 00000000)

State 194 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 51165 (00000000 00000000 00000000 00000000 00000000 00000000 11000111 11011101)

State 195 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 51165 (00000000 00000000 00000000 00000000 00000000 00000000 11000111 11011101)

State 198 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -14909440 (11111111 11111111 11111111 11111111 11111111 00011100 10000000 00000000)

State 199 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -58240 (11111111 11111111 11111111 11111111 11111111 11111111 00011100 10000000)

State 200 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -7075 (11111111 11111111 11111111 11111111 11111111 11111111 11100100 01011101)

State 203 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 204 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 205 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -7075 (11111111 11111111 11111111 11111111 11111111 11111111 11100100 01011101)

State 209 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 224 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 11100000)

State 212 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 379 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 01111011)

State 214 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 217 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -97024 (11111111 11111111 11111111 11111111 11111111 11111110 10000101 00000000)

State 218 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -379 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 10000101)

State 221 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 379 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 01111011)

State 224 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 225 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 228 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 379 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 01111011)

State 231 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 515 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000011)

State 237 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 515 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000011)
An Overflow Occurred in the node b0

State 243 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 17798400 (00000000 00000000 00000000 00000000 00000001 00001111 10010101 00000000)

State 244 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 69525 (00000000 00000000 00000000 00000000 00000000 00000001 00001111 10010101)

State 245 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 69525 (00000000 00000000 00000000 00000000 00000000 00000001 00001111 10010101)

State 248 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -25226240 (11111111 11111111 11111111 11111111 11111110 01111111 00010100 00000000)

State 249 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -98540 (11111111 11111111 11111111 11111111 11111111 11111110 01111111 00010100)

State 250 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -29015 (11111111 11111111 11111111 11111111 11111111 11111111 10001110 10101001)

State 253 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 7168000 (00000000 00000000 00000000 00000000 00000000 01101101 01100000 00000000)

State 254 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 28000 (00000000 00000000 00000000 00000000 00000000 00000000 01101101 01100000)

State 255 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -1015 (11111111 11111111 11111111 11111111 11111111 11111111 11111100 00001001)

State 259 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 379 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 01111011)

State 262 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 515 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000011)

State 264 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 267 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -131840 (11111111 11111111 11111111 11111111 11111111 11111101 11111101 00000000)

State 268 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -515 (11111111 11111111 11111111 11111111 11111111 11111111 11111101 11111101)

State 271 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 515 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000011)

State 274 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 275 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 278 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 515 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000011)

State 281 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 771 (00000000 00000000 00000000 00000000 00000000 00000000 00000011 00000011)

State 287 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 771 (00000000 00000000 00000000 00000000 00000000 00000000 00000011 00000011)
An Overflow Occurred in the node b0

State 293 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 26645760 (00000000 00000000 00000000 00000000 00000001 10010110 10010101 00000000)

State 294 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 104085 (00000000 00000000 00000000 00000000 00000000 00000001 10010110 10010101)

State 295 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 104085 (00000000 00000000 00000000 00000000 00000000 00000001 10010110 10010101)

State 298 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -34278400 (11111111 11111111 11111111 11111111 11111101 11110100 11110100 00000000)

State 299 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -133900 (11111111 11111111 11111111 11111111 11111111 11111101 11110100 11110100)

State 300 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -29815 (11111111 11111111 11111111 11111111 11111111 11111111 10001011 10001001)

State 303 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 12128000 (00000000 00000000 00000000 00000000 00000000 10111001 00001111 00000000)

State 304 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 47375 (00000000 00000000 00000000 00000000 00000000 00000000 10111001 00001111)

State 305 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 17560 (00000000 00000000 00000000 00000000 00000000 00000000 01000100 10011000)

State 309 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 515 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000011)

State 312 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 771 (00000000 00000000 00000000 00000000 00000000 00000000 00000011 00000011)

State 314 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 317 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -197376 (11111111 11111111 11111111 11111111 11111111 11111100 11111101 00000000)

State 318 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -771 (11111111 11111111 11111111 11111111 11111111 11111111 11111100 11111101)

State 321 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 771 (00000000 00000000 00000000 00000000 00000000 00000000 00000011 00000011)

State 324 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 325 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 328 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 771 (00000000 00000000 00000000 00000000 00000000 00000000 00000011 00000011)

State 331 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 1026 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00000010)

State 337 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 1026 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00000010)
An Overflow Occurred in the node b0

State 343 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 35458560 (00000000 00000000 00000000 00000000 00000010 00011101 00001110 00000000)

State 344 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 138510 (00000000 00000000 00000000 00000000 00000000 00000010 00011101 00001110)

State 345 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 138510 (00000000 00000000 00000000 00000000 00000000 00000010 00011101 00001110)

State 348 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -51317760 (11111111 11111111 11111111 11111111 11111100 11110000 11110100 00000000)

State 349 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -200460 (11111111 11111111 11111111 11111111 11111111 11111100 11110000 11110100)

State 350 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -61950 (11111111 11111111 11111111 11111111 11111111 11111111 00001110 00000010)

State 353 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 16480000 (00000000 00000000 00000000 00000000 00000000 11111011 01110111 00000000)

State 354 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 64375 (00000000 00000000 00000000 00000000 00000000 00000000 11111011 01110111)

State 355 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 2425 (00000000 00000000 00000000 00000000 00000000 00000000 00001001 01111001)

State 359 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 771 (00000000 00000000 00000000 00000000 00000000 00000000 00000011 00000011)

State 362 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 1026 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00000010)

State 364 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 367 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -262656 (11111111 11111111 11111111 11111111 11111111 11111011 11111110 00000000)

State 368 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -1026 (11111111 11111111 11111111 11111111 11111111 11111111 11111011 11111110)

State 371 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 1026 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00000010)

State 374 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 375 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 378 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 1026 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00000010)

State 381 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 1280 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 00000000)

State 387 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 1280 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 00000000)
An Overflow Occurred in the node b0

State 393 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 44236800 (00000000 00000000 00000000 00000000 00000010 10100011 00000000 00000000)

State 394 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 172800 (00000000 00000000 00000000 00000000 00000000 00000010 10100011 00000000)

State 395 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 172800 (00000000 00000000 00000000 00000000 00000000 00000010 10100011 00000000)

State 398 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -68290560 (11111111 11111111 11111111 11111111 11111011 11101101 11111000 00000000)

State 399 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -266760 (11111111 11111111 11111111 11111111 11111111 11111011 11101101 11111000)

State 400 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -93960 (11111111 11111111 11111111 11111111 11111111 11111110 10010000 11111000)

State 403 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 24672000 (00000000 00000000 00000000 00000000 00000001 01111000 01110111 00000000)

State 404 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 96375 (00000000 00000000 00000000 00000000 00000000 00000001 01111000 01110111)

State 405 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 2415 (00000000 00000000 00000000 00000000 00000000 00000000 00001001 01101111)

State 409 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 1026 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00000010)

State 412 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 1280 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 00000000)

State 414 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 417 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -327680 (11111111 11111111 11111111 11111111 11111111 11111011 00000000 00000000)

State 418 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -1280 (11111111 11111111 11111111 11111111 11111111 11111111 11111011 00000000)

State 421 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 1280 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 00000000)

State 424 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 425 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 428 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 1280 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 00000000)

State 431 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 1376 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 01100000)

State 437 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 1376 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 01100000)
An Overflow Occurred in the node b0

State 443 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 47554560 (00000000 00000000 00000000 00000000 00000010 11010101 10100000 00000000)

State 444 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 185760 (00000000 00000000 00000000 00000000 00000000 00000010 11010101 10100000)

State 445 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 185760 (00000000 00000000 00000000 00000000 00000000 00000010 11010101 10100000)

State 448 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -85196800 (11111111 11111111 11111111 11111111 11111010 11101100 00000000 00000000)

State 449 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -332800 (11111111 11111111 11111111 11111111 11111111 11111010 11101100 00000000)

State 450 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -147040 (11111111 11111111 11111111 11111111 11111111 11111101 11000001 10100000)

State 453 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 32832000 (00000000 00000000 00000000 00000000 00000001 11110100 11111010 00000000)

State 454 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 128250 (00000000 00000000 00000000 00000000 00000000 00000001 11110100 11111010)

State 455 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -18790 (11111111 11111111 11111111 11111111 11111111 11111111 10110110 10011010)

State 459 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 1280 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 00000000)

State 462 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 1376 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 01100000)

State 464 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 467 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -352256 (11111111 11111111 11111111 11111111 11111111 11111010 10100000 00000000)

State 468 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -1376 (11111111 11111111 11111111 11111111 11111111 11111111 11111010 10100000)

State 471 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 1376 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 01100000)

State 474 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 475 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 478 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 1376 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 01100000)

State 481 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 1408 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 10000000)

State 487 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 1408 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 10000000)
An Overflow Occurred in the node b0

State 493 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 48660480 (00000000 00000000 00000000 00000000 00000010 11100110 10000000 00000000)

State 494 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 190080 (00000000 00000000 00000000 00000000 00000000 00000010 11100110 10000000)

State 495 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 190080 (00000000 00000000 00000000 00000000 00000000 00000010 11100110 10000000)

State 498 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -91586560 (11111111 11111111 11111111 11111111 11111010 10001010 10000000 00000000)

State 499 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -357760 (11111111 11111111 11111111 11111111 11111111 11111010 10001010 10000000)

State 500 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -167680 (11111111 11111111 11111111 11111111 11111111 11111101 01110001 00000000)

State 503 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 40960000 (00000000 00000000 00000000 00000000 00000010 01110001 00000000 00000000)

State 504 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 160000 (00000000 00000000 00000000 00000000 00000000 00000010 01110001 00000000)

State 505 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -7680 (11111111 11111111 11111111 11111111 11111111 11111111 11100010 00000000)

State 509 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 1376 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 01100000)

State 512 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 1408 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 10000000)

State 514 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 517 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -360448 (11111111 11111111 11111111 11111111 11111111 11111010 10000000 00000000)

State 518 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -1408 (11111111 11111111 11111111 11111111 11111111 11111111 11111010 10000000)

State 521 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 1408 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 10000000)

State 524 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 525 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 528 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 1408 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 10000000)

State 531 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 1152 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 10000000)

State 537 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 1152 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 10000000)
An Overflow Occurred in the node b0

State 543 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 39813120 (00000000 00000000 00000000 00000000 00000010 01011111 10000000 00000000)

State 544 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 155520 (00000000 00000000 00000000 00000000 00000000 00000010 01011111 10000000)

State 545 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 155520 (00000000 00000000 00000000 00000000 00000000 00000010 01011111 10000000)

State 548 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -93716480 (11111111 11111111 11111111 11111111 11111010 01101010 00000000 00000000)

State 549 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -366080 (11111111 11111111 11111111 11111111 11111111 11111010 01101010 00000000)

State 550 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -210560 (11111111 11111111 11111111 11111111 11111111 11111100 11001001 10000000)

State 553 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 44032000 (00000000 00000000 00000000 00000000 00000010 10011111 11100000 00000000)

State 554 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 172000 (00000000 00000000 00000000 00000000 00000000 00000010 10011111 11100000)

State 555 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -38560 (11111111 11111111 11111111 11111111 11111111 11111111 01101001 01100000)

State 559 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 1408 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 10000000)

State 562 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 1152 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 10000000)

State 564 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 567 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -294912 (11111111 11111111 11111111 11111111 11111111 11111011 10000000 00000000)

State 568 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -1152 (11111111 11111111 11111111 11111111 11111111 11111111 11111011 10000000)

State 571 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 1152 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 10000000)

State 574 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 575 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 578 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 1152 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 10000000)

State 581 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 1280 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 00000000)

State 587 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 1280 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 00000000)
An Overflow Occurred in the node b0

State 593 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 44236800 (00000000 00000000 00000000 00000000 00000010 10100011 00000000 00000000)

State 594 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 172800 (00000000 00000000 00000000 00000000 00000000 00000010 10100011 00000000)

State 595 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 172800 (00000000 00000000 00000000 00000000 00000000 00000010 10100011 00000000)

State 598 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -76677120 (11111111 11111111 11111111 11111111 11111011 01101110 00000000 00000000)

State 599 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -299520 (11111111 11111111 11111111 11111111 11111111 11111011 01101110 00000000)

State 600 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -126720 (11111111 11111111 11111111 11111111 11111111 11111110 00010001 00000000)

State 603 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 45056000 (00000000 00000000 00000000 00000000 00000010 10101111 10000000 00000000)

State 604 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 176000 (00000000 00000000 00000000 00000000 00000000 00000010 10101111 10000000)

State 605 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 49280 (00000000 00000000 00000000 00000000 00000000 00000000 11000000 10000000)
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output

State 632 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-04-impl2.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-04-impl2.c: Parsing
In file included from benchmarks/ds-04-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-04-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-04-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.154s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 3 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 3 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 3 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 3 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 3 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.165s (2179 assignments)
Slicing time: 0.005s (removed 650 assignments)
Generated 577 VCC(s), 354 remaining after simplification (1529 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.093s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.093s
Runtime decision procedure: 95.953s
BMC program time: 96.216s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-04-impl3.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-04-impl3.c: Parsing
In file included from benchmarks/ds-04-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-04-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-04-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.182s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 3 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 3 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 3 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 3 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 3 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.169s (2179 assignments)
Slicing time: 0.004s (removed 650 assignments)
Generated 577 VCC(s), 354 remaining after simplification (1529 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.091s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.091s
Runtime decision procedure: 80.673s
BMC program time: 80.938s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-05-impl1.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-05-impl1.c: Parsing
In file included from benchmarks/ds-05-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-05-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-05-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.158s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 3 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 3 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 3 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 3 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 3 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.168s (2179 assignments)
Slicing time: 0.004s (removed 650 assignments)
Generated 577 VCC(s), 354 remaining after simplification (1529 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.090s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.090s
Runtime decision procedure: 11.838s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 64.000000 (01000000 01010000 00000000 00000000 00000000 00000000 00000000 00000000)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 64 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 01000000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 64.000000 (01000000 01010000 00000000 00000000 00000000 00000000 00000000 00000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 1.281280e+5 (01000000 11111111 01001000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 128128 (00000000 00000000 00000000 00000000 00000000 00000001 11110100 10000000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 58 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 59 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 60 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 2.560000e+5 (01000001 00001111 01000000 00000000 00000000 00000000 00000000 00000000)

State 70 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 1.278720e+5 (01000000 11111111 00111000 00000000 00000000 00000000 00000000 00000000)

State 71 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 127872 (00000000 00000000 00000000 00000000 00000000 00000001 11110011 10000000)

State 72 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 73 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 74 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 76 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 77 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = -60 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000100)

State 79 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 80 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = -64 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000000)

State 82 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 83 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = -4 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111100)

State 85 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 86 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = 29 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00011101)

State 88 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 89 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = 64 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 01000000)

State 91 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 92 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = 43 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00101011)

State 94 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 95 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = -32 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11100000)

State 97 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 98 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = 37 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00100101)

State 100 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 101 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = -16 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11110000)

State 103 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 104 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 105 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 109 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 112 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 114 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 117 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 118 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 121 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 124 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 125 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 128 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 131 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 137 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node b0

State 143 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 144 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 145 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 148 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 149 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 150 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 153 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 154 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 155 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 159 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 162 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 164 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 167 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 168 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 171 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 174 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 175 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 178 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 181 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -60 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000100)

State 187 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-60 << 6) / 64
An Overflow Occurred in the node b0

State 193 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -7687680 (11111111 11111111 11111111 11111111 11111111 10001010 10110010 00000000)

State 194 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -120120 (11111111 11111111 11111111 11111111 11111111 11111110 00101010 11001000)

State 195 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -120120 (11111111 11111111 11111111 11111111 11111111 11111110 00101010 11001000)

State 198 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 199 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 200 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -120120 (11111111 11111111 11111111 11111111 11111111 11111110 00101010 11001000)

State 203 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 204 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 205 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -120120 (11111111 11111111 11111111 11111111 11111111 11111110 00101010 11001000)

State 209 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 212 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -60 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000100)

State 214 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 217 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 218 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 221 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 224 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 225 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 228 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 231 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -64 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000000)

State 237 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-64 << 6) / 64
An Overflow Occurred in the node b0

State 243 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -8200192 (11111111 11111111 11111111 11111111 11111111 10000010 11100000 00000000)

State 244 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -128128 (11111111 11111111 11111111 11111111 11111111 11111110 00001011 10000000)

State 245 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -128128 (11111111 11111111 11111111 11111111 11111111 11111110 00001011 10000000)

State 248 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 15360000 (00000000 00000000 00000000 00000000 00000000 11101010 01100000 00000000)

State 249 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 240000 (00000000 00000000 00000000 00000000 00000000 00000011 10101001 10000000)

State 250 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 111872 (00000000 00000000 00000000 00000000 00000000 00000001 10110101 00000000)

State 253 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 254 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 255 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 111872 (00000000 00000000 00000000 00000000 00000000 00000001 10110101 00000000)

State 259 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -60 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000100)

State 262 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -64 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000000)

State 264 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 267 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 268 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 271 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 274 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 3840 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 00000000)

State 275 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 60 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00111100)

State 278 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -60 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000100)

State 281 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -64 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000000)

State 287 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-64 << 6) / 64
An Overflow Occurred in the node b0

State 293 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -8200192 (11111111 11111111 11111111 11111111 11111111 10000010 11100000 00000000)

State 294 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -128128 (11111111 11111111 11111111 11111111 11111111 11111110 00001011 10000000)

State 295 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -128128 (11111111 11111111 11111111 11111111 11111111 11111110 00001011 10000000)

State 298 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 16384000 (00000000 00000000 00000000 00000000 00000000 11111010 00000000 00000000)

State 299 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 256000 (00000000 00000000 00000000 00000000 00000000 00000011 11101000 00000000)

State 300 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 127872 (00000000 00000000 00000000 00000000 00000000 00000001 11110011 10000000)

State 303 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -7672320 (11111111 11111111 11111111 11111111 11111111 10001010 11101110 00000000)

State 304 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -119880 (11111111 11111111 11111111 11111111 11111111 11111110 00101011 10111000)

State 305 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 7992 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 00111000)

State 309 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -64 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000000)

State 312 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -64 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000000)

State 314 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 317 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 318 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 321 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 324 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 4096 (00000000 00000000 00000000 00000000 00000000 00000000 00010000 00000000)

State 325 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 64 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 01000000)

State 328 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -64 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000000)

State 331 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -35 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11011101)

State 337 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-35 << 6) / 64
An Overflow Occurred in the node b0

State 343 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -4484480 (11111111 11111111 11111111 11111111 11111111 10111011 10010010 10000000)

State 344 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -70070 (11111111 11111111 11111111 11111111 11111111 11111110 11101110 01001010)

State 345 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -70070 (11111111 11111111 11111111 11111111 11111111 11111110 11101110 01001010)

State 348 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 16384000 (00000000 00000000 00000000 00000000 00000000 11111010 00000000 00000000)

State 349 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 256000 (00000000 00000000 00000000 00000000 00000000 00000011 11101000 00000000)

State 350 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 185930 (00000000 00000000 00000000 00000000 00000000 00000010 11010110 01001010)

State 353 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -8183808 (11111111 11111111 11111111 11111111 11111111 10000011 00100000 00000000)

State 354 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -127872 (11111111 11111111 11111111 11111111 11111111 11111110 00001100 10000000)

State 355 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 58058 (00000000 00000000 00000000 00000000 00000000 00000000 11100010 11001010)

State 359 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -64 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000000)

State 362 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -35 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11011101)

State 364 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 367 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 368 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 371 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 374 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 4096 (00000000 00000000 00000000 00000000 00000000 00000000 00010000 00000000)

State 375 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 64 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 01000000)

State 378 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -64 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000000)

State 381 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 387 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node b0

State 393 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 394 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 395 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 398 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 8960000 (00000000 00000000 00000000 00000000 00000000 10001000 10111000 00000000)

State 399 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 140000 (00000000 00000000 00000000 00000000 00000000 00000010 00100010 11100000)

State 400 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 140000 (00000000 00000000 00000000 00000000 00000000 00000010 00100010 11100000)

State 403 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -8183808 (11111111 11111111 11111111 11111111 11111111 10000011 00100000 00000000)

State 404 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -127872 (11111111 11111111 11111111 11111111 11111111 11111110 00001100 10000000)

State 405 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 12128 (00000000 00000000 00000000 00000000 00000000 00000000 00101111 01100000)

State 409 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -35 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11011101)

State 412 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 414 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 417 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 418 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 421 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 424 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 2240 (00000000 00000000 00000000 00000000 00000000 00000000 00001000 11000000)

State 425 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 35 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00100011)

State 428 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -35 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11011101)

State 431 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 8 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001000)

State 437 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 8 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001000)
An Overflow Occurred in the node b0

State 443 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 1025024 (00000000 00000000 00000000 00000000 00000000 00001111 10100100 00000000)

State 444 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 16016 (00000000 00000000 00000000 00000000 00000000 00000000 00111110 10010000)

State 445 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 16016 (00000000 00000000 00000000 00000000 00000000 00000000 00111110 10010000)

State 448 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 449 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 450 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 16016 (00000000 00000000 00000000 00000000 00000000 00000000 00111110 10010000)

State 453 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -4475520 (11111111 11111111 11111111 11111111 11111111 10111011 10110101 10000000)

State 454 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -69930 (11111111 11111111 11111111 11111111 11111111 11111110 11101110 11010110)

State 455 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -53914 (11111111 11111111 11111111 11111111 11111111 11111111 00101101 01100110)

State 459 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 462 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 8 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001000)

State 464 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 467 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 468 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 471 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 474 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 475 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 478 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 481 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -32 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11100000)

State 487 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-32 << 6) / 64
An Overflow Occurred in the node b0

State 493 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -4100096 (11111111 11111111 11111111 11111111 11111111 11000001 01110000 00000000)

State 494 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -64064 (11111111 11111111 11111111 11111111 11111111 11111111 00000101 11000000)

State 495 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -64064 (11111111 11111111 11111111 11111111 11111111 11111111 00000101 11000000)

State 498 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -2048000 (11111111 11111111 11111111 11111111 11111111 11100000 11000000 00000000)

State 499 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -32000 (11111111 11111111 11111111 11111111 11111111 11111111 10000011 00000000)

State 500 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -96064 (11111111 11111111 11111111 11111111 11111111 11111110 10001000 11000000)

State 503 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 504 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 505 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -96064 (11111111 11111111 11111111 11111111 11111111 11111110 10001000 11000000)

State 509 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 8 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001000)

State 512 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -32 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11100000)

State 514 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 517 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 518 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 521 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 524 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -512 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 00000000)

State 525 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -8 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111000)

State 528 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 8 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001000)

State 531 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 45 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00101101)

State 537 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 45 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00101101)
An Overflow Occurred in the node b0

State 543 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 5765760 (00000000 00000000 00000000 00000000 00000000 01010111 11111010 10000000)

State 544 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 90090 (00000000 00000000 00000000 00000000 00000000 00000001 01011111 11101010)

State 545 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 90090 (00000000 00000000 00000000 00000000 00000000 00000001 01011111 11101010)

State 548 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 8192000 (00000000 00000000 00000000 00000000 00000000 01111101 00000000 00000000)

State 549 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 128000 (00000000 00000000 00000000 00000000 00000000 00000001 11110100 00000000)

State 550 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 218090 (00000000 00000000 00000000 00000000 00000000 00000011 01010011 11101010)

State 553 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 1022976 (00000000 00000000 00000000 00000000 00000000 00001111 10011100 00000000)

State 554 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 15984 (00000000 00000000 00000000 00000000 00000000 00000000 00111110 01110000)

State 555 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 234074 (00000000 00000000 00000000 00000000 00000000 00000011 10010010 01011010)

State 559 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -32 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11100000)

State 562 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 45 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00101101)

State 564 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 567 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 568 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 571 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 574 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 2048 (00000000 00000000 00000000 00000000 00000000 00000000 00001000 00000000)

State 575 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 32 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00100000)

State 578 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -32 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11100000)

State 581 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -48 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11010000)

State 587 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-48 << 6) / 64
An Overflow Occurred in the node b0

State 593 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -6150144 (11111111 11111111 11111111 11111111 11111111 10100010 00101000 00000000)

State 594 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -96096 (11111111 11111111 11111111 11111111 11111111 11111110 10001000 10100000)

State 595 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -96096 (11111111 11111111 11111111 11111111 11111111 11111110 10001000 10100000)

State 598 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -11520000 (11111111 11111111 11111111 11111111 11111111 01010000 00111000 00000000)

State 599 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -180000 (11111111 11111111 11111111 11111111 11111111 11111101 01000000 11100000)

State 600 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -276096 (11111111 11111111 11111111 11111111 11111111 11111011 11001001 10000000)

State 603 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -4091904 (11111111 11111111 11111111 11111111 11111111 11000001 10010000 00000000)

State 604 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -63936 (11111111 11111111 11111111 11111111 11111111 11111111 00000110 01000000)

State 605 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -340032 (11111111 11111111 11111111 11111111 11111111 11111010 11001111 11000000)
An Overflow Occurred in system's output
An Overflow Occurred in system's output

State 611 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-05-impl2.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-05-impl2.c: Parsing
In file included from benchmarks/ds-05-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-05-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-05-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.254s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 3 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 3 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 3 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 3 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 3 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.165s (2179 assignments)
Slicing time: 0.004s (removed 650 assignments)
Generated 577 VCC(s), 354 remaining after simplification (1529 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.089s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.089s
Runtime decision procedure: 12.750s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 16.000000 (01000000 00110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 16 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00010000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 16.000000 (01000000 00110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 32032.000000 (01000000 11011111 01001000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 32032 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00100000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 58 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 59 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 60 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 64000.000000 (01000000 11101111 01000000 00000000 00000000 00000000 00000000 00000000)

State 70 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 31968.000000 (01000000 11011111 00111000 00000000 00000000 00000000 00000000 00000000)

State 71 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 31968 (00000000 00000000 00000000 00000000 00000000 00000000 01111100 11100000)

State 72 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 73 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 74 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = 2 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000010)

State 76 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 77 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = 10 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001010)

State 79 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 80 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = -16 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11110000)

State 82 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 83 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = -2 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111110)

State 85 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 86 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = 16 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00010000)

State 88 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 89 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = -1 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111111)

State 91 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 92 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = 14 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001110)

State 94 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 95 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 97 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 98 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = 13 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001101)

State 100 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 101 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = 16 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00010000)

State 103 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 104 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 105 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 109 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 112 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 114 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 117 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 118 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 121 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 124 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 125 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 128 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 131 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 2 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000010)

State 137 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 2 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000010)
An Overflow Occurred in the node b0

State 143 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 64064 (00000000 00000000 00000000 00000000 00000000 00000000 11111010 01000000)

State 144 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 4004 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 10100100)

State 145 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 4004 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 10100100)

State 148 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 149 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 150 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 4004 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 10100100)

State 153 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 154 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 155 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 4004 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 10100100)

State 159 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 162 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 2 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000010)

State 164 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 167 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 168 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 171 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 174 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 175 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 178 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 181 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 10 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001010)

State 187 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 10 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001010)
An Overflow Occurred in the node b0

State 193 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 320320 (00000000 00000000 00000000 00000000 00000000 00000100 11100011 01000000)

State 194 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 20020 (00000000 00000000 00000000 00000000 00000000 00000000 01001110 00110100)

State 195 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 20020 (00000000 00000000 00000000 00000000 00000000 00000000 01001110 00110100)

State 198 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -128000 (11111111 11111111 11111111 11111111 11111111 11111110 00001100 00000000)

State 199 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -8000 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 11000000)

State 200 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 12020 (00000000 00000000 00000000 00000000 00000000 00000000 00101110 11110100)

State 203 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 204 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 205 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 12020 (00000000 00000000 00000000 00000000 00000000 00000000 00101110 11110100)

State 209 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 2 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000010)

State 212 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 10 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001010)

State 214 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 217 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 218 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 221 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 224 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -32 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11100000)

State 225 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -2 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111110)

State 228 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 2 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000010)

State 231 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -14 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11110010)

State 237 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-14 << 4) / 16
An Overflow Occurred in the node b0

State 243 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -448448 (11111111 11111111 11111111 11111111 11111111 11111001 00101000 01000000)

State 244 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -28028 (11111111 11111111 11111111 11111111 11111111 11111111 10010010 10000100)

State 245 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -28028 (11111111 11111111 11111111 11111111 11111111 11111111 10010010 10000100)

State 248 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -640000 (11111111 11111111 11111111 11111111 11111111 11110110 00111100 00000000)

State 249 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -40000 (11111111 11111111 11111111 11111111 11111111 11111111 01100011 11000000)

State 250 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -68028 (11111111 11111111 11111111 11111111 11111111 11111110 11110110 01000100)

State 253 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 63936 (00000000 00000000 00000000 00000000 00000000 00000000 11111001 11000000)

State 254 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 3996 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 10011100)

State 255 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -64032 (11111111 11111111 11111111 11111111 11111111 11111111 00000101 11100000)

State 259 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 10 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001010)

State 262 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -14 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11110010)

State 264 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 267 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 268 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 271 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 274 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -160 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 01100000)

State 275 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -10 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11110110)

State 278 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 10 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001010)

State 281 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 8 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001000)

State 287 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 8 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001000)
An Overflow Occurred in the node b0

State 293 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 256256 (00000000 00000000 00000000 00000000 00000000 00000011 11101001 00000000)

State 294 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 16016 (00000000 00000000 00000000 00000000 00000000 00000000 00111110 10010000)

State 295 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 16016 (00000000 00000000 00000000 00000000 00000000 00000000 00111110 10010000)

State 298 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 896000 (00000000 00000000 00000000 00000000 00000000 00001101 10101100 00000000)

State 299 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 56000 (00000000 00000000 00000000 00000000 00000000 00000000 11011010 11000000)

State 300 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 72016 (00000000 00000000 00000000 00000000 00000000 00000001 00011001 01010000)

State 303 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 319680 (00000000 00000000 00000000 00000000 00000000 00000100 11100000 11000000)

State 304 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 19980 (00000000 00000000 00000000 00000000 00000000 00000000 01001110 00001100)

State 305 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 91996 (00000000 00000000 00000000 00000000 00000000 00000001 01100111 01011100)

State 309 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -14 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11110010)

State 312 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 8 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001000)

State 314 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 317 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 318 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 321 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 324 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 224 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 11100000)

State 325 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 14 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001110)

State 328 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -14 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11110010)

State 331 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 2 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000010)

State 337 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 2 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000010)
An Overflow Occurred in the node b0

State 343 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 64064 (00000000 00000000 00000000 00000000 00000000 00000000 11111010 01000000)

State 344 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 4004 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 10100100)

State 345 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 4004 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 10100100)

State 348 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -512000 (11111111 11111111 11111111 11111111 11111111 11111000 00110000 00000000)

State 349 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -32000 (11111111 11111111 11111111 11111111 11111111 11111111 10000011 00000000)

State 350 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -27996 (11111111 11111111 11111111 11111111 11111111 11111111 10010010 10100100)

State 353 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -447552 (11111111 11111111 11111111 11111111 11111111 11111001 00101011 11000000)

State 354 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -27972 (11111111 11111111 11111111 11111111 11111111 11111111 10010010 10111100)

State 355 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -55968 (11111111 11111111 11111111 11111111 11111111 11111111 00100101 01100000)

State 359 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 8 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001000)

State 362 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 2 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000010)

State 364 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 367 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 368 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 371 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 374 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -128 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 10000000)

State 375 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -8 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111000)

State 378 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 8 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001000)

State 381 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)

State 387 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)
An Overflow Occurred in the node b0

State 393 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 224224 (00000000 00000000 00000000 00000000 00000000 00000011 01101011 11100000)

State 394 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 14014 (00000000 00000000 00000000 00000000 00000000 00000000 00110110 10111110)

State 395 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 14014 (00000000 00000000 00000000 00000000 00000000 00000000 00110110 10111110)

State 398 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -128000 (11111111 11111111 11111111 11111111 11111111 11111110 00001100 00000000)

State 399 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -8000 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 11000000)

State 400 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 6014 (00000000 00000000 00000000 00000000 00000000 00000000 00010111 01111110)

State 403 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 255744 (00000000 00000000 00000000 00000000 00000000 00000011 11100111 00000000)

State 404 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 15984 (00000000 00000000 00000000 00000000 00000000 00000000 00111110 01110000)

State 405 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 21998 (00000000 00000000 00000000 00000000 00000000 00000000 01010101 11101110)

State 409 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 2 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000010)

State 412 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)

State 414 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 417 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 418 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 421 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 424 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -32 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11100000)

State 425 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -2 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111110)

State 428 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 2 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000010)

State 431 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 16 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00010000)

State 437 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 16 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00010000)
An Overflow Occurred in the node b0

State 443 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 512512 (00000000 00000000 00000000 00000000 00000000 00000111 11010010 00000000)

State 444 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 32032 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00100000)

State 445 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 32032 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00100000)

State 448 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -448000 (11111111 11111111 11111111 11111111 11111111 11111001 00101010 00000000)

State 449 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -28000 (11111111 11111111 11111111 11111111 11111111 11111111 10010010 10100000)

State 450 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 4032 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 11000000)

State 453 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 63936 (00000000 00000000 00000000 00000000 00000000 00000000 11111001 11000000)

State 454 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 3996 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 10011100)

State 455 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 8028 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 01011100)

State 459 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)

State 462 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 16 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00010000)

State 464 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 467 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 468 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 471 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 474 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -112 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 10010000)

State 475 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -7 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001)

State 478 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)

State 481 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)

State 487 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)
An Overflow Occurred in the node b0

State 493 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 224224 (00000000 00000000 00000000 00000000 00000000 00000011 01101011 11100000)

State 494 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 14014 (00000000 00000000 00000000 00000000 00000000 00000000 00110110 10111110)

State 495 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 14014 (00000000 00000000 00000000 00000000 00000000 00000000 00110110 10111110)

State 498 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -1024000 (11111111 11111111 11111111 11111111 11111111 11110000 01100000 00000000)

State 499 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -64000 (11111111 11111111 11111111 11111111 11111111 11111111 00000110 00000000)

State 500 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -49986 (11111111 11111111 11111111 11111111 11111111 11111111 00111100 10111110)

State 503 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 223776 (00000000 00000000 00000000 00000000 00000000 00000011 01101010 00100000)

State 504 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 13986 (00000000 00000000 00000000 00000000 00000000 00000000 00110110 10100010)

State 505 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -36000 (11111111 11111111 11111111 11111111 11111111 11111111 01110011 01100000)

State 509 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 16 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00010000)

State 512 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)

State 514 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 517 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 518 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 521 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 524 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -256 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 00000000)

State 525 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -16 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11110000)

State 528 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 16 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00010000)

State 531 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 29 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00011101)

State 537 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 29 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00011101)
An Overflow Occurred in the node b0

State 543 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 928928 (00000000 00000000 00000000 00000000 00000000 00001110 00101100 10100000)

State 544 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 58058 (00000000 00000000 00000000 00000000 00000000 00000000 11100010 11001010)

State 545 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 58058 (00000000 00000000 00000000 00000000 00000000 00000000 11100010 11001010)

State 548 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -448000 (11111111 11111111 11111111 11111111 11111111 11111001 00101010 00000000)

State 549 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -28000 (11111111 11111111 11111111 11111111 11111111 11111111 10010010 10100000)

State 550 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 30058 (00000000 00000000 00000000 00000000 00000000 00000000 01110101 01101010)

State 553 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 511488 (00000000 00000000 00000000 00000000 00000000 00000111 11001110 00000000)

State 554 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 31968 (00000000 00000000 00000000 00000000 00000000 00000000 01111100 11100000)

State 555 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 62026 (00000000 00000000 00000000 00000000 00000000 00000000 11110010 01001010)

State 559 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)

State 562 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 29 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00011101)

State 564 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 567 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 568 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 571 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 574 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -112 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 10010000)

State 575 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -7 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001)

State 578 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)

State 581 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 23 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00010111)

State 587 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 23 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00010111)
An Overflow Occurred in the node b0

State 593 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 736736 (00000000 00000000 00000000 00000000 00000000 00001011 00111101 11100000)

State 594 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 46046 (00000000 00000000 00000000 00000000 00000000 00000000 10110011 11011110)

State 595 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 46046 (00000000 00000000 00000000 00000000 00000000 00000000 10110011 11011110)

State 598 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -1856000 (11111111 11111111 11111111 11111111 11111111 11100011 10101110 00000000)

State 599 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -116000 (11111111 11111111 11111111 11111111 11111111 11111110 00111010 11100000)

State 600 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -69954 (11111111 11111111 11111111 11111111 11111111 11111110 11101110 10111110)

State 603 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 223776 (00000000 00000000 00000000 00000000 00000000 00000011 01101010 00100000)

State 604 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 13986 (00000000 00000000 00000000 00000000 00000000 00000000 00110110 10100010)

State 605 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -55968 (11111111 11111111 11111111 11111111 11111111 11111111 00100101 01100000)
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output

State 614 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-05-impl3.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-05-impl3.c: Parsing
In file included from benchmarks/ds-05-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-05-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-05-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.151s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 3 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 3 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 3 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 3 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 3 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 95 iteration 2 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 130 iteration 2 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 3 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.161s (2179 assignments)
Slicing time: 0.004s (removed 650 assignments)
Generated 577 VCC(s), 354 remaining after simplification (1529 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.088s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.088s
Runtime decision procedure: 17.566s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 8.000000 (01000000 00100000 00000000 00000000 00000000 00000000 00000000 00000000)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 8 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 8.000000 (01000000 00100000 00000000 00000000 00000000 00000000 00000000 00000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 16016.000000 (01000000 11001111 01001000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 16016 (00000000 00000000 00000000 00000000 00000000 00000000 00111110 10010000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 58 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 59 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 60 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 32000.000000 (01000000 11011111 01000000 00000000 00000000 00000000 00000000 00000000)

State 70 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 15984.000000 (01000000 11001111 00111000 00000000 00000000 00000000 00000000 00000000)

State 71 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 15984 (00000000 00000000 00000000 00000000 00000000 00000000 00111110 01110000)

State 72 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 73 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 74 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 76 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 77 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = -7 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001)

State 79 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 80 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)

State 82 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 83 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = 5 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000101)

State 85 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 86 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = 5 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000101)

State 88 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 89 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = 2 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000010)

State 91 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 92 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = -7 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001)

State 94 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 95 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = -7 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001)

State 97 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 98 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = -7 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001)

State 100 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 101 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = -7 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001)

State 103 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 104 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 105 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 109 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 112 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 114 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 117 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 118 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 121 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 124 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 125 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 128 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 131 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 137 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node b0

State 143 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 144 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 145 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 148 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 149 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 150 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 153 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 154 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 155 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 159 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 162 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 164 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 167 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 168 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 171 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 174 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 175 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 178 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 181 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -7 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001)

State 187 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-7 << 3) / 8
An Overflow Occurred in the node b0

State 193 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -112112 (11111111 11111111 11111111 11111111 11111111 11111110 01001010 00010000)

State 194 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -14014 (11111111 11111111 11111111 11111111 11111111 11111111 11001001 01000010)

State 195 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -14014 (11111111 11111111 11111111 11111111 11111111 11111111 11001001 01000010)

State 198 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 199 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 200 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -14014 (11111111 11111111 11111111 11111111 11111111 11111111 11001001 01000010)

State 203 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 204 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 205 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -14014 (11111111 11111111 11111111 11111111 11111111 11111111 11001001 01000010)

State 209 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 212 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -7 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001)

State 214 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 217 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 218 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 221 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 224 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 225 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 228 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 231 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)

State 237 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)
An Overflow Occurred in the node b0

State 243 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 112112 (00000000 00000000 00000000 00000000 00000000 00000001 10110101 11110000)

State 244 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 14014 (00000000 00000000 00000000 00000000 00000000 00000000 00110110 10111110)

State 245 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 14014 (00000000 00000000 00000000 00000000 00000000 00000000 00110110 10111110)

State 248 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 224000 (00000000 00000000 00000000 00000000 00000000 00000011 01101011 00000000)

State 249 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 28000 (00000000 00000000 00000000 00000000 00000000 00000000 01101101 01100000)

State 250 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 42014 (00000000 00000000 00000000 00000000 00000000 00000000 10100100 00011110)

State 253 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 254 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 255 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 42014 (00000000 00000000 00000000 00000000 00000000 00000000 10100100 00011110)

State 259 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -7 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001)

State 262 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)

State 264 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 267 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 268 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 271 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 274 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 56 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00111000)

State 275 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)

State 278 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -7 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001)

State 281 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -2 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111110)

State 287 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-2 << 3) / 8
An Overflow Occurred in the node b0

State 293 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -32032 (11111111 11111111 11111111 11111111 11111111 11111111 10000010 11100000)

State 294 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -4004 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 01011100)

State 295 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -4004 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 01011100)

State 298 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -224000 (11111111 11111111 11111111 11111111 11111111 11111100 10010101 00000000)

State 299 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -28000 (11111111 11111111 11111111 11111111 11111111 11111111 10010010 10100000)

State 300 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -32004 (11111111 11111111 11111111 11111111 11111111 11111111 10000010 11111100)

State 303 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -111888 (11111111 11111111 11111111 11111111 11111111 11111110 01001010 11110000)

State 304 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -13986 (11111111 11111111 11111111 11111111 11111111 11111111 11001001 01011110)

State 305 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -45990 (11111111 11111111 11111111 11111111 11111111 11111111 01001100 01011010)

State 309 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)

State 312 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -2 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111110)

State 314 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 317 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 318 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 321 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 324 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -56 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11001000)

State 325 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -7 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001)

State 328 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)

State 331 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 12 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001100)

State 337 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 12 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001100)
An Overflow Occurred in the node b0

State 343 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 192192 (00000000 00000000 00000000 00000000 00000000 00000010 11101110 11000000)

State 344 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 24024 (00000000 00000000 00000000 00000000 00000000 00000000 01011101 11011000)

State 345 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 24024 (00000000 00000000 00000000 00000000 00000000 00000000 01011101 11011000)

State 348 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 64000 (00000000 00000000 00000000 00000000 00000000 00000000 11111010 00000000)

State 349 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 8000 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 01000000)

State 350 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 32024 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00011000)

State 353 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 111888 (00000000 00000000 00000000 00000000 00000000 00000001 10110101 00010000)

State 354 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 13986 (00000000 00000000 00000000 00000000 00000000 00000000 00110110 10100010)

State 355 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 46010 (00000000 00000000 00000000 00000000 00000000 00000000 10110011 10111010)

State 359 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -2 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111110)

State 362 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 12 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001100)

State 364 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 367 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 368 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 371 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 374 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 16 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00010000)

State 375 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 2 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000010)

State 378 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -2 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111110)

State 381 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 387 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node b0

State 393 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 394 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 395 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 398 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -384000 (11111111 11111111 11111111 11111111 11111111 11111010 00100100 00000000)

State 399 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -48000 (11111111 11111111 11111111 11111111 11111111 11111111 01000100 10000000)

State 400 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -48000 (11111111 11111111 11111111 11111111 11111111 11111111 01000100 10000000)

State 403 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -31968 (11111111 11111111 11111111 11111111 11111111 11111111 10000011 00100000)

State 404 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -3996 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 01100100)

State 405 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -51996 (11111111 11111111 11111111 11111111 11111111 11111111 00110100 11100100)

State 409 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 12 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001100)

State 412 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 414 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 417 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 418 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 421 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 424 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -96 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 10100000)

State 425 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -12 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11110100)

State 428 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 12 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001100)

State 431 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 5 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000101)

State 437 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 5 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000101)
An Overflow Occurred in the node b0

State 443 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 80080 (00000000 00000000 00000000 00000000 00000000 00000001 00111000 11010000)

State 444 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 10010 (00000000 00000000 00000000 00000000 00000000 00000000 00100111 00011010)

State 445 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 10010 (00000000 00000000 00000000 00000000 00000000 00000000 00100111 00011010)

State 448 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 449 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 450 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 10010 (00000000 00000000 00000000 00000000 00000000 00000000 00100111 00011010)

State 453 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 191808 (00000000 00000000 00000000 00000000 00000000 00000010 11101101 01000000)

State 454 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 23976 (00000000 00000000 00000000 00000000 00000000 00000000 01011101 10101000)

State 455 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 33986 (00000000 00000000 00000000 00000000 00000000 00000000 10000100 11000010)

State 459 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 462 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 5 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000101)

State 464 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 467 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 468 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 471 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 474 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 475 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 478 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 481 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -7 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001)

State 487 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-7 << 3) / 8
An Overflow Occurred in the node b0

State 493 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -112112 (11111111 11111111 11111111 11111111 11111111 11111110 01001010 00010000)

State 494 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -14014 (11111111 11111111 11111111 11111111 11111111 11111111 11001001 01000010)

State 495 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -14014 (11111111 11111111 11111111 11111111 11111111 11111111 11001001 01000010)

State 498 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -160000 (11111111 11111111 11111111 11111111 11111111 11111101 10001111 00000000)

State 499 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -20000 (11111111 11111111 11111111 11111111 11111111 11111111 10110001 11100000)

State 500 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -34014 (11111111 11111111 11111111 11111111 11111111 11111111 01111011 00100010)

State 503 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 504 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 505 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -34014 (11111111 11111111 11111111 11111111 11111111 11111111 01111011 00100010)

State 509 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 5 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000101)

State 512 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -7 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001)

State 514 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 517 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 518 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 521 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 524 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -40 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11011000)

State 525 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -5 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111011)

State 528 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 5 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000101)

State 531 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -2 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111110)

State 537 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-2 << 3) / 8
An Overflow Occurred in the node b0

State 543 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -32032 (11111111 11111111 11111111 11111111 11111111 11111111 10000010 11100000)

State 544 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -4004 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 01011100)

State 545 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -4004 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 01011100)

State 548 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 224000 (00000000 00000000 00000000 00000000 00000000 00000011 01101011 00000000)

State 549 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 28000 (00000000 00000000 00000000 00000000 00000000 00000000 01101101 01100000)

State 550 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 23996 (00000000 00000000 00000000 00000000 00000000 00000000 01011101 10111100)

State 553 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 79920 (00000000 00000000 00000000 00000000 00000000 00000001 00111000 00110000)

State 554 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 9990 (00000000 00000000 00000000 00000000 00000000 00000000 00100111 00000110)

State 555 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 33986 (00000000 00000000 00000000 00000000 00000000 00000000 10000100 11000010)

State 559 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -7 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001)

State 562 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -2 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111110)

State 564 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 567 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 568 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 571 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 574 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 56 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00111000)

State 575 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)

State 578 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -7 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001)

State 581 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -14 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11110010)

State 587 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-14 << 3) / 8
An Overflow Occurred in the node b0

State 593 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -224224 (11111111 11111111 11111111 11111111 11111111 11111100 10010100 00100000)

State 594 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -28028 (11111111 11111111 11111111 11111111 11111111 11111111 10010010 10000100)

State 595 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -28028 (11111111 11111111 11111111 11111111 11111111 11111111 10010010 10000100)

State 598 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 64000 (00000000 00000000 00000000 00000000 00000000 00000000 11111010 00000000)

State 599 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 8000 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 01000000)

State 600 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -20028 (11111111 11111111 11111111 11111111 11111111 11111111 10110001 11000100)

State 603 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -111888 (11111111 11111111 11111111 11111111 11111111 11111110 01001010 11110000)

State 604 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -13986 (11111111 11111111 11111111 11111111 11111111 11111111 11001001 01011110)

State 605 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -34014 (11111111 11111111 11111111 11111111 11111111 11111111 01111011 00100010)
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output

State 614 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-06-impl1.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-06-impl1.c: Parsing
In file included from benchmarks/ds-06-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-06-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-06-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.364s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.120s (1599 assignments)
Slicing time: 0.003s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.076s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.076s
Runtime decision procedure: 36.229s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 4096.000000 (01000000 10110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 4096 (00000000 00000000 00000000 00000000 00000000 00000000 00010000 00000000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 4096.000000 (01000000 10110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 4096 (00000000 00000000 00000000 00000000 00000000 00000000 00010000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 3.809280e+3 (01000000 10101101 11000010 10001111 01011100 00101000 11110101 11000011)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 3809 (00000000 00000000 00000000 00000000 00000000 00000000 00001110 11100001)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 2.800000e-1 (00111111 11010001 11101011 10000101 00011110 10111000 01100000 00000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 3563.000000 (01000000 10101011 11010110 00000000 00000000 00000000 00000000 00000000)

State 49 file fixed-point.h line 236 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = -1.000000 (10111111 11110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 50 file fixed-point.h line 237 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 51 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 52 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = 4096 (00000000 00000000 00000000 00000000 00000000 00000000 00010000 00000000)

State 54 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 55 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = -4096 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 00000000)

State 57 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 58 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = 4096 (00000000 00000000 00000000 00000000 00000000 00000000 00010000 00000000)

State 60 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 61 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = -4096 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 00000000)

State 63 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 64 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = 4096 (00000000 00000000 00000000 00000000 00000000 00000000 00010000 00000000)

State 66 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 67 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = -4096 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 00000000)

State 69 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 70 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = 4096 (00000000 00000000 00000000 00000000 00000000 00000000 00010000 00000000)

State 72 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 73 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = -4096 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 00000000)

State 75 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 76 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = 3072 (00000000 00000000 00000000 00000000 00000000 00000000 00001100 00000000)

State 78 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 79 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = -887 (11111111 11111111 11111111 11111111 11111111 11111111 11111100 10001001)

State 81 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 82 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 86 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 88 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 91 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 92 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 95 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 98 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 4096 (00000000 00000000 00000000 00000000 00000000 00000000 00010000 00000000)

State 104 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 4096 (00000000 00000000 00000000 00000000 00000000 00000000 00010000 00000000)
An Overflow Occurred in the node b0

State 110 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 15601664 (00000000 00000000 00000000 00000000 00000000 11101110 00010000 00000000)

State 111 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 3809 (00000000 00000000 00000000 00000000 00000000 00000000 00001110 11100001)

State 112 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 3809 (00000000 00000000 00000000 00000000 00000000 00000000 00001110 11100001)

State 115 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 116 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 117 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 3809 (00000000 00000000 00000000 00000000 00000000 00000000 00001110 11100001)

State 121 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 4096 (00000000 00000000 00000000 00000000 00000000 00000000 00010000 00000000)

State 123 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 126 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 16777216 (00000000 00000000 00000000 00000000 00000001 00000000 00000000 00000000)

State 127 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 4096 (00000000 00000000 00000000 00000000 00000000 00000000 00010000 00000000)

State 130 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -4096 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 00000000)

State 133 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -8192 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 00000000)

State 139 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-8192 << 12) / 4096
An Overflow Occurred in the node b0

State 145 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -31203328 (11111111 11111111 11111111 11111111 11111110 00100011 11100000 00000000)

State 146 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -7618 (11111111 11111111 11111111 11111111 11111111 11111111 11100010 00111110)

State 147 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -7618 (11111111 11111111 11111111 11111111 11111111 11111111 11100010 00111110)

State 150 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -14598144 (11111111 11111111 11111111 11111111 11111111 00100001 01000000 00000000)

State 151 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -3564 (11111111 11111111 11111111 11111111 11111111 11111111 11110010 00010100)

State 152 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -11182 (11111111 11111111 11111111 11111111 11111111 11111111 11010100 01010010)

State 156 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -8192 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 00000000)

State 158 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 161 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -33554432 (11111111 11111111 11111111 11111111 11111110 00000000 00000000 00000000)

State 162 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -8192 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 00000000)

State 165 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 8192 (00000000 00000000 00000000 00000000 00000000 00000000 00100000 00000000)

State 168 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 12288 (00000000 00000000 00000000 00000000 00000000 00000000 00110000 00000000)

State 174 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 12288 (00000000 00000000 00000000 00000000 00000000 00000000 00110000 00000000)
An Overflow Occurred in the node b0

State 180 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 46804992 (00000000 00000000 00000000 00000000 00000010 11001010 00110000 00000000)

State 181 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 11427 (00000000 00000000 00000000 00000000 00000000 00000000 00101100 10100011)

State 182 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 11427 (00000000 00000000 00000000 00000000 00000000 00000000 00101100 10100011)

State 185 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 29196288 (00000000 00000000 00000000 00000000 00000001 10111101 10000000 00000000)

State 186 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 7128 (00000000 00000000 00000000 00000000 00000000 00000000 00011011 11011000)

State 187 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 18555 (00000000 00000000 00000000 00000000 00000000 00000000 01001000 01111011)

State 191 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 12288 (00000000 00000000 00000000 00000000 00000000 00000000 00110000 00000000)

State 193 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 196 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 50331648 (00000000 00000000 00000000 00000000 00000011 00000000 00000000 00000000)

State 197 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 12288 (00000000 00000000 00000000 00000000 00000000 00000000 00110000 00000000)

State 200 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -12288 (11111111 11111111 11111111 11111111 11111111 11111111 11010000 00000000)

State 203 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -16384 (11111111 11111111 11111111 11111111 11111111 11111111 11000000 00000000)

State 209 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-16384 << 12) / 4096
An Overflow Occurred in the node b0

State 215 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -62406656 (11111111 11111111 11111111 11111111 11111100 01000111 11000000 00000000)

State 216 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -15236 (11111111 11111111 11111111 11111111 11111111 11111111 11000100 01111100)

State 217 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -15236 (11111111 11111111 11111111 11111111 11111111 11111111 11000100 01111100)

State 220 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -43794432 (11111111 11111111 11111111 11111111 11111101 01100011 11000000 00000000)

State 221 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -10692 (11111111 11111111 11111111 11111111 11111111 11111111 11010110 00111100)

State 222 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -25928 (11111111 11111111 11111111 11111111 11111111 11111111 10011010 10111000)

State 226 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -16384 (11111111 11111111 11111111 11111111 11111111 11111111 11000000 00000000)

State 228 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 231 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -67108864 (11111111 11111111 11111111 11111111 11111100 00000000 00000000 00000000)

State 232 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -16384 (11111111 11111111 11111111 11111111 11111111 11111111 11000000 00000000)

State 235 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 16384 (00000000 00000000 00000000 00000000 00000000 00000000 01000000 00000000)

State 238 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 20480 (00000000 00000000 00000000 00000000 00000000 00000000 01010000 00000000)

State 244 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 20480 (00000000 00000000 00000000 00000000 00000000 00000000 01010000 00000000)
An Overflow Occurred in the node b0

State 250 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 78008320 (00000000 00000000 00000000 00000000 00000100 10100110 01010000 00000000)

State 251 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 19045 (00000000 00000000 00000000 00000000 00000000 00000000 01001010 01100101)

State 252 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 19045 (00000000 00000000 00000000 00000000 00000000 00000000 01001010 01100101)

State 255 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 58392576 (00000000 00000000 00000000 00000000 00000011 01111011 00000000 00000000)

State 256 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 14256 (00000000 00000000 00000000 00000000 00000000 00000000 00110111 10110000)

State 257 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 33301 (00000000 00000000 00000000 00000000 00000000 00000000 10000010 00010101)

State 261 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 20480 (00000000 00000000 00000000 00000000 00000000 00000000 01010000 00000000)

State 263 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 266 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 83886080 (00000000 00000000 00000000 00000000 00000101 00000000 00000000 00000000)

State 267 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 20480 (00000000 00000000 00000000 00000000 00000000 00000000 01010000 00000000)

State 270 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -20480 (11111111 11111111 11111111 11111111 11111111 11111111 10110000 00000000)

State 273 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -24576 (11111111 11111111 11111111 11111111 11111111 11111111 10100000 00000000)

State 279 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-24576 << 12) / 4096
An Overflow Occurred in the node b0

State 285 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -93609984 (11111111 11111111 11111111 11111111 11111010 01101011 10100000 00000000)

State 286 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -22854 (11111111 11111111 11111111 11111111 11111111 11111111 10100110 10111010)

State 287 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -22854 (11111111 11111111 11111111 11111111 11111111 11111111 10100110 10111010)

State 290 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -72990720 (11111111 11111111 11111111 11111111 11111011 10100110 01000000 00000000)

State 291 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -17820 (11111111 11111111 11111111 11111111 11111111 11111111 10111010 01100100)

State 292 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -40674 (11111111 11111111 11111111 11111111 11111111 11111111 01100001 00011110)

State 296 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -24576 (11111111 11111111 11111111 11111111 11111111 11111111 10100000 00000000)

State 298 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 301 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -100663296 (11111111 11111111 11111111 11111111 11111010 00000000 00000000 00000000)

State 302 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -24576 (11111111 11111111 11111111 11111111 11111111 11111111 10100000 00000000)

State 305 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 24576 (00000000 00000000 00000000 00000000 00000000 00000000 01100000 00000000)

State 308 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 28672 (00000000 00000000 00000000 00000000 00000000 00000000 01110000 00000000)

State 314 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 28672 (00000000 00000000 00000000 00000000 00000000 00000000 01110000 00000000)
An Overflow Occurred in the node b0

State 320 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 109211648 (00000000 00000000 00000000 00000000 00000110 10000010 01110000 00000000)

State 321 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 26663 (00000000 00000000 00000000 00000000 00000000 00000000 01101000 00100111)

State 322 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 26663 (00000000 00000000 00000000 00000000 00000000 00000000 01101000 00100111)

State 325 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 87588864 (00000000 00000000 00000000 00000000 00000101 00111000 10000000 00000000)

State 326 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 21384 (00000000 00000000 00000000 00000000 00000000 00000000 01010011 10001000)

State 327 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 48047 (00000000 00000000 00000000 00000000 00000000 00000000 10111011 10101111)

State 331 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 28672 (00000000 00000000 00000000 00000000 00000000 00000000 01110000 00000000)

State 333 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 336 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 117440512 (00000000 00000000 00000000 00000000 00000111 00000000 00000000 00000000)

State 337 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 28672 (00000000 00000000 00000000 00000000 00000000 00000000 01110000 00000000)

State 340 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -28672 (11111111 11111111 11111111 11111111 11111111 11111111 10010000 00000000)

State 343 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -32768 (11111111 11111111 11111111 11111111 11111111 11111111 10000000 00000000)

State 349 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-32768 << 12) / 4096
An Overflow Occurred in the node b0

State 355 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -124813312 (11111111 11111111 11111111 11111111 11111000 10001111 10000000 00000000)

State 356 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -30472 (11111111 11111111 11111111 11111111 11111111 11111111 10001000 11111000)

State 357 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -30472 (11111111 11111111 11111111 11111111 11111111 11111111 10001000 11111000)

State 360 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -102187008 (11111111 11111111 11111111 11111111 11111001 11101000 11000000 00000000)

State 361 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -24948 (11111111 11111111 11111111 11111111 11111111 11111111 10011110 10001100)

State 362 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -55420 (11111111 11111111 11111111 11111111 11111111 11111111 00100111 10000100)

State 366 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -32768 (11111111 11111111 11111111 11111111 11111111 11111111 10000000 00000000)

State 368 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 371 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -134217728 (11111111 11111111 11111111 11111111 11111000 00000000 00000000 00000000)

State 372 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -32768 (11111111 11111111 11111111 11111111 11111111 11111111 10000000 00000000)

State 375 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 32768 (00000000 00000000 00000000 00000000 00000000 00000000 10000000 00000000)

State 378 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 35840 (00000000 00000000 00000000 00000000 00000000 00000000 10001100 00000000)

State 384 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 35840 (00000000 00000000 00000000 00000000 00000000 00000000 10001100 00000000)
An Overflow Occurred in the node b0

State 387 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-06-impl2.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-06-impl2.c: Parsing
In file included from benchmarks/ds-06-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-06-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-06-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.175s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.117s (1599 assignments)
Slicing time: 0.003s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.075s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.075s
Runtime decision procedure: 52.348s
BMC program time: 52.543s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-06-impl3.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-06-impl3.c: Parsing
In file included from benchmarks/ds-06-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-06-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-06-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.234s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.115s (1599 assignments)
Slicing time: 0.003s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.074s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.074s
Runtime decision procedure: 21.471s
BMC program time: 21.664s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-07-impl1.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-07-impl1.c: Parsing
In file included from benchmarks/ds-07-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-07-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-07-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.225s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.127s (1599 assignments)
Slicing time: 0.003s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.078s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.078s
Runtime decision procedure: 32.281s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 4096.000000 (01000000 10110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 4096 (00000000 00000000 00000000 00000000 00000000 00000000 00010000 00000000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 4096.000000 (01000000 10110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 4.096000e+2 (01000000 01111001 10011001 10011001 10011001 10011001 10011001 10011010)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 409 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 10011001)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 6.000000e-1 (00111111 11100011 00110011 00110011 00110011 00110011 00110100 00000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 409.000000 (01000000 01111001 10010000 00000000 00000000 00000000 00000000 00000000)

State 49 file fixed-point.h line 236 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = -1.000000 (10111111 11110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 50 file fixed-point.h line 237 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 51 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 52 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = -4078 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 00010010)

State 54 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 55 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = -4096 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 00000000)

State 57 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 58 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = -3922 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 10101110)

State 60 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 61 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = -4032 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 01000000)

State 63 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 64 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = -3839 (11111111 11111111 11111111 11111111 11111111 11111111 11110001 00000001)

State 66 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 67 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = -4096 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 00000000)

State 69 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 70 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = -3841 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 11111111)

State 72 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 73 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = -3584 (11111111 11111111 11111111 11111111 11111111 11111111 11110010 00000000)

State 75 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 76 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = -3840 (11111111 11111111 11111111 11111111 11111111 11111111 11110001 00000000)

State 78 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 79 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = 2560 (00000000 00000000 00000000 00000000 00000000 00000000 00001010 00000000)

State 81 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 82 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 86 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 88 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 91 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 92 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 95 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 98 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -4078 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 00010010)

State 104 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-4078 << 12) / 4096
An Overflow Occurred in the node b0

State 110 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -1667902 (11111111 11111111 11111111 11111111 11111111 11100110 10001100 11000010)

State 111 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -407 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 01101001)

State 112 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -407 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 01101001)

State 115 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 116 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 117 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -407 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 01101001)

State 121 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -4078 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 00010010)

State 123 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 126 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 16703488 (00000000 00000000 00000000 00000000 00000000 11111110 11100000 00000000)

State 127 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 4078 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 11101110)

State 130 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -4078 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 00010010)

State 133 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -8174 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 00010010)

State 139 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-8174 << 12) / 4096
An Overflow Occurred in the node b0

State 145 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -3343166 (11111111 11111111 11111111 11111111 11111111 11001100 11111100 11000010)

State 146 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -816 (11111111 11111111 11111111 11111111 11111111 11111111 11111100 11010000)

State 147 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -816 (11111111 11111111 11111111 11111111 11111111 11111111 11111100 11010000)

State 150 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 1671980 (00000000 00000000 00000000 00000000 00000000 00011001 10000011 00101100)

State 151 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 408 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 10011000)

State 152 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -408 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 01101000)

State 156 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -8174 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 00010010)

State 158 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 161 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 33480704 (00000000 00000000 00000000 00000000 00000001 11111110 11100000 00000000)

State 162 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 8174 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 11101110)

State 165 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -8174 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 00010010)

State 168 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -12096 (11111111 11111111 11111111 11111111 11111111 11111111 11010000 11000000)

State 174 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-12096 << 12) / 4096
An Overflow Occurred in the node b0

State 180 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -4947264 (11111111 11111111 11111111 11111111 11111111 10110100 10000010 11000000)

State 181 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -1208 (11111111 11111111 11111111 11111111 11111111 11111111 11111011 01001000)

State 182 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -1208 (11111111 11111111 11111111 11111111 11111111 11111111 11111011 01001000)

State 185 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 3351340 (00000000 00000000 00000000 00000000 00000000 00110011 00100011 00101100)

State 186 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 818 (00000000 00000000 00000000 00000000 00000000 00000000 00000011 00110010)

State 187 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -390 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 01111010)

State 191 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -12096 (11111111 11111111 11111111 11111111 11111111 11111111 11010000 11000000)

State 193 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 196 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 49545216 (00000000 00000000 00000000 00000000 00000010 11110100 00000000 00000000)

State 197 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 12096 (00000000 00000000 00000000 00000000 00000000 00000000 00101111 01000000)

State 200 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -12096 (11111111 11111111 11111111 11111111 11111111 11111111 11010000 11000000)

State 203 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -16128 (11111111 11111111 11111111 11111111 11111111 11111111 11000001 00000000)

State 209 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-16128 << 12) / 4096
An Overflow Occurred in the node b0

State 215 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -6596352 (11111111 11111111 11111111 11111111 11111111 10011011 01011001 00000000)

State 216 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -1610 (11111111 11111111 11111111 11111111 11111111 11111111 11111001 10110110)

State 217 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -1610 (11111111 11111111 11111111 11111111 11111111 11111111 11111001 10110110)

State 220 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 4959360 (00000000 00000000 00000000 00000000 00000000 01001011 10101100 10000000)

State 221 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 1211 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 10111011)

State 222 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -399 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 01110001)

State 226 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -16128 (11111111 11111111 11111111 11111111 11111111 11111111 11000001 00000000)

State 228 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 231 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 66060288 (00000000 00000000 00000000 00000000 00000011 11110000 00000000 00000000)

State 232 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 16128 (00000000 00000000 00000000 00000000 00000000 00000000 00111111 00000000)

State 235 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -16128 (11111111 11111111 11111111 11111111 11111111 11111111 11000001 00000000)

State 238 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -19967 (11111111 11111111 11111111 11111111 11111111 11111111 10110010 00000001)

State 244 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-19967 << 12) / 4096
An Overflow Occurred in the node b0

State 250 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -8166503 (11111111 11111111 11111111 11111111 11111111 10000011 01100011 10011001)

State 251 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -1994 (11111111 11111111 11111111 11111111 11111111 11111111 11111000 00110110)

State 252 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -1994 (11111111 11111111 11111111 11111111 11111111 11111111 11111000 00110110)

State 255 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 6612480 (00000000 00000000 00000000 00000000 00000000 01100100 11100110 00000000)

State 256 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 1614 (00000000 00000000 00000000 00000000 00000000 00000000 00000110 01001110)

State 257 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -380 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 10000100)

State 261 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -19967 (11111111 11111111 11111111 11111111 11111111 11111111 10110010 00000001)

State 263 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 266 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 81784832 (00000000 00000000 00000000 00000000 00000100 11011111 11110000 00000000)

State 267 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 19967 (00000000 00000000 00000000 00000000 00000000 00000000 01001101 11111111)

State 270 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -19967 (11111111 11111111 11111111 11111111 11111111 11111111 10110010 00000001)

State 273 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -24063 (11111111 11111111 11111111 11111111 11111111 11111111 10100010 00000001)

State 279 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-24063 << 12) / 4096
An Overflow Occurred in the node b0

State 285 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -9841767 (11111111 11111111 11111111 11111111 11111111 01101001 11010011 10011001)

State 286 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -2403 (11111111 11111111 11111111 11111111 11111111 11111111 11110110 10011101)

State 287 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -2403 (11111111 11111111 11111111 11111111 11111111 11111111 11110110 10011101)

State 290 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 8186470 (00000000 00000000 00000000 00000000 00000000 01111100 11101010 01100110)

State 291 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 1999 (00000000 00000000 00000000 00000000 00000000 00000000 00000111 11001111)

State 292 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -404 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 01101100)

State 296 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -24063 (11111111 11111111 11111111 11111111 11111111 11111111 10100010 00000001)

State 298 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 301 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 98562048 (00000000 00000000 00000000 00000000 00000101 11011111 11110000 00000000)

State 302 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 24063 (00000000 00000000 00000000 00000000 00000000 00000000 01011101 11111111)

State 305 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -24063 (11111111 11111111 11111111 11111111 11111111 11111111 10100010 00000001)

State 308 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -27904 (11111111 11111111 11111111 11111111 11111111 11111111 10010011 00000000)

State 314 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-27904 << 12) / 4096
An Overflow Occurred in the node b0

State 320 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -11412736 (11111111 11111111 11111111 11111111 11111111 01010001 11011011 00000000)

State 321 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -2786 (11111111 11111111 11111111 11111111 11111111 11111111 11110101 00011110)

State 322 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -2786 (11111111 11111111 11111111 11111111 11111111 11111111 11110101 00011110)

State 325 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 9865830 (00000000 00000000 00000000 00000000 00000000 10010110 10001010 01100110)

State 326 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 2409 (00000000 00000000 00000000 00000000 00000000 00000000 00001001 01101001)

State 327 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -377 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 10000111)

State 331 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -27904 (11111111 11111111 11111111 11111111 11111111 11111111 10010011 00000000)

State 333 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 336 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 114294784 (00000000 00000000 00000000 00000000 00000110 11010000 00000000 00000000)

State 337 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 27904 (00000000 00000000 00000000 00000000 00000000 00000000 01101101 00000000)

State 340 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -27904 (11111111 11111111 11111111 11111111 11111111 11111111 10010011 00000000)

State 343 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -31488 (11111111 11111111 11111111 11111111 11111111 11111111 10000101 00000000)

State 349 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-31488 << 12) / 4096
An Overflow Occurred in the node b0

State 355 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -12878592 (11111111 11111111 11111111 11111111 11111111 00111011 01111101 00000000)

State 356 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -3144 (11111111 11111111 11111111 11111111 11111111 11111111 11110011 10111000)

State 357 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -3144 (11111111 11111111 11111111 11111111 11111111 11111111 11110011 10111000)

State 360 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 11440640 (00000000 00000000 00000000 00000000 00000000 10101110 10010010 00000000)

State 361 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 2793 (00000000 00000000 00000000 00000000 00000000 00000000 00001010 11101001)

State 362 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -351 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 10100001)

State 366 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -31488 (11111111 11111111 11111111 11111111 11111111 11111111 10000101 00000000)

State 368 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 371 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 128974848 (00000000 00000000 00000000 00000000 00000111 10110000 00000000 00000000)

State 372 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 31488 (00000000 00000000 00000000 00000000 00000000 00000000 01111011 00000000)

State 375 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -31488 (11111111 11111111 11111111 11111111 11111111 11111111 10000101 00000000)

State 378 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -35328 (11111111 11111111 11111111 11111111 11111111 11111111 01110110 00000000)

State 384 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-35328 << 12) / 4096
An Overflow Occurred in the node b0

State 387 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-07-impl2.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-07-impl2.c: Parsing
In file included from benchmarks/ds-07-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-07-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-07-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.189s
GOTO program processing time: 0.025s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.122s (1599 assignments)
Slicing time: 0.003s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.078s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.078s
Runtime decision procedure: 34.526s
BMC program time: 34.729s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-07-impl3.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-07-impl3.c: Parsing
In file included from benchmarks/ds-07-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-07-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-07-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.280s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.119s (1599 assignments)
Slicing time: 0.003s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.075s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.075s
Runtime decision procedure: 10.278s
BMC program time: 10.476s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-08-impl1.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-08-impl1.c: Parsing
In file included from benchmarks/ds-08-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-08-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-08-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.261s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.119s (1599 assignments)
Slicing time: 0.003s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.078s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.078s
Runtime decision procedure: 4.844s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 1.638400e+2 (01000000 01100100 01111010 11100001 01000111 10101110 00010100 01111011)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 163 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 10100011)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 8.400000e-1 (00111111 11101010 11100001 01000111 10101110 00010100 01111011 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 7.864320e+1 (01000000 01010011 10101001 00101010 00110000 01010101 00110010 01100001)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 78 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 01001110)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 6.432000e-1 (00111111 11100100 10010101 00011000 00101010 10011001 00110000 10000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 73.000000 (01000000 01010010 01000000 00000000 00000000 00000000 00000000 00000000)

State 49 file fixed-point.h line 236 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = -1.000000 (10111111 11110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 50 file fixed-point.h line 237 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 51 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 52 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = 8192 (00000000 00000000 00000000 00000000 00000000 00000000 00100000 00000000)

State 54 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 55 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = 3989 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 10010101)

State 57 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 58 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = 7335 (00000000 00000000 00000000 00000000 00000000 00000000 00011100 10100111)

State 60 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 61 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = 8192 (00000000 00000000 00000000 00000000 00000000 00000000 00100000 00000000)

State 63 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 64 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = 8185 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 11111001)

State 66 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 67 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = 3884 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 00101100)

State 69 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 70 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 72 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 73 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = 8192 (00000000 00000000 00000000 00000000 00000000 00000000 00100000 00000000)

State 75 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 76 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 78 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 79 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = -8192 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 00000000)

State 81 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 82 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 86 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 88 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 91 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 92 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 95 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 98 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 8192 (00000000 00000000 00000000 00000000 00000000 00000000 00100000 00000000)

State 104 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 411710 (00000000 00000000 00000000 00000000 00000000 00000110 01001000 00111110)
An Overflow Occurred in the node b0

State 107 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-08-impl2.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-08-impl2.c: Parsing
In file included from benchmarks/ds-08-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-08-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-08-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.170s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.119s (1599 assignments)
Slicing time: 0.002s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.075s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.075s
Runtime decision procedure: 4.828s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 8.192000e+1 (01000000 01010100 01111010 11100001 01000111 10101110 00010100 01111011)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 81 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 01010001)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 9.200000e-1 (00111111 11101101 01110000 10100011 11010111 00001010 00111101 10000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 3.932160e+1 (01000000 01000011 10101001 00101010 00110000 01010101 00110010 01100001)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 39 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00100111)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 3.216000e-1 (00111111 11010100 10010101 00011000 00101010 10011001 00110000 10000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 36.000000 (01000000 01000010 00000000 00000000 00000000 00000000 00000000 00000000)

State 49 file fixed-point.h line 236 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = -1.000000 (10111111 11110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 50 file fixed-point.h line 237 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 51 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 52 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 54 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 55 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = 810 (00000000 00000000 00000000 00000000 00000000 00000000 00000011 00101010)

State 57 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 58 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = 1306 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 00011010)

State 60 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 61 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = -2592 (11111111 11111111 11111111 11111111 11111111 11111111 11110101 11100000)

State 63 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 64 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = -128 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 10000000)

State 66 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 67 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = 33 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00100001)

State 69 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 70 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 72 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 73 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 75 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 76 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = 1053 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00011101)

State 78 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 79 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = -4096 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 00000000)

State 81 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 82 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 86 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 88 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 91 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 92 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 95 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 98 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 104 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node b0

State 110 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 111 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 112 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 115 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 116 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 117 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 121 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 123 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 126 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 127 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 130 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 133 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 810 (00000000 00000000 00000000 00000000 00000000 00000000 00000011 00101010)

State 139 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 40960 (00000000 00000000 00000000 00000000 00000000 00000000 10100000 00000000)
An Overflow Occurred in the node b0

State 142 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-08-impl3.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-08-impl3.c: Parsing
In file included from benchmarks/ds-08-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-08-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-08-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.253s
GOTO program processing time: 0.025s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.118s (1599 assignments)
Slicing time: 0.003s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.074s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.074s
Runtime decision procedure: 4.669s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 4.096000e+1 (01000000 01000100 01111010 11100001 01000111 10101110 00010100 01111011)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 40 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00101000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 9.600000e-1 (00111111 11101110 10111000 01010001 11101011 10000101 00011110 11000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 1.966080e+1 (01000000 00110011 10101001 00101010 00110000 01010101 00110010 01100001)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 19 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00010011)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 6.608000e-1 (00111111 11100101 00100101 01000110 00001010 10100110 01001100 00100000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 18.000000 (01000000 00110010 00000000 00000000 00000000 00000000 00000000 00000000)

State 49 file fixed-point.h line 236 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = -1.000000 (10111111 11110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 50 file fixed-point.h line 237 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 51 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 52 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = 1998 (00000000 00000000 00000000 00000000 00000000 00000000 00000111 11001110)

State 54 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 55 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = 2048 (00000000 00000000 00000000 00000000 00000000 00000000 00001000 00000000)

State 57 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 58 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = -980 (11111111 11111111 11111111 11111111 11111111 11111111 11111100 00101100)

State 60 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 61 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = 1280 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 00000000)

State 63 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 64 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = 2048 (00000000 00000000 00000000 00000000 00000000 00000000 00001000 00000000)

State 66 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 67 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = 1957 (00000000 00000000 00000000 00000000 00000000 00000000 00000111 10100101)

State 69 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 70 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = 11 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001011)

State 72 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 73 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = 20 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00010100)

State 75 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 76 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 78 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 79 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = -2048 (11111111 11111111 11111111 11111111 11111111 11111111 11111000 00000000)

State 81 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 82 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 86 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 88 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 91 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 92 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 95 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 98 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 1998 (00000000 00000000 00000000 00000000 00000000 00000000 00000111 11001110)

State 104 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 102297 (00000000 00000000 00000000 00000000 00000000 00000001 10001111 10011001)
An Overflow Occurred in the node b0

State 107 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-09-impl1.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-09-impl1.c: Parsing
In file included from benchmarks/ds-09-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-09-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-09-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.259s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.122s (1599 assignments)
Slicing time: 0.003s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.079s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.079s
Runtime decision procedure: 31.705s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 4096.000000 (01000000 10110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 4096 (00000000 00000000 00000000 00000000 00000000 00000000 00010000 00000000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 4096.000000 (01000000 10110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 4.096000e+2 (01000000 01111001 10011001 10011001 10011001 10011001 10011001 10011010)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 409 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 10011001)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 6.000000e-1 (00111111 11100011 00110011 00110011 00110011 00110011 00110100 00000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 409.000000 (01000000 01111001 10010000 00000000 00000000 00000000 00000000 00000000)

State 49 file fixed-point.h line 236 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = -1.000000 (10111111 11110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 50 file fixed-point.h line 237 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 51 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 52 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = -4078 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 00010010)

State 54 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 55 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = -4096 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 00000000)

State 57 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 58 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = -3922 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 10101110)

State 60 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 61 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = -4032 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 01000000)

State 63 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 64 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = -3839 (11111111 11111111 11111111 11111111 11111111 11111111 11110001 00000001)

State 66 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 67 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = -4096 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 00000000)

State 69 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 70 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = -3841 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 11111111)

State 72 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 73 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = -3584 (11111111 11111111 11111111 11111111 11111111 11111111 11110010 00000000)

State 75 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 76 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = -3840 (11111111 11111111 11111111 11111111 11111111 11111111 11110001 00000000)

State 78 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 79 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = 2560 (00000000 00000000 00000000 00000000 00000000 00000000 00001010 00000000)

State 81 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 82 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 86 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 88 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 91 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 92 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 95 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 98 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -4078 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 00010010)

State 104 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-4078 << 12) / 4096
An Overflow Occurred in the node b0

State 110 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -1667902 (11111111 11111111 11111111 11111111 11111111 11100110 10001100 11000010)

State 111 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -407 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 01101001)

State 112 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -407 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 01101001)

State 115 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 116 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 117 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -407 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 01101001)

State 121 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -4078 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 00010010)

State 123 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 126 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 16703488 (00000000 00000000 00000000 00000000 00000000 11111110 11100000 00000000)

State 127 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 4078 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 11101110)

State 130 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -4078 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 00010010)

State 133 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -8174 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 00010010)

State 139 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-8174 << 12) / 4096
An Overflow Occurred in the node b0

State 145 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -3343166 (11111111 11111111 11111111 11111111 11111111 11001100 11111100 11000010)

State 146 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -816 (11111111 11111111 11111111 11111111 11111111 11111111 11111100 11010000)

State 147 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -816 (11111111 11111111 11111111 11111111 11111111 11111111 11111100 11010000)

State 150 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 1671980 (00000000 00000000 00000000 00000000 00000000 00011001 10000011 00101100)

State 151 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 408 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 10011000)

State 152 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -408 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 01101000)

State 156 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -8174 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 00010010)

State 158 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 161 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 33480704 (00000000 00000000 00000000 00000000 00000001 11111110 11100000 00000000)

State 162 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 8174 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 11101110)

State 165 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -8174 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 00010010)

State 168 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -12096 (11111111 11111111 11111111 11111111 11111111 11111111 11010000 11000000)

State 174 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-12096 << 12) / 4096
An Overflow Occurred in the node b0

State 180 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -4947264 (11111111 11111111 11111111 11111111 11111111 10110100 10000010 11000000)

State 181 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -1208 (11111111 11111111 11111111 11111111 11111111 11111111 11111011 01001000)

State 182 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -1208 (11111111 11111111 11111111 11111111 11111111 11111111 11111011 01001000)

State 185 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 3351340 (00000000 00000000 00000000 00000000 00000000 00110011 00100011 00101100)

State 186 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 818 (00000000 00000000 00000000 00000000 00000000 00000000 00000011 00110010)

State 187 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -390 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 01111010)

State 191 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -12096 (11111111 11111111 11111111 11111111 11111111 11111111 11010000 11000000)

State 193 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 196 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 49545216 (00000000 00000000 00000000 00000000 00000010 11110100 00000000 00000000)

State 197 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 12096 (00000000 00000000 00000000 00000000 00000000 00000000 00101111 01000000)

State 200 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -12096 (11111111 11111111 11111111 11111111 11111111 11111111 11010000 11000000)

State 203 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -16128 (11111111 11111111 11111111 11111111 11111111 11111111 11000001 00000000)

State 209 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-16128 << 12) / 4096
An Overflow Occurred in the node b0

State 215 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -6596352 (11111111 11111111 11111111 11111111 11111111 10011011 01011001 00000000)

State 216 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -1610 (11111111 11111111 11111111 11111111 11111111 11111111 11111001 10110110)

State 217 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -1610 (11111111 11111111 11111111 11111111 11111111 11111111 11111001 10110110)

State 220 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 4959360 (00000000 00000000 00000000 00000000 00000000 01001011 10101100 10000000)

State 221 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 1211 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 10111011)

State 222 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -399 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 01110001)

State 226 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -16128 (11111111 11111111 11111111 11111111 11111111 11111111 11000001 00000000)

State 228 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 231 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 66060288 (00000000 00000000 00000000 00000000 00000011 11110000 00000000 00000000)

State 232 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 16128 (00000000 00000000 00000000 00000000 00000000 00000000 00111111 00000000)

State 235 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -16128 (11111111 11111111 11111111 11111111 11111111 11111111 11000001 00000000)

State 238 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -19967 (11111111 11111111 11111111 11111111 11111111 11111111 10110010 00000001)

State 244 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-19967 << 12) / 4096
An Overflow Occurred in the node b0

State 250 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -8166503 (11111111 11111111 11111111 11111111 11111111 10000011 01100011 10011001)

State 251 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -1994 (11111111 11111111 11111111 11111111 11111111 11111111 11111000 00110110)

State 252 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -1994 (11111111 11111111 11111111 11111111 11111111 11111111 11111000 00110110)

State 255 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 6612480 (00000000 00000000 00000000 00000000 00000000 01100100 11100110 00000000)

State 256 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 1614 (00000000 00000000 00000000 00000000 00000000 00000000 00000110 01001110)

State 257 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -380 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 10000100)

State 261 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -19967 (11111111 11111111 11111111 11111111 11111111 11111111 10110010 00000001)

State 263 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 266 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 81784832 (00000000 00000000 00000000 00000000 00000100 11011111 11110000 00000000)

State 267 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 19967 (00000000 00000000 00000000 00000000 00000000 00000000 01001101 11111111)

State 270 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -19967 (11111111 11111111 11111111 11111111 11111111 11111111 10110010 00000001)

State 273 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -24063 (11111111 11111111 11111111 11111111 11111111 11111111 10100010 00000001)

State 279 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-24063 << 12) / 4096
An Overflow Occurred in the node b0

State 285 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -9841767 (11111111 11111111 11111111 11111111 11111111 01101001 11010011 10011001)

State 286 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -2403 (11111111 11111111 11111111 11111111 11111111 11111111 11110110 10011101)

State 287 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -2403 (11111111 11111111 11111111 11111111 11111111 11111111 11110110 10011101)

State 290 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 8186470 (00000000 00000000 00000000 00000000 00000000 01111100 11101010 01100110)

State 291 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 1999 (00000000 00000000 00000000 00000000 00000000 00000000 00000111 11001111)

State 292 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -404 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 01101100)

State 296 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -24063 (11111111 11111111 11111111 11111111 11111111 11111111 10100010 00000001)

State 298 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 301 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 98562048 (00000000 00000000 00000000 00000000 00000101 11011111 11110000 00000000)

State 302 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 24063 (00000000 00000000 00000000 00000000 00000000 00000000 01011101 11111111)

State 305 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -24063 (11111111 11111111 11111111 11111111 11111111 11111111 10100010 00000001)

State 308 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -27904 (11111111 11111111 11111111 11111111 11111111 11111111 10010011 00000000)

State 314 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-27904 << 12) / 4096
An Overflow Occurred in the node b0

State 320 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -11412736 (11111111 11111111 11111111 11111111 11111111 01010001 11011011 00000000)

State 321 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -2786 (11111111 11111111 11111111 11111111 11111111 11111111 11110101 00011110)

State 322 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -2786 (11111111 11111111 11111111 11111111 11111111 11111111 11110101 00011110)

State 325 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 9865830 (00000000 00000000 00000000 00000000 00000000 10010110 10001010 01100110)

State 326 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 2409 (00000000 00000000 00000000 00000000 00000000 00000000 00001001 01101001)

State 327 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -377 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 10000111)

State 331 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -27904 (11111111 11111111 11111111 11111111 11111111 11111111 10010011 00000000)

State 333 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 336 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 114294784 (00000000 00000000 00000000 00000000 00000110 11010000 00000000 00000000)

State 337 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 27904 (00000000 00000000 00000000 00000000 00000000 00000000 01101101 00000000)

State 340 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -27904 (11111111 11111111 11111111 11111111 11111111 11111111 10010011 00000000)

State 343 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -31488 (11111111 11111111 11111111 11111111 11111111 11111111 10000101 00000000)

State 349 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-31488 << 12) / 4096
An Overflow Occurred in the node b0

State 355 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -12878592 (11111111 11111111 11111111 11111111 11111111 00111011 01111101 00000000)

State 356 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -3144 (11111111 11111111 11111111 11111111 11111111 11111111 11110011 10111000)

State 357 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -3144 (11111111 11111111 11111111 11111111 11111111 11111111 11110011 10111000)

State 360 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 11440640 (00000000 00000000 00000000 00000000 00000000 10101110 10010010 00000000)

State 361 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 2793 (00000000 00000000 00000000 00000000 00000000 00000000 00001010 11101001)

State 362 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -351 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 10100001)

State 366 file functions.h line 71 function shiftR thread 0
----------------------------------------------------
  *(z + (signed long int)i) = -31488 (11111111 11111111 11111111 11111111 11111111 11111111 10000101 00000000)

State 368 file functions.h line 73 function shiftR thread 0
----------------------------------------------------
  *(z + 0) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 371 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 128974848 (00000000 00000000 00000000 00000000 00000111 10110000 00000000 00000000)

State 372 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 31488 (00000000 00000000 00000000 00000000 00000000 00000000 01111011 00000000)

State 375 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -31488 (11111111 11111111 11111111 11111111 11111111 11111111 10000101 00000000)

State 378 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -35328 (11111111 11111111 11111111 11111111 11111111 11111111 01110110 00000000)

State 384 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-35328 << 12) / 4096
An Overflow Occurred in the node b0

State 387 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-09-impl2.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-09-impl2.c: Parsing
In file included from benchmarks/ds-09-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-09-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-09-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.234s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.119s (1599 assignments)
Slicing time: 0.003s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.079s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.079s
Runtime decision procedure: 34.491s
BMC program time: 34.693s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-09-impl3.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-09-impl3.c: Parsing
In file included from benchmarks/ds-09-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
In file included from benchmarks/ds-09-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:34:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_error.h:139:21: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'float *' [-Wincompatible-pointer-types]
   shiftRboth(0.0f, wfaux, 0, waux, Nw);
                    ^~~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:146:35: note: passing argument to parameter 'zf' here
void shiftRboth(float zfIn, float zf[], fxp_t zIn, fxp_t z[], int N) {
                                  ^
In file included from benchmarks/ds-09-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:37:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/engine/verify_timing_msp430.h:69:14: warning: incompatible pointer types passing 'double [Nw]' to parameter of type 'fxp_t *' (aka 'long *') [-Wincompatible-pointer-types]
   shiftR(0, waux, Nw);
             ^~~~
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:66:31: note: passing argument to parameter 'z' here
fxp_t shiftR(fxp_t zIn, fxp_t z[], int N) {
                              ^
Converting
Generating GOTO Program
GOTO program creation time: 1.296s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 95 iteration 1 file functions.h line 70 function shiftR
Unwinding loop 130 iteration 1 file realizations.h line 54 function fxp_direct_form_2
Unwinding loop 131 iteration 1 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 131 iteration 2 file realizations.h line 62 function fxp_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.119s (1599 assignments)
Slicing time: 0.003s (removed 517 assignments)
Generated 443 VCC(s), 256 remaining after simplification (1082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.076s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.076s
Runtime decision procedure: 10.298s
BMC program time: 10.497s

VERIFICATION SUCCESSFUL

