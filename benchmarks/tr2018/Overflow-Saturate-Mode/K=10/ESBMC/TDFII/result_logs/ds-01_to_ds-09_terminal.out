yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-01-impl1.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-01-impl1.c: Parsing
In file included from benchmarks/ds-01-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.179s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.119s (1329 assignments)
Slicing time: 0.003s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.076s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.076s
Runtime decision procedure: 2.015s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 16384.000000 (01000000 11010000 00000000 00000000 00000000 00000000 00000000 00000000)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 16384 (00000000 00000000 00000000 00000000 00000000 00000000 01000000 00000000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 24576.000000 (01000000 11011000 00000000 00000000 00000000 00000000 00000000 00000000)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 24576 (00000000 00000000 00000000 00000000 00000000 00000000 01100000 00000000)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 8192.000000 (01000000 11000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 49 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 50 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = 12288 (00000000 00000000 00000000 00000000 00000000 00000000 00110000 00000000)

State 52 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 53 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = -16384 (11111111 11111111 11111111 11111111 11111111 11111111 11000000 00000000)

State 55 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 56 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = 16384 (00000000 00000000 00000000 00000000 00000000 00000000 01000000 00000000)

State 58 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 59 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = 8448 (00000000 00000000 00000000 00000000 00000000 00000000 00100001 00000000)

State 61 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 62 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 64 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 65 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = 512 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000000)

State 67 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 68 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = 5632 (00000000 00000000 00000000 00000000 00000000 00000000 00010110 00000000)

State 70 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 71 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = 1877 (00000000 00000000 00000000 00000000 00000000 00000000 00000111 01010101)

State 73 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 74 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = 1991 (00000000 00000000 00000000 00000000 00000000 00000000 00000111 11000111)

State 76 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 77 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = 16384 (00000000 00000000 00000000 00000000 00000000 00000000 01000000 00000000)

State 79 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 80 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 82 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 301989888 (00000000 00000000 00000000 00000000 00010010 00000000 00000000 00000000)

State 83 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 18432 (00000000 00000000 00000000 00000000 00000000 00000000 01001000 00000000)

State 85 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 18432 (00000000 00000000 00000000 00000000 00000000 00000000 01001000 00000000)

State 89 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 18432 (00000000 00000000 00000000 00000000 00000000 00000000 01001000 00000000)

State 92 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 94 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 95 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 98 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 100 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -100663296 (11111111 11111111 11111111 11111111 11111010 00000000 00000000 00000000)

State 101 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -6144 (11111111 11111111 11111111 11111111 11111111 11111111 11101000 00000000)

State 104 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -6144 (11111111 11111111 11111111 11111111 11111111 11111111 11101000 00000000)
An Overflow Occurred in the node a0

State 109 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -402653184 (11111111 11111111 11111111 11111111 11101000 00000000 00000000 00000000)

State 110 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -24576 (11111111 11111111 11111111 11111111 11111111 11111111 10100000 00000000)

State 112 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -30720 (11111111 11111111 11111111 11111111 11111111 11111111 10001000 00000000)

State 116 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-30720 << 14) / 16384

State 119 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 121 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 122 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 125 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 127 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 134217728 (00000000 00000000 00000000 00000000 00001000 00000000 00000000 00000000)

State 128 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 8192 (00000000 00000000 00000000 00000000 00000000 00000000 00100000 00000000)

State 131 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 8192 (00000000 00000000 00000000 00000000 00000000 00000000 00100000 00000000)
An Overflow Occurred in the node a0

State 136 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 402653184 (00000000 00000000 00000000 00000000 00011000 00000000 00000000 00000000)

State 137 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 24576 (00000000 00000000 00000000 00000000 00000000 00000000 01100000 00000000)

State 139 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 32768 (00000000 00000000 00000000 00000000 00000000 00000000 10000000 00000000)

State 143 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 32768 (00000000 00000000 00000000 00000000 00000000 00000000 10000000 00000000)

State 146 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 148 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 149 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 152 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 154 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -134217728 (11111111 11111111 11111111 11111111 11111000 00000000 00000000 00000000)

State 155 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -8192 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 00000000)

State 158 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -8192 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 00000000)
An Overflow Occurred in the node a0

State 163 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 207618048 (00000000 00000000 00000000 00000000 00001100 01100000 00000000 00000000)

State 164 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 12672 (00000000 00000000 00000000 00000000 00000000 00000000 00110001 10000000)

State 166 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 4480 (00000000 00000000 00000000 00000000 00000000 00000000 00010001 10000000)

State 170 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 4480 (00000000 00000000 00000000 00000000 00000000 00000000 00010001 10000000)

State 173 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 175 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 176 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 179 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 181 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -69206016 (11111111 11111111 11111111 11111111 11111011 11100000 00000000 00000000)

State 182 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -4224 (11111111 11111111 11111111 11111111 11111111 11111111 11101111 10000000)

State 185 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -4224 (11111111 11111111 11111111 11111111 11111111 11111111 11101111 10000000)
An Overflow Occurred in the node a0

State 190 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 191 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 193 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -4224 (11111111 11111111 11111111 11111111 11111111 11111111 11101111 10000000)

State 197 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-4224 << 14) / 16384

State 200 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 202 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 203 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 206 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 208 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 209 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 212 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node a0

State 217 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 12582912 (00000000 00000000 00000000 00000000 00000000 11000000 00000000 00000000)

State 218 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 768 (00000000 00000000 00000000 00000000 00000000 00000000 00000011 00000000)

State 220 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 768 (00000000 00000000 00000000 00000000 00000000 00000000 00000011 00000000)

State 224 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 768 (00000000 00000000 00000000 00000000 00000000 00000000 00000011 00000000)

State 227 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 229 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 230 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 233 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 235 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -4194304 (11111111 11111111 11111111 11111111 11111111 11000000 00000000 00000000)

State 236 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -256 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 00000000)

State 239 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -256 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 00000000)
An Overflow Occurred in the node a0

State 244 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 138412032 (00000000 00000000 00000000 00000000 00001000 01000000 00000000 00000000)

State 245 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 8448 (00000000 00000000 00000000 00000000 00000000 00000000 00100001 00000000)

State 247 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 8192 (00000000 00000000 00000000 00000000 00000000 00000000 00100000 00000000)

State 251 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 8192 (00000000 00000000 00000000 00000000 00000000 00000000 00100000 00000000)

State 254 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 256 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 257 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 260 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 262 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -46137344 (11111111 11111111 11111111 11111111 11111101 01000000 00000000 00000000)

State 263 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -2816 (11111111 11111111 11111111 11111111 11111111 11111111 11110101 00000000)

State 266 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -2816 (11111111 11111111 11111111 11111111 11111111 11111111 11110101 00000000)
An Overflow Occurred in the node a0

State 271 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 46129152 (00000000 00000000 00000000 00000000 00000010 10111111 11100000 00000000)

State 272 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 2816 (00000000 00000000 00000000 00000000 00000000 00000000 00001011 00000000)

State 274 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 278 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 281 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 283 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 284 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 287 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 289 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -15376384 (11111111 11111111 11111111 11111111 11111111 00010101 01100000 00000000)

State 290 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -939 (11111111 11111111 11111111 11111111 11111111 11111111 11111100 01010101)

State 293 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -939 (11111111 11111111 11111111 11111111 11111111 11111111 11111100 01010101)
An Overflow Occurred in the node a0

State 298 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 48930816 (00000000 00000000 00000000 00000000 00000010 11101010 10100000 00000000)

State 299 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 2987 (00000000 00000000 00000000 00000000 00000000 00000000 00001011 10101011)

State 301 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 2048 (00000000 00000000 00000000 00000000 00000000 00000000 00001000 00000000)

State 305 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 2048 (00000000 00000000 00000000 00000000 00000000 00000000 00001000 00000000)

State 308 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 310 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 311 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 314 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 316 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -16310272 (11111111 11111111 11111111 11111111 11111111 00000111 00100000 00000000)

State 317 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -996 (11111111 11111111 11111111 11111111 11111111 11111111 11111100 00011100)

State 320 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -996 (11111111 11111111 11111111 11111111 11111111 11111111 11111100 00011100)
An Overflow Occurred in the node a0

State 325 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 402653184 (00000000 00000000 00000000 00000000 00011000 00000000 00000000 00000000)

State 326 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 24576 (00000000 00000000 00000000 00000000 00000000 00000000 01100000 00000000)

State 328 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 23580 (00000000 00000000 00000000 00000000 00000000 00000000 01011100 00011100)

State 332 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 23580 (00000000 00000000 00000000 00000000 00000000 00000000 01011100 00011100)

State 335 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 337 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 338 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 341 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 343 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -134217728 (11111111 11111111 11111111 11111111 11111000 00000000 00000000 00000000)

State 344 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -8192 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 00000000)

State 347 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -8192 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 00000000)
An Overflow Occurred in the node a0
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output

State 359 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-01-impl2.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-01-impl2.c: Parsing
In file included from benchmarks/ds-01-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.251s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.125s (1329 assignments)
Slicing time: 0.002s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.077s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.077s
Runtime decision procedure: 4.850s
BMC program time: 5.055s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-01-impl3.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-01-impl3.c: Parsing
In file included from benchmarks/ds-01-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.179s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.117s (1329 assignments)
Slicing time: 0.003s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.075s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.075s
Runtime decision procedure: 1.557s
BMC program time: 1.752s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-02-impl1.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-02-impl1.c: Parsing
In file included from benchmarks/ds-02-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.155s
GOTO program processing time: 0.026s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.131s (1329 assignments)
Slicing time: 0.003s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.081s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.081s
Runtime decision procedure: 3.015s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 1024.000000 (01000000 10010000 00000000 00000000 00000000 00000000 00000000 00000000)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 1024 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00000000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 61440.000000 (01000000 11101110 00000000 00000000 00000000 00000000 00000000 00000000)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 61440 (00000000 00000000 00000000 00000000 00000000 00000000 11110000 00000000)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 51200.000000 (01000000 11101001 00000000 00000000 00000000 00000000 00000000 00000000)

State 49 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 50 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = -640 (11111111 11111111 11111111 11111111 11111111 11111111 11111101 10000000)

State 52 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 53 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = -990 (11111111 11111111 11111111 11111111 11111111 11111111 11111100 00100010)

State 55 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 56 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = -132 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 01111100)

State 58 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 59 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = 496 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 11110000)

State 61 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 62 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = 820 (00000000 00000000 00000000 00000000 00000000 00000000 00000011 00110100)

State 64 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 65 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = 1024 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00000000)

State 67 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 68 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = -918 (11111111 11111111 11111111 11111111 11111111 11111111 11111100 01101010)

State 70 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 71 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = -512 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 00000000)

State 73 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 74 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = 1024 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 00000000)

State 76 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 77 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = 1 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001)

State 79 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 80 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 82 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -39321600 (11111111 11111111 11111111 11111111 11111101 10101000 00000000 00000000)

State 83 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -38400 (11111111 11111111 11111111 11111111 11111111 11111111 01101010 00000000)

State 85 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -38400 (11111111 11111111 11111111 11111111 11111111 11111111 01101010 00000000)

State 89 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-38400 << 10) / 1024

State 92 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 94 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 95 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 98 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 100 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 32768000 (00000000 00000000 00000000 00000000 00000001 11110100 00000000 00000000)

State 101 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 32000 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00000000)

State 104 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 32000 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00000000)
An Overflow Occurred in the node a0

State 109 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -60825600 (11111111 11111111 11111111 11111111 11111100 01011111 11100000 00000000)

State 110 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -59400 (11111111 11111111 11111111 11111111 11111111 11111111 00010111 11111000)

State 112 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -27400 (11111111 11111111 11111111 11111111 11111111 11111111 10010100 11111000)

State 116 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-27400 << 10) / 1024

State 119 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 121 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 122 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 125 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 127 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 50688000 (00000000 00000000 00000000 00000000 00000011 00000101 01110000 00000000)

State 128 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 49500 (00000000 00000000 00000000 00000000 00000000 00000000 11000001 01011100)

State 131 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 49500 (00000000 00000000 00000000 00000000 00000000 00000000 11000001 01011100)
An Overflow Occurred in the node a0

State 136 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -8110080 (11111111 11111111 11111111 11111111 11111111 10000100 01000000 00000000)

State 137 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -7920 (11111111 11111111 11111111 11111111 11111111 11111111 11100001 00010000)

State 139 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 41580 (00000000 00000000 00000000 00000000 00000000 00000000 10100010 01101100)

State 143 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 41580 (00000000 00000000 00000000 00000000 00000000 00000000 10100010 01101100)

State 146 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 148 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 149 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 152 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 154 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 6758400 (00000000 00000000 00000000 00000000 00000000 01100111 00100000 00000000)

State 155 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 6600 (00000000 00000000 00000000 00000000 00000000 00000000 00011001 11001000)

State 158 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 6600 (00000000 00000000 00000000 00000000 00000000 00000000 00011001 11001000)
An Overflow Occurred in the node a0

State 163 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 30474240 (00000000 00000000 00000000 00000000 00000001 11010001 00000000 00000000)

State 164 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 29760 (00000000 00000000 00000000 00000000 00000000 00000000 01110100 01000000)

State 166 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 36360 (00000000 00000000 00000000 00000000 00000000 00000000 10001110 00001000)

State 170 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 36360 (00000000 00000000 00000000 00000000 00000000 00000000 10001110 00001000)

State 173 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 175 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 176 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 179 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 181 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -25395200 (11111111 11111111 11111111 11111111 11111110 01111100 10000000 00000000)

State 182 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -24800 (11111111 11111111 11111111 11111111 11111111 11111111 10011111 00100000)

State 185 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -24800 (11111111 11111111 11111111 11111111 11111111 11111111 10011111 00100000)
An Overflow Occurred in the node a0

State 190 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 50380800 (00000000 00000000 00000000 00000000 00000011 00000000 11000000 00000000)

State 191 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 49200 (00000000 00000000 00000000 00000000 00000000 00000000 11000000 00110000)

State 193 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 24400 (00000000 00000000 00000000 00000000 00000000 00000000 01011111 01010000)

State 197 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 24400 (00000000 00000000 00000000 00000000 00000000 00000000 01011111 01010000)

State 200 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 202 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 203 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 206 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 208 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -41984000 (11111111 11111111 11111111 11111111 11111101 01111111 01100000 00000000)

State 209 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -41000 (11111111 11111111 11111111 11111111 11111111 11111111 01011111 11011000)

State 212 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -41000 (11111111 11111111 11111111 11111111 11111111 11111111 01011111 11011000)
An Overflow Occurred in the node a0

State 217 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 62914560 (00000000 00000000 00000000 00000000 00000011 11000000 00000000 00000000)

State 218 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 61440 (00000000 00000000 00000000 00000000 00000000 00000000 11110000 00000000)

State 220 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 20440 (00000000 00000000 00000000 00000000 00000000 00000000 01001111 11011000)

State 224 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 20440 (00000000 00000000 00000000 00000000 00000000 00000000 01001111 11011000)

State 227 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 229 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 230 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 233 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 235 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -52428800 (11111111 11111111 11111111 11111111 11111100 11100000 00000000 00000000)

State 236 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -51200 (11111111 11111111 11111111 11111111 11111111 11111111 00111000 00000000)

State 239 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -51200 (11111111 11111111 11111111 11111111 11111111 11111111 00111000 00000000)
An Overflow Occurred in the node a0

State 244 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -56401920 (11111111 11111111 11111111 11111111 11111100 10100011 01100000 00000000)

State 245 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -55080 (11111111 11111111 11111111 11111111 11111111 11111111 00101000 11011000)

State 247 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -106280 (11111111 11111111 11111111 11111111 11111111 11111110 01100000 11011000)

State 251 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-106280 << 10) / 1024

State 254 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 256 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 257 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 260 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 262 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 47001600 (00000000 00000000 00000000 00000000 00000010 11001101 00110000 00000000)

State 263 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 45900 (00000000 00000000 00000000 00000000 00000000 00000000 10110011 01001100)

State 266 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 45900 (00000000 00000000 00000000 00000000 00000000 00000000 10110011 01001100)
An Overflow Occurred in the node a0

State 271 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -31457280 (11111111 11111111 11111111 11111111 11111110 00100000 00000000 00000000)

State 272 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -30720 (11111111 11111111 11111111 11111111 11111111 11111111 10001000 00000000)

State 274 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 15180 (00000000 00000000 00000000 00000000 00000000 00000000 00111011 01001100)

State 278 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 15180 (00000000 00000000 00000000 00000000 00000000 00000000 00111011 01001100)

State 281 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 283 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 284 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 287 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 289 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 26214400 (00000000 00000000 00000000 00000000 00000001 10010000 00000000 00000000)

State 290 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 25600 (00000000 00000000 00000000 00000000 00000000 00000000 01100100 00000000)

State 293 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 25600 (00000000 00000000 00000000 00000000 00000000 00000000 01100100 00000000)
An Overflow Occurred in the node a0

State 298 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 62914560 (00000000 00000000 00000000 00000000 00000011 11000000 00000000 00000000)

State 299 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 61440 (00000000 00000000 00000000 00000000 00000000 00000000 11110000 00000000)

State 301 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 87040 (00000000 00000000 00000000 00000000 00000000 00000001 01010100 00000000)

State 305 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 87040 (00000000 00000000 00000000 00000000 00000000 00000001 01010100 00000000)

State 308 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 310 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 311 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 314 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 316 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -52428800 (11111111 11111111 11111111 11111111 11111100 11100000 00000000 00000000)

State 317 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -51200 (11111111 11111111 11111111 11111111 11111111 11111111 00111000 00000000)

State 320 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -51200 (11111111 11111111 11111111 11111111 11111111 11111111 00111000 00000000)
An Overflow Occurred in the node a0

State 325 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 61440 (00000000 00000000 00000000 00000000 00000000 00000000 11110000 00000000)

State 326 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 60 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00111100)

State 328 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -51140 (11111111 11111111 11111111 11111111 11111111 11111111 00111000 00111100)

State 332 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-51140 << 10) / 1024

State 335 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 337 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 338 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 341 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 343 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -51200 (11111111 11111111 11111111 11111111 11111111 11111111 00111000 00000000)

State 344 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -50 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11001110)

State 347 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -50 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11001110)
An Overflow Occurred in the node a0
An Overflow Occurred in system's output

State 353 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-02-impl2.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-02-impl2.c: Parsing
In file included from benchmarks/ds-02-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.247s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.120s (1329 assignments)
Slicing time: 0.002s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.076s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.076s
Runtime decision procedure: 3.901s
BMC program time: 4.100s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-02-impl3.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-02-impl3.c: Parsing
In file included from benchmarks/ds-02-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.171s
GOTO program processing time: 0.025s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.124s (1329 assignments)
Slicing time: 0.003s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.079s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.079s
Runtime decision procedure: 3.820s
BMC program time: 4.026s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-03-impl1.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-03-impl1.c: Parsing
In file included from benchmarks/ds-03-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.386s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.118s (1329 assignments)
Slicing time: 0.003s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.074s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.074s
Runtime decision procedure: 3.574s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 512.000000 (01000000 10000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 512 (00000000 00000000 00000000 00000000 00000000 00000000 00000010 00000000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 56320.000000 (01000000 11101011 10000000 00000000 00000000 00000000 00000000 00000000)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 56320 (00000000 00000000 00000000 00000000 00000000 00000000 11011100 00000000)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 51200.000000 (01000000 11101001 00000000 00000000 00000000 00000000 00000000 00000000)

State 49 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 50 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = 256 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 00000000)

State 52 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 53 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = -357 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 10011011)

State 55 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 56 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 58 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 59 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = -269 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 11110011)

State 61 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 62 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 64 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 65 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = -512 (11111111 11111111 11111111 11111111 11111111 11111111 11111110 00000000)

State 67 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 68 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = 320 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 01000000)

State 70 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 71 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = 105 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 01101001)

State 73 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 74 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 76 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 77 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = -206 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 00110010)

State 79 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 80 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 82 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 14417920 (00000000 00000000 00000000 00000000 00000000 11011100 00000000 00000000)

State 83 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 28160 (00000000 00000000 00000000 00000000 00000000 00000000 01101110 00000000)

State 85 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 28160 (00000000 00000000 00000000 00000000 00000000 00000000 01101110 00000000)

State 89 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 28160 (00000000 00000000 00000000 00000000 00000000 00000000 01101110 00000000)

State 92 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 94 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 95 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 98 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 100 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -13107200 (11111111 11111111 11111111 11111111 11111111 00111000 00000000 00000000)

State 101 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -25600 (11111111 11111111 11111111 11111111 11111111 11111111 10011100 00000000)

State 104 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -25600 (11111111 11111111 11111111 11111111 11111111 11111111 10011100 00000000)
An Overflow Occurred in the node a0

State 109 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -20106240 (11111111 11111111 11111111 11111111 11111110 11001101 00110100 00000000)

State 110 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -39270 (11111111 11111111 11111111 11111111 11111111 11111111 01100110 10011010)

State 112 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -64870 (11111111 11111111 11111111 11111111 11111111 11111111 00000010 10011010)

State 116 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-64870 << 9) / 512

State 119 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 121 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 122 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 125 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 127 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 18278400 (00000000 00000000 00000000 00000000 00000001 00010110 11101000 00000000)

State 128 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 35700 (00000000 00000000 00000000 00000000 00000000 00000000 10001011 01110100)

State 131 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 35700 (00000000 00000000 00000000 00000000 00000000 00000000 10001011 01110100)
An Overflow Occurred in the node a0

State 136 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 137 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 139 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 35700 (00000000 00000000 00000000 00000000 00000000 00000000 10001011 01110100)

State 143 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 35700 (00000000 00000000 00000000 00000000 00000000 00000000 10001011 01110100)

State 146 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 148 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 149 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 152 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 154 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 155 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 158 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node a0

State 163 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -15150080 (11111111 11111111 11111111 11111111 11111111 00011000 11010100 00000000)

State 164 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -29590 (11111111 11111111 11111111 11111111 11111111 11111111 10001100 01101010)

State 166 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -29590 (11111111 11111111 11111111 11111111 11111111 11111111 10001100 01101010)

State 170 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-29590 << 9) / 512

State 173 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 175 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 176 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 179 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 181 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 13772800 (00000000 00000000 00000000 00000000 00000000 11010010 00101000 00000000)

State 182 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 26900 (00000000 00000000 00000000 00000000 00000000 00000000 01101001 00010100)

State 185 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 26900 (00000000 00000000 00000000 00000000 00000000 00000000 01101001 00010100)
An Overflow Occurred in the node a0

State 190 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 191 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 193 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 26900 (00000000 00000000 00000000 00000000 00000000 00000000 01101001 00010100)

State 197 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 26900 (00000000 00000000 00000000 00000000 00000000 00000000 01101001 00010100)

State 200 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 202 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 203 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 206 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 208 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 209 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 212 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node a0

State 217 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -28835840 (11111111 11111111 11111111 11111111 11111110 01001000 00000000 00000000)

State 218 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -56320 (11111111 11111111 11111111 11111111 11111111 11111111 00100100 00000000)

State 220 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -56320 (11111111 11111111 11111111 11111111 11111111 11111111 00100100 00000000)

State 224 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-56320 << 9) / 512

State 227 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 229 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 230 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 233 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 235 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 26214400 (00000000 00000000 00000000 00000000 00000001 10010000 00000000 00000000)

State 236 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 51200 (00000000 00000000 00000000 00000000 00000000 00000000 11001000 00000000)

State 239 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 51200 (00000000 00000000 00000000 00000000 00000000 00000000 11001000 00000000)
An Overflow Occurred in the node a0

State 244 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 18022400 (00000000 00000000 00000000 00000000 00000001 00010011 00000000 00000000)

State 245 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 35200 (00000000 00000000 00000000 00000000 00000000 00000000 10001001 10000000)

State 247 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 86400 (00000000 00000000 00000000 00000000 00000000 00000001 01010001 10000000)

State 251 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 86400 (00000000 00000000 00000000 00000000 00000000 00000001 01010001 10000000)

State 254 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 256 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 257 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 260 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 262 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -16384000 (11111111 11111111 11111111 11111111 11111111 00000110 00000000 00000000)

State 263 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -32000 (11111111 11111111 11111111 11111111 11111111 11111111 10000011 00000000)

State 266 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -32000 (11111111 11111111 11111111 11111111 11111111 11111111 10000011 00000000)
An Overflow Occurred in the node a0

State 271 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 5913600 (00000000 00000000 00000000 00000000 00000000 01011010 00111100 00000000)

State 272 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 11550 (00000000 00000000 00000000 00000000 00000000 00000000 00101101 00011110)

State 274 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -20450 (11111111 11111111 11111111 11111111 11111111 11111111 10110000 00011110)

State 278 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-20450 << 9) / 512

State 281 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 283 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 284 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 287 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 289 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -5376000 (11111111 11111111 11111111 11111111 11111111 10101101 11111000 00000000)

State 290 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -10500 (11111111 11111111 11111111 11111111 11111111 11111111 11010110 11111100)

State 293 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -10500 (11111111 11111111 11111111 11111111 11111111 11111111 11010110 11111100)
An Overflow Occurred in the node a0

State 298 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 299 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 301 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -10500 (11111111 11111111 11111111 11111111 11111111 11111111 11010110 11111100)

State 305 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-10500 << 9) / 512

State 308 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 310 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 311 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 314 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 316 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 317 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 320 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node a0

State 325 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -11601920 (11111111 11111111 11111111 11111111 11111111 01001110 11111000 00000000)

State 326 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -22660 (11111111 11111111 11111111 11111111 11111111 11111111 10100111 01111100)

State 328 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -22660 (11111111 11111111 11111111 11111111 11111111 11111111 10100111 01111100)

State 332 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-22660 << 9) / 512

State 335 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 337 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 338 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 341 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 343 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 10547200 (00000000 00000000 00000000 00000000 00000000 10100000 11110000 00000000)

State 344 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 20600 (00000000 00000000 00000000 00000000 00000000 00000000 01010000 01111000)

State 347 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 20600 (00000000 00000000 00000000 00000000 00000000 00000000 01010000 01111000)
An Overflow Occurred in the node a0
An Overflow Occurred in system's output
An Overflow Occurred in system's output

State 356 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-03-impl2.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-03-impl2.c: Parsing
In file included from benchmarks/ds-03-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.252s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.116s (1329 assignments)
Slicing time: 0.002s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.074s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.074s
Runtime decision procedure: 7.078s
BMC program time: 7.271s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-03-impl3.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-03-impl3.c: Parsing
In file included from benchmarks/ds-03-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.200s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.120s (1329 assignments)
Slicing time: 0.002s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.075s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.075s
Runtime decision procedure: 6.727s
BMC program time: 6.925s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-04-impl1.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-04-impl1.c: Parsing
In file included from benchmarks/ds-04-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.166s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 3 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 3 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 3 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 3 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 3 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.178s (1869 assignments)
Slicing time: 0.004s (removed 460 assignments)
Generated 597 VCC(s), 294 remaining after simplification (1409 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.090s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.090s
Runtime decision procedure: 48.522s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 256.000000 (01000000 01110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 256 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 00000000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 256.000000 (01000000 01110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 34560.000000 (01000000 11100000 11100000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 34560 (00000000 00000000 00000000 00000000 00000000 00000000 10000111 00000000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 58 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 59 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 60 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 66560.000000 (01000000 11110000 01000000 00000000 00000000 00000000 00000000 00000000)

State 70 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 32000.000000 (01000000 11011111 01000000 00000000 00000000 00000000 00000000 00000000)

State 71 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 32000 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00000000)

State 72 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 73 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 74 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = -131 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 01111101)

State 76 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 77 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = -256 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 00000000)

State 79 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 80 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 82 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 83 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = -160 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 01100000)

State 85 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 86 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = 40 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00101000)

State 88 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 89 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = -73 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 10110111)

State 91 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 92 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = 48 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00110000)

State 94 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 95 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = -41 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11010111)

State 97 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 98 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = 211 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 11010011)

State 100 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 101 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = -18 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11101110)

State 103 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 104 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 105 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 107 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -4527360 (11111111 11111111 11111111 11111111 11111111 10111010 11101011 00000000)

State 108 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -17685 (11111111 11111111 11111111 11111111 11111111 11111111 10111010 11101011)

State 110 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -17685 (11111111 11111111 11111111 11111111 11111111 11111111 10111010 11101011)

State 114 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-17685 << 8) / 256

State 117 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 119 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 4527360 (00000000 00000000 00000000 00000000 00000000 01000101 00010101 00000000)

State 120 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 17685 (00000000 00000000 00000000 00000000 00000000 00000000 01000101 00010101)

State 123 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -17685 (11111111 11111111 11111111 11111111 11111111 11111111 10111010 11101011)

State 125 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 8719360 (00000000 00000000 00000000 00000000 00000000 10000101 00001100 00000000)

State 126 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 34060 (00000000 00000000 00000000 00000000 00000000 00000000 10000101 00001100)

State 129 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 16375 (00000000 00000000 00000000 00000000 00000000 00000000 00111111 11110111)

State 132 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 134 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 135 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 138 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 140 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -4192000 (11111111 11111111 11111111 11111111 11111111 11000000 00001001 00000000)

State 141 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -16375 (11111111 11111111 11111111 11111111 11111111 11111111 11000000 00001001)

State 144 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -16375 (11111111 11111111 11111111 11111111 11111111 11111111 11000000 00001001)
An Overflow Occurred in the node a0

State 149 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -8847360 (11111111 11111111 11111111 11111111 11111111 01111001 00000000 00000000)

State 150 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -34560 (11111111 11111111 11111111 11111111 11111111 11111111 01111001 00000000)

State 152 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -18185 (11111111 11111111 11111111 11111111 11111111 11111111 10111000 11110111)

State 156 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-18185 << 8) / 256

State 159 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = -16375 (11111111 11111111 11111111 11111111 11111111 11111111 11000000 00001001)

State 161 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 4655360 (00000000 00000000 00000000 00000000 00000000 01000111 00001001 00000000)

State 162 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 18185 (00000000 00000000 00000000 00000000 00000000 00000000 01000111 00001001)

State 165 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -34560 (11111111 11111111 11111111 11111111 11111111 11111111 01111001 00000000)

State 167 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 17039360 (00000000 00000000 00000000 00000000 00000001 00000100 00000000 00000000)

State 168 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 66560 (00000000 00000000 00000000 00000000 00000000 00000001 00000100 00000000)

State 171 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 32000 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00000000)

State 174 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 176 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 177 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 180 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 182 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -8192000 (11111111 11111111 11111111 11111111 11111111 10000011 00000000 00000000)

State 183 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -32000 (11111111 11111111 11111111 11111111 11111111 11111111 10000011 00000000)

State 186 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -32000 (11111111 11111111 11111111 11111111 11111111 11111111 10000011 00000000)
An Overflow Occurred in the node a0

State 191 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 192 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 194 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 32000 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00000000)

State 198 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 32000 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00000000)

State 201 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = -32000 (11111111 11111111 11111111 11111111 11111111 11111111 10000011 00000000)

State 203 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -8192000 (11111111 11111111 11111111 11111111 11111111 10000011 00000000 00000000)

State 204 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -32000 (11111111 11111111 11111111 11111111 11111111 11111111 10000011 00000000)

State 207 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 209 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 210 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 213 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 216 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 218 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 219 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 222 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 224 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 225 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 228 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
An Overflow Occurred in the node a0

State 233 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -5529600 (11111111 11111111 11111111 11111111 11111111 10101011 10100000 00000000)

State 234 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -21600 (11111111 11111111 11111111 11111111 11111111 11111111 10101011 10100000)

State 236 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -21600 (11111111 11111111 11111111 11111111 11111111 11111111 10101011 10100000)

State 240 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-21600 << 8) / 256

State 243 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 245 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 5529600 (00000000 00000000 00000000 00000000 00000000 01010100 01100000 00000000)

State 246 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 21600 (00000000 00000000 00000000 00000000 00000000 00000000 01010100 01100000)

State 249 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -21600 (11111111 11111111 11111111 11111111 11111111 11111111 10101011 10100000)

State 251 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 10649600 (00000000 00000000 00000000 00000000 00000000 10100010 10000000 00000000)

State 252 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 41600 (00000000 00000000 00000000 00000000 00000000 00000000 10100010 10000000)

State 255 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 20000 (00000000 00000000 00000000 00000000 00000000 00000000 01001110 00100000)

State 258 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 260 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 261 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 264 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 266 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -5120000 (11111111 11111111 11111111 11111111 11111111 10110001 11100000 00000000)

State 267 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -20000 (11111111 11111111 11111111 11111111 11111111 11111111 10110001 11100000)

State 270 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -20000 (11111111 11111111 11111111 11111111 11111111 11111111 10110001 11100000)
An Overflow Occurred in the node a0

State 275 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 1382400 (00000000 00000000 00000000 00000000 00000000 00010101 00011000 00000000)

State 276 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 5400 (00000000 00000000 00000000 00000000 00000000 00000000 00010101 00011000)

State 278 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 25400 (00000000 00000000 00000000 00000000 00000000 00000000 01100011 00111000)

State 282 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 25400 (00000000 00000000 00000000 00000000 00000000 00000000 01100011 00111000)

State 285 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = -20000 (11111111 11111111 11111111 11111111 11111111 11111111 10110001 11100000)

State 287 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -6502400 (11111111 11111111 11111111 11111111 11111111 10011100 11001000 00000000)

State 288 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -25400 (11111111 11111111 11111111 11111111 11111111 11111111 10011100 11001000)

State 291 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 5400 (00000000 00000000 00000000 00000000 00000000 00000000 00010101 00011000)

State 293 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -2662400 (11111111 11111111 11111111 11111111 11111111 11010111 01100000 00000000)

State 294 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -10400 (11111111 11111111 11111111 11111111 11111111 11111111 11010111 01100000)

State 297 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -5000 (11111111 11111111 11111111 11111111 11111111 11111111 11101100 01111000)

State 300 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 302 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 303 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 306 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 308 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 1280000 (00000000 00000000 00000000 00000000 00000000 00010011 10001000 00000000)

State 309 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 5000 (00000000 00000000 00000000 00000000 00000000 00000000 00010011 10001000)

State 312 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 5000 (00000000 00000000 00000000 00000000 00000000 00000000 00010011 10001000)
An Overflow Occurred in the node a0

State 317 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -2522880 (11111111 11111111 11111111 11111111 11111111 11011001 10000001 00000000)

State 318 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -9855 (11111111 11111111 11111111 11111111 11111111 11111111 11011001 10000001)

State 320 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -14855 (11111111 11111111 11111111 11111111 11111111 11111111 11000101 11111001)

State 324 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-14855 << 8) / 256

State 327 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 5000 (00000000 00000000 00000000 00000000 00000000 00000000 00010011 10001000)

State 329 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 3802880 (00000000 00000000 00000000 00000000 00000000 00111010 00000111 00000000)

State 330 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 14855 (00000000 00000000 00000000 00000000 00000000 00000000 00111010 00000111)

State 333 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -9855 (11111111 11111111 11111111 11111111 11111111 11111111 11011001 10000001)

State 335 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 4858880 (00000000 00000000 00000000 00000000 00000000 01001010 00100100 00000000)

State 336 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 18980 (00000000 00000000 00000000 00000000 00000000 00000000 01001010 00100100)

State 339 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 9125 (00000000 00000000 00000000 00000000 00000000 00000000 00100011 10100101)

State 342 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 344 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 345 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 348 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 350 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -2336000 (11111111 11111111 11111111 11111111 11111111 11011100 01011011 00000000)

State 351 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -9125 (11111111 11111111 11111111 11111111 11111111 11111111 11011100 01011011)

State 354 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -9125 (11111111 11111111 11111111 11111111 11111111 11111111 11011100 01011011)
An Overflow Occurred in the node a0

State 359 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 1658880 (00000000 00000000 00000000 00000000 00000000 00011001 01010000 00000000)

State 360 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 6480 (00000000 00000000 00000000 00000000 00000000 00000000 00011001 01010000)

State 362 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 15605 (00000000 00000000 00000000 00000000 00000000 00000000 00111100 11110101)

State 366 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 15605 (00000000 00000000 00000000 00000000 00000000 00000000 00111100 11110101)

State 369 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = -9125 (11111111 11111111 11111111 11111111 11111111 11111111 11011100 01011011)

State 371 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -3994880 (11111111 11111111 11111111 11111111 11111111 11000011 00001011 00000000)

State 372 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -15605 (11111111 11111111 11111111 11111111 11111111 11111111 11000011 00001011)

State 375 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 6480 (00000000 00000000 00000000 00000000 00000000 00000000 00011001 01010000)

State 377 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -3194880 (11111111 11111111 11111111 11111111 11111111 11001111 01000000 00000000)

State 378 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -12480 (11111111 11111111 11111111 11111111 11111111 11111111 11001111 01000000)

State 381 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -6000 (11111111 11111111 11111111 11111111 11111111 11111111 11101000 10010000)

State 384 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 386 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 387 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 390 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 392 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 1536000 (00000000 00000000 00000000 00000000 00000000 00010111 01110000 00000000)

State 393 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 6000 (00000000 00000000 00000000 00000000 00000000 00000000 00010111 01110000)

State 396 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 6000 (00000000 00000000 00000000 00000000 00000000 00000000 00010111 01110000)
An Overflow Occurred in the node a0

State 401 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -1416960 (11111111 11111111 11111111 11111111 11111111 11101010 01100001 00000000)

State 402 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -5535 (11111111 11111111 11111111 11111111 11111111 11111111 11101010 01100001)

State 404 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -11535 (11111111 11111111 11111111 11111111 11111111 11111111 11010010 11110001)

State 408 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-11535 << 8) / 256

State 411 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 6000 (00000000 00000000 00000000 00000000 00000000 00000000 00010111 01110000)

State 413 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 2952960 (00000000 00000000 00000000 00000000 00000000 00101101 00001111 00000000)

State 414 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 11535 (00000000 00000000 00000000 00000000 00000000 00000000 00101101 00001111)

State 417 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -5535 (11111111 11111111 11111111 11111111 11111111 11111111 11101010 01100001)

State 419 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 2728960 (00000000 00000000 00000000 00000000 00000000 00101001 10100100 00000000)

State 420 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 10660 (00000000 00000000 00000000 00000000 00000000 00000000 00101001 10100100)

State 423 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 5125 (00000000 00000000 00000000 00000000 00000000 00000000 00010100 00000101)

State 426 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 428 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 429 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 432 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 434 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -1312000 (11111111 11111111 11111111 11111111 11111111 11101011 11111011 00000000)

State 435 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -5125 (11111111 11111111 11111111 11111111 11111111 11111111 11101011 11111011)

State 438 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -5125 (11111111 11111111 11111111 11111111 11111111 11111111 11101011 11111011)
An Overflow Occurred in the node a0

State 443 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 7292160 (00000000 00000000 00000000 00000000 00000000 01101111 01000101 00000000)

State 444 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 28485 (00000000 00000000 00000000 00000000 00000000 00000000 01101111 01000101)

State 446 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 33610 (00000000 00000000 00000000 00000000 00000000 00000000 10000011 01001010)

State 450 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 33610 (00000000 00000000 00000000 00000000 00000000 00000000 10000011 01001010)

State 453 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = -5125 (11111111 11111111 11111111 11111111 11111111 11111111 11101011 11111011)

State 455 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -8604160 (11111111 11111111 11111111 11111111 11111111 01111100 10110110 00000000)

State 456 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -33610 (11111111 11111111 11111111 11111111 11111111 11111111 01111100 10110110)

State 459 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 28485 (00000000 00000000 00000000 00000000 00000000 00000000 01101111 01000101)

State 461 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -14044160 (11111111 11111111 11111111 11111111 11111111 00101001 10110100 00000000)

State 462 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -54860 (11111111 11111111 11111111 11111111 11111111 11111111 00101001 10110100)

State 465 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -26375 (11111111 11111111 11111111 11111111 11111111 11111111 10011000 11111001)

State 468 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 470 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 471 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 474 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 476 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 6752000 (00000000 00000000 00000000 00000000 00000000 01100111 00000111 00000000)

State 477 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 26375 (00000000 00000000 00000000 00000000 00000000 00000000 01100111 00000111)

State 480 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 26375 (00000000 00000000 00000000 00000000 00000000 00000000 01100111 00000111)
An Overflow Occurred in the node a0

State 485 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -622080 (11111111 11111111 11111111 11111111 11111111 11110110 10000010 00000000)

State 486 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -2430 (11111111 11111111 11111111 11111111 11111111 11111111 11110110 10000010)

State 488 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -28805 (11111111 11111111 11111111 11111111 11111111 11111111 10001111 01111011)

State 492 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-28805 << 8) / 256

State 495 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 26375 (00000000 00000000 00000000 00000000 00000000 00000000 01100111 00000111)

State 497 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 7374080 (00000000 00000000 00000000 00000000 00000000 01110000 10000101 00000000)

State 498 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 28805 (00000000 00000000 00000000 00000000 00000000 00000000 01110000 10000101)

State 501 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -2430 (11111111 11111111 11111111 11111111 11111111 11111111 11110110 10000010)

State 503 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 1198080 (00000000 00000000 00000000 00000000 00000000 00010010 01001000 00000000)

State 504 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 4680 (00000000 00000000 00000000 00000000 00000000 00000000 00010010 01001000)

State 507 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 2250 (00000000 00000000 00000000 00000000 00000000 00000000 00001000 11001010)

State 510 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 512 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 513 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 516 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 518 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -576000 (11111111 11111111 11111111 11111111 11111111 11110111 00110110 00000000)

State 519 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -2250 (11111111 11111111 11111111 11111111 11111111 11111111 11110111 00110110)

State 522 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -2250 (11111111 11111111 11111111 11111111 11111111 11111111 11110111 00110110)
An Overflow Occurred in the node a0
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output

State 552 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-04-impl2.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-04-impl2.c: Parsing
In file included from benchmarks/ds-04-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.213s
GOTO program processing time: 0.025s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 3 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 3 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 3 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 3 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 3 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.192s (1869 assignments)
Slicing time: 0.004s (removed 460 assignments)
Generated 597 VCC(s), 294 remaining after simplification (1409 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.091s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.091s
Runtime decision procedure: 231.819s
BMC program time: 232.107s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-04-impl3.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-04-impl3.c: Parsing
In file included from benchmarks/ds-04-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.151s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 3 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 3 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 3 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 3 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 3 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.174s (1869 assignments)
Slicing time: 0.003s (removed 460 assignments)
Generated 597 VCC(s), 294 remaining after simplification (1409 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.087s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.087s
Runtime decision procedure: 236.857s
BMC program time: 237.122s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-05-impl1.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-05-impl1.c: Parsing
In file included from benchmarks/ds-05-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.142s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 3 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 3 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 3 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 3 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 3 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.173s (1869 assignments)
Slicing time: 0.004s (removed 460 assignments)
Generated 597 VCC(s), 294 remaining after simplification (1409 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.088s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.088s
Runtime decision procedure: 11.313s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 64.000000 (01000000 01010000 00000000 00000000 00000000 00000000 00000000 00000000)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 64 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 01000000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 64.000000 (01000000 01010000 00000000 00000000 00000000 00000000 00000000 00000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 1.281280e+5 (01000000 11111111 01001000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 128128 (00000000 00000000 00000000 00000000 00000000 00000001 11110100 10000000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 58 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 59 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 60 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 2.560000e+5 (01000001 00001111 01000000 00000000 00000000 00000000 00000000 00000000)

State 70 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 1.278720e+5 (01000000 11111111 00111000 00000000 00000000 00000000 00000000 00000000)

State 71 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 127872 (00000000 00000000 00000000 00000000 00000000 00000001 11110011 10000000)

State 72 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 73 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 74 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = -5 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111011)

State 76 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 77 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = -18 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11101110)

State 79 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 80 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = -64 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000000)

State 82 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 83 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = 8 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001000)

State 85 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 86 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = 18 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00010010)

State 88 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 89 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = -2 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111110)

State 91 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 92 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = -64 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000000)

State 94 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 95 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = -61 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11000011)

State 97 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 98 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = 64 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 01000000)

State 100 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 101 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = 34 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00100010)

State 103 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 104 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 105 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 107 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -640640 (11111111 11111111 11111111 11111111 11111111 11110110 00111001 10000000)

State 108 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -10010 (11111111 11111111 11111111 11111111 11111111 11111111 11011000 11100110)

State 110 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -10010 (11111111 11111111 11111111 11111111 11111111 11111111 11011000 11100110)

State 114 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-10010 << 6) / 64

State 117 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 119 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 120 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 123 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 125 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 1280000 (00000000 00000000 00000000 00000000 00000000 00010011 10001000 00000000)

State 126 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 20000 (00000000 00000000 00000000 00000000 00000000 00000000 01001110 00100000)

State 129 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 20000 (00000000 00000000 00000000 00000000 00000000 00000000 01001110 00100000)

State 132 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 134 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 640640 (00000000 00000000 00000000 00000000 00000000 00001001 11000110 10000000)

State 135 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 10010 (00000000 00000000 00000000 00000000 00000000 00000000 00100111 00011010)

State 138 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -10010 (11111111 11111111 11111111 11111111 11111111 11111111 11011000 11100110)

State 140 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -639360 (11111111 11111111 11111111 11111111 11111111 11110110 00111110 10000000)

State 141 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -9990 (11111111 11111111 11111111 11111111 11111111 11111111 11011000 11111010)

State 144 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -20000 (11111111 11111111 11111111 11111111 11111111 11111111 10110001 11100000)
An Overflow Occurred in the node a0

State 149 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -2306304 (11111111 11111111 11111111 11111111 11111111 11011100 11001111 00000000)

State 150 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -36036 (11111111 11111111 11111111 11111111 11111111 11111111 01110011 00111100)

State 152 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -16036 (11111111 11111111 11111111 11111111 11111111 11111111 11000001 01011100)

State 156 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-16036 << 6) / 64

State 159 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = -20000 (11111111 11111111 11111111 11111111 11111111 11111111 10110001 11100000)

State 161 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 162 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 165 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -20000 (11111111 11111111 11111111 11111111 11111111 11111111 10110001 11100000)

State 167 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 4608000 (00000000 00000000 00000000 00000000 00000000 01000110 01010000 00000000)

State 168 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 72000 (00000000 00000000 00000000 00000000 00000000 00000001 00011001 01000000)

State 171 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 52000 (00000000 00000000 00000000 00000000 00000000 00000000 11001011 00100000)

State 174 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 176 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 1026304 (00000000 00000000 00000000 00000000 00000000 00001111 10101001 00000000)

State 177 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 16036 (00000000 00000000 00000000 00000000 00000000 00000000 00111110 10100100)

State 180 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -16036 (11111111 11111111 11111111 11111111 11111111 11111111 11000001 01011100)

State 182 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -2301696 (11111111 11111111 11111111 11111111 11111111 11011100 11100001 00000000)

State 183 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -35964 (11111111 11111111 11111111 11111111 11111111 11111111 01110011 10000100)

State 186 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -52000 (11111111 11111111 11111111 11111111 11111111 11111111 00110100 11100000)
An Overflow Occurred in the node a0

State 191 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -8200192 (11111111 11111111 11111111 11111111 11111111 10000010 11100000 00000000)

State 192 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -128128 (11111111 11111111 11111111 11111111 11111111 11111110 00001011 10000000)

State 194 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -76128 (11111111 11111111 11111111 11111111 11111111 11111110 11010110 10100000)

State 198 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-76128 << 6) / 64

State 201 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = -52000 (11111111 11111111 11111111 11111111 11111111 11111111 00110100 11100000)

State 203 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 204 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 207 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -52000 (11111111 11111111 11111111 11111111 11111111 11111111 00110100 11100000)

State 209 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 16384000 (00000000 00000000 00000000 00000000 00000000 11111010 00000000 00000000)

State 210 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 256000 (00000000 00000000 00000000 00000000 00000000 00000011 11101000 00000000)

State 213 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 204000 (00000000 00000000 00000000 00000000 00000000 00000011 00011100 11100000)

State 216 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 218 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 4872192 (00000000 00000000 00000000 00000000 00000000 01001010 01011000 00000000)

State 219 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 76128 (00000000 00000000 00000000 00000000 00000000 00000001 00101001 01100000)

State 222 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -76128 (11111111 11111111 11111111 11111111 11111111 11111110 11010110 10100000)

State 224 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -8183808 (11111111 11111111 11111111 11111111 11111111 10000011 00100000 00000000)

State 225 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -127872 (11111111 11111111 11111111 11111111 11111111 11111110 00001100 10000000)

State 228 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -204000 (11111111 11111111 11111111 11111111 11111111 11111100 11100011 00100000)
An Overflow Occurred in the node a0

State 233 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 1025024 (00000000 00000000 00000000 00000000 00000000 00001111 10100100 00000000)

State 234 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 16016 (00000000 00000000 00000000 00000000 00000000 00000000 00111110 10010000)

State 236 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 220016 (00000000 00000000 00000000 00000000 00000000 00000011 01011011 01110000)

State 240 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 220016 (00000000 00000000 00000000 00000000 00000000 00000011 01011011 01110000)

State 243 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = -204000 (11111111 11111111 11111111 11111111 11111111 11111100 11100011 00100000)

State 245 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 246 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 249 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -204000 (11111111 11111111 11111111 11111111 11111111 11111100 11100011 00100000)

State 251 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -2048000 (11111111 11111111 11111111 11111111 11111111 11100000 11000000 00000000)

State 252 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -32000 (11111111 11111111 11111111 11111111 11111111 11111111 10000011 00000000)

State 255 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -236000 (11111111 11111111 11111111 11111111 11111111 11111100 01100110 00100000)

State 258 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 260 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -14081024 (11111111 11111111 11111111 11111111 11111111 00101001 00100100 00000000)

State 261 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -220016 (11111111 11111111 11111111 11111111 11111111 11111100 10100100 10010000)

State 264 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 220016 (00000000 00000000 00000000 00000000 00000000 00000011 01011011 01110000)

State 266 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 1022976 (00000000 00000000 00000000 00000000 00000000 00001111 10011100 00000000)

State 267 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 15984 (00000000 00000000 00000000 00000000 00000000 00000000 00111110 01110000)

State 270 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 236000 (00000000 00000000 00000000 00000000 00000000 00000011 10011001 11100000)
An Overflow Occurred in the node a0

State 275 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 2306304 (00000000 00000000 00000000 00000000 00000000 00100011 00110001 00000000)

State 276 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 36036 (00000000 00000000 00000000 00000000 00000000 00000000 10001100 11000100)

State 278 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -199964 (11111111 11111111 11111111 11111111 11111111 11111100 11110010 11100100)

State 282 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-199964 << 6) / 64

State 285 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 236000 (00000000 00000000 00000000 00000000 00000000 00000011 10011001 11100000)

State 287 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 288 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 291 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 236000 (00000000 00000000 00000000 00000000 00000000 00000011 10011001 11100000)

State 293 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -4608000 (11111111 11111111 11111111 11111111 11111111 10111001 10110000 00000000)

State 294 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -72000 (11111111 11111111 11111111 11111111 11111111 11111110 11100110 11000000)

State 297 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 164000 (00000000 00000000 00000000 00000000 00000000 00000010 10000000 10100000)

State 300 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 302 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 12797696 (00000000 00000000 00000000 00000000 00000000 11000011 01000111 00000000)

State 303 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 199964 (00000000 00000000 00000000 00000000 00000000 00000011 00001101 00011100)

State 306 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -199964 (11111111 11111111 11111111 11111111 11111111 11111100 11110010 11100100)

State 308 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 2301696 (00000000 00000000 00000000 00000000 00000000 00100011 00011111 00000000)

State 309 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 35964 (00000000 00000000 00000000 00000000 00000000 00000000 10001100 01111100)

State 312 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -164000 (11111111 11111111 11111111 11111111 11111111 11111101 01111111 01100000)
An Overflow Occurred in the node a0

State 317 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -256256 (11111111 11111111 11111111 11111111 11111111 11111100 00010111 00000000)

State 318 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -4004 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 01011100)

State 320 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 159996 (00000000 00000000 00000000 00000000 00000000 00000010 01110000 11111100)

State 324 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 159996 (00000000 00000000 00000000 00000000 00000000 00000010 01110000 11111100)

State 327 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = -164000 (11111111 11111111 11111111 11111111 11111111 11111101 01111111 01100000)

State 329 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 330 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 333 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -164000 (11111111 11111111 11111111 11111111 11111111 11111101 01111111 01100000)

State 335 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 512000 (00000000 00000000 00000000 00000000 00000000 00000111 11010000 00000000)

State 336 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 8000 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 01000000)

State 339 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -156000 (11111111 11111111 11111111 11111111 11111111 11111101 10011110 10100000)

State 342 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 344 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -10239744 (11111111 11111111 11111111 11111111 11111111 01100011 11000001 00000000)

State 345 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -159996 (11111111 11111111 11111111 11111111 11111111 11111101 10001111 00000100)

State 348 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 159996 (00000000 00000000 00000000 00000000 00000000 00000010 01110000 11111100)

State 350 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -255744 (11111111 11111111 11111111 11111111 11111111 11111100 00011001 00000000)

State 351 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -3996 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 01100100)

State 354 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 156000 (00000000 00000000 00000000 00000000 00000000 00000010 01100001 01100000)
An Overflow Occurred in the node a0

State 359 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -8200192 (11111111 11111111 11111111 11111111 11111111 10000010 11100000 00000000)

State 360 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -128128 (11111111 11111111 11111111 11111111 11111111 11111110 00001011 10000000)

State 362 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -284128 (11111111 11111111 11111111 11111111 11111111 11111011 10101010 00100000)

State 366 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-284128 << 6) / 64

State 369 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 156000 (00000000 00000000 00000000 00000000 00000000 00000010 01100001 01100000)

State 371 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 372 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 375 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 156000 (00000000 00000000 00000000 00000000 00000000 00000010 01100001 01100000)

State 377 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 16384000 (00000000 00000000 00000000 00000000 00000000 11111010 00000000 00000000)

State 378 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 256000 (00000000 00000000 00000000 00000000 00000000 00000011 11101000 00000000)

State 381 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 412000 (00000000 00000000 00000000 00000000 00000000 00000110 01001001 01100000)

State 384 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 386 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 18184192 (00000000 00000000 00000000 00000000 00000001 00010101 01111000 00000000)

State 387 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 284128 (00000000 00000000 00000000 00000000 00000000 00000100 01010101 11100000)

State 390 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -284128 (11111111 11111111 11111111 11111111 11111111 11111011 10101010 00100000)

State 392 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -8183808 (11111111 11111111 11111111 11111111 11111111 10000011 00100000 00000000)

State 393 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -127872 (11111111 11111111 11111111 11111111 11111111 11111110 00001100 10000000)

State 396 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -412000 (11111111 11111111 11111111 11111111 11111111 11111001 10110110 10100000)
An Overflow Occurred in the node a0

State 401 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -7815808 (11111111 11111111 11111111 11111111 11111111 10001000 10111101 10000000)

State 402 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -122122 (11111111 11111111 11111111 11111111 11111111 11111110 00100010 11110110)

State 404 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 289878 (00000000 00000000 00000000 00000000 00000000 00000100 01101100 01010110)

State 408 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 289878 (00000000 00000000 00000000 00000000 00000000 00000100 01101100 01010110)

State 411 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = -412000 (11111111 11111111 11111111 11111111 11111111 11111001 10110110 10100000)

State 413 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 414 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 417 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -412000 (11111111 11111111 11111111 11111111 11111111 11111001 10110110 10100000)

State 419 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 15616000 (00000000 00000000 00000000 00000000 00000000 11101110 01001000 00000000)

State 420 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 244000 (00000000 00000000 00000000 00000000 00000000 00000011 10111001 00100000)

State 423 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -168000 (11111111 11111111 11111111 11111111 11111111 11111101 01101111 11000000)

State 426 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 428 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -18552192 (11111111 11111111 11111111 11111111 11111110 11100100 11101010 10000000)

State 429 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -289878 (11111111 11111111 11111111 11111111 11111111 11111011 10010011 10101010)

State 432 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 289878 (00000000 00000000 00000000 00000000 00000000 00000100 01101100 01010110)

State 434 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -7800192 (11111111 11111111 11111111 11111111 11111111 10001000 11111010 10000000)

State 435 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -121878 (11111111 11111111 11111111 11111111 11111111 11111110 00100011 11101010)

State 438 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 168000 (00000000 00000000 00000000 00000000 00000000 00000010 10010000 01000000)
An Overflow Occurred in the node a0

State 443 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 8200192 (00000000 00000000 00000000 00000000 00000000 01111101 00100000 00000000)

State 444 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 128128 (00000000 00000000 00000000 00000000 00000000 00000001 11110100 10000000)

State 446 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -39872 (11111111 11111111 11111111 11111111 11111111 11111111 01100100 01000000)

State 450 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-39872 << 6) / 64

State 453 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 168000 (00000000 00000000 00000000 00000000 00000000 00000010 10010000 01000000)

State 455 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 456 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 459 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 168000 (00000000 00000000 00000000 00000000 00000000 00000010 10010000 01000000)

State 461 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -16384000 (11111111 11111111 11111111 11111111 11111111 00000110 00000000 00000000)

State 462 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -256000 (11111111 11111111 11111111 11111111 11111111 11111100 00011000 00000000)

State 465 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -88000 (11111111 11111111 11111111 11111111 11111111 11111110 10101000 01000000)

State 468 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 470 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 2551808 (00000000 00000000 00000000 00000000 00000000 00100110 11110000 00000000)

State 471 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 39872 (00000000 00000000 00000000 00000000 00000000 00000000 10011011 11000000)

State 474 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -39872 (11111111 11111111 11111111 11111111 11111111 11111111 01100100 01000000)

State 476 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 8183808 (00000000 00000000 00000000 00000000 00000000 01111100 11100000 00000000)

State 477 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 127872 (00000000 00000000 00000000 00000000 00000000 00000001 11110011 10000000)

State 480 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 88000 (00000000 00000000 00000000 00000000 00000000 00000001 01010111 11000000)
An Overflow Occurred in the node a0

State 485 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 4356352 (00000000 00000000 00000000 00000000 00000000 01000010 01111001 00000000)

State 486 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 68068 (00000000 00000000 00000000 00000000 00000000 00000001 00001001 11100100)

State 488 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -19932 (11111111 11111111 11111111 11111111 11111111 11111111 10110010 00100100)

State 492 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-19932 << 6) / 64

State 495 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 88000 (00000000 00000000 00000000 00000000 00000000 00000001 01010111 11000000)

State 497 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 498 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 501 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 88000 (00000000 00000000 00000000 00000000 00000000 00000001 01010111 11000000)

State 503 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -8704000 (11111111 11111111 11111111 11111111 11111111 01111011 00110000 00000000)

State 504 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -136000 (11111111 11111111 11111111 11111111 11111111 11111101 11101100 11000000)

State 507 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -48000 (11111111 11111111 11111111 11111111 11111111 11111111 01000100 10000000)

State 510 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 512 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 1275648 (00000000 00000000 00000000 00000000 00000000 00010011 01110111 00000000)

State 513 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 19932 (00000000 00000000 00000000 00000000 00000000 00000000 01001101 11011100)

State 516 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -19932 (11111111 11111111 11111111 11111111 11111111 11111111 10110010 00100100)

State 518 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 4347648 (00000000 00000000 00000000 00000000 00000000 01000010 01010111 00000000)

State 519 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 67932 (00000000 00000000 00000000 00000000 00000000 00000001 00001001 01011100)

State 522 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 48000 (00000000 00000000 00000000 00000000 00000000 00000000 10111011 10000000)
An Overflow Occurred in the node a0
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output

State 534 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-05-impl2.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-05-impl2.c: Parsing
In file included from benchmarks/ds-05-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.162s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 3 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 3 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 3 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 3 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 3 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.174s (1869 assignments)
Slicing time: 0.004s (removed 460 assignments)
Generated 597 VCC(s), 294 remaining after simplification (1409 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.087s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.087s
Runtime decision procedure: 3.555s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 16.000000 (01000000 00110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 16 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00010000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 16.000000 (01000000 00110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 32032.000000 (01000000 11011111 01001000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 32032 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00100000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 58 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 59 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 60 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 64000.000000 (01000000 11101111 01000000 00000000 00000000 00000000 00000000 00000000)

State 70 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 31968.000000 (01000000 11011111 00111000 00000000 00000000 00000000 00000000 00000000)

State 71 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 31968 (00000000 00000000 00000000 00000000 00000000 00000000 01111100 11100000)

State 72 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 73 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 74 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)

State 76 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 77 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = -6 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111010)

State 79 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 80 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = 1 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001)

State 82 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 83 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = -1 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111111)

State 85 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 86 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = 16 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00010000)

State 88 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 89 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = -10 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11110110)

State 91 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 92 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 94 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 95 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = -16 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11110000)

State 97 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 98 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = 15 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001111)

State 100 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 101 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = 16 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00010000)

State 103 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 104 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 105 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 107 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 224224 (00000000 00000000 00000000 00000000 00000000 00000011 01101011 11100000)

State 108 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 14014 (00000000 00000000 00000000 00000000 00000000 00000000 00110110 10111110)

State 110 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 14014 (00000000 00000000 00000000 00000000 00000000 00000000 00110110 10111110)

State 114 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 14014 (00000000 00000000 00000000 00000000 00000000 00000000 00110110 10111110)

State 117 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 119 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 120 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 123 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 125 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -448000 (11111111 11111111 11111111 11111111 11111111 11111001 00101010 00000000)

State 126 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -28000 (11111111 11111111 11111111 11111111 11111111 11111111 10010010 10100000)

State 129 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -28000 (11111111 11111111 11111111 11111111 11111111 11111111 10010010 10100000)

State 132 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 134 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -224224 (11111111 11111111 11111111 11111111 11111111 11111100 10010100 00100000)

State 135 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -14014 (11111111 11111111 11111111 11111111 11111111 11111111 11001001 01000010)

State 138 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 14014 (00000000 00000000 00000000 00000000 00000000 00000000 00110110 10111110)

State 140 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 223776 (00000000 00000000 00000000 00000000 00000000 00000011 01101010 00100000)

State 141 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 13986 (00000000 00000000 00000000 00000000 00000000 00000000 00110110 10100010)

State 144 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 28000 (00000000 00000000 00000000 00000000 00000000 00000000 01101101 01100000)
An Overflow Occurred in the node a0

State 149 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -192192 (11111111 11111111 11111111 11111111 11111111 11111101 00010001 01000000)

State 150 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -12012 (11111111 11111111 11111111 11111111 11111111 11111111 11010001 00010100)

State 152 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -40012 (11111111 11111111 11111111 11111111 11111111 11111111 01100011 10110100)

State 156 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-40012 << 4) / 16

State 159 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 28000 (00000000 00000000 00000000 00000000 00000000 00000000 01101101 01100000)

State 161 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 162 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 165 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 28000 (00000000 00000000 00000000 00000000 00000000 00000000 01101101 01100000)

State 167 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 384000 (00000000 00000000 00000000 00000000 00000000 00000101 11011100 00000000)

State 168 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 24000 (00000000 00000000 00000000 00000000 00000000 00000000 01011101 11000000)

State 171 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 52000 (00000000 00000000 00000000 00000000 00000000 00000000 11001011 00100000)

State 174 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 176 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 640192 (00000000 00000000 00000000 00000000 00000000 00001001 11000100 11000000)

State 177 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 40012 (00000000 00000000 00000000 00000000 00000000 00000000 10011100 01001100)

State 180 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -40012 (11111111 11111111 11111111 11111111 11111111 11111111 01100011 10110100)

State 182 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -191808 (11111111 11111111 11111111 11111111 11111111 11111101 00010010 11000000)

State 183 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -11988 (11111111 11111111 11111111 11111111 11111111 11111111 11010001 00101100)

State 186 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -52000 (11111111 11111111 11111111 11111111 11111111 11111111 00110100 11100000)
An Overflow Occurred in the node a0

State 191 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 32032 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00100000)

State 192 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 2002 (00000000 00000000 00000000 00000000 00000000 00000000 00000111 11010010)

State 194 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 54002 (00000000 00000000 00000000 00000000 00000000 00000000 11010010 11110010)

State 198 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 54002 (00000000 00000000 00000000 00000000 00000000 00000000 11010010 11110010)

State 201 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = -52000 (11111111 11111111 11111111 11111111 11111111 11111111 00110100 11100000)

State 203 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 204 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 207 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -52000 (11111111 11111111 11111111 11111111 11111111 11111111 00110100 11100000)

State 209 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -64000 (11111111 11111111 11111111 11111111 11111111 11111111 00000110 00000000)

State 210 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -4000 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 01100000)

State 213 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -56000 (11111111 11111111 11111111 11111111 11111111 11111111 00100101 01000000)

State 216 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 218 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -864032 (11111111 11111111 11111111 11111111 11111111 11110010 11010000 11100000)

State 219 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -54002 (11111111 11111111 11111111 11111111 11111111 11111111 00101101 00001110)

State 222 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 54002 (00000000 00000000 00000000 00000000 00000000 00000000 11010010 11110010)

State 224 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 31968 (00000000 00000000 00000000 00000000 00000000 00000000 01111100 11100000)

State 225 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 1998 (00000000 00000000 00000000 00000000 00000000 00000000 00000111 11001110)

State 228 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 56000 (00000000 00000000 00000000 00000000 00000000 00000000 11011010 11000000)
An Overflow Occurred in the node a0

State 233 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -32032 (11111111 11111111 11111111 11111111 11111111 11111111 10000010 11100000)

State 234 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -2002 (11111111 11111111 11111111 11111111 11111111 11111111 11111000 00101110)

State 236 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -58002 (11111111 11111111 11111111 11111111 11111111 11111111 00011101 01101110)

State 240 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-58002 << 4) / 16

State 243 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 56000 (00000000 00000000 00000000 00000000 00000000 00000000 11011010 11000000)

State 245 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 246 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 249 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 56000 (00000000 00000000 00000000 00000000 00000000 00000000 11011010 11000000)

State 251 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 64000 (00000000 00000000 00000000 00000000 00000000 00000000 11111010 00000000)

State 252 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 4000 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 10100000)

State 255 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 60000 (00000000 00000000 00000000 00000000 00000000 00000000 11101010 01100000)

State 258 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 260 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 928032 (00000000 00000000 00000000 00000000 00000000 00001110 00101001 00100000)

State 261 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 58002 (00000000 00000000 00000000 00000000 00000000 00000000 11100010 10010010)

State 264 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -58002 (11111111 11111111 11111111 11111111 11111111 11111111 00011101 01101110)

State 266 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -31968 (11111111 11111111 11111111 11111111 11111111 11111111 10000011 00100000)

State 267 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -1998 (11111111 11111111 11111111 11111111 11111111 11111111 11111000 00110010)

State 270 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -60000 (11111111 11111111 11111111 11111111 11111111 11111111 00010101 10100000)
An Overflow Occurred in the node a0

State 275 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 512512 (00000000 00000000 00000000 00000000 00000000 00000111 11010010 00000000)

State 276 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 32032 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00100000)

State 278 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 92032 (00000000 00000000 00000000 00000000 00000000 00000001 01100111 10000000)

State 282 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 92032 (00000000 00000000 00000000 00000000 00000000 00000001 01100111 10000000)

State 285 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = -60000 (11111111 11111111 11111111 11111111 11111111 11111111 00010101 10100000)

State 287 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 288 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 291 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -60000 (11111111 11111111 11111111 11111111 11111111 11111111 00010101 10100000)

State 293 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -1024000 (11111111 11111111 11111111 11111111 11111111 11110000 01100000 00000000)

State 294 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -64000 (11111111 11111111 11111111 11111111 11111111 11111111 00000110 00000000)

State 297 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -124000 (11111111 11111111 11111111 11111111 11111111 11111110 00011011 10100000)

State 300 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 302 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -1472512 (11111111 11111111 11111111 11111111 11111111 11101001 10001000 00000000)

State 303 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -92032 (11111111 11111111 11111111 11111111 11111111 11111110 10011000 10000000)

State 306 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 92032 (00000000 00000000 00000000 00000000 00000000 00000001 01100111 10000000)

State 308 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 511488 (00000000 00000000 00000000 00000000 00000000 00000111 11001110 00000000)

State 309 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 31968 (00000000 00000000 00000000 00000000 00000000 00000000 01111100 11100000)

State 312 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 124000 (00000000 00000000 00000000 00000000 00000000 00000001 11100100 01100000)
An Overflow Occurred in the node a0

State 317 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -320320 (11111111 11111111 11111111 11111111 11111111 11111011 00011100 11000000)

State 318 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -20020 (11111111 11111111 11111111 11111111 11111111 11111111 10110001 11001100)

State 320 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -144020 (11111111 11111111 11111111 11111111 11111111 11111101 11001101 01101100)

State 324 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-144020 << 4) / 16

State 327 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 124000 (00000000 00000000 00000000 00000000 00000000 00000001 11100100 01100000)

State 329 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 330 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 333 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 124000 (00000000 00000000 00000000 00000000 00000000 00000001 11100100 01100000)

State 335 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 640000 (00000000 00000000 00000000 00000000 00000000 00001001 11000100 00000000)

State 336 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 40000 (00000000 00000000 00000000 00000000 00000000 00000000 10011100 01000000)

State 339 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 164000 (00000000 00000000 00000000 00000000 00000000 00000010 10000000 10100000)

State 342 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 344 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 2304320 (00000000 00000000 00000000 00000000 00000000 00100011 00101001 01000000)

State 345 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 144020 (00000000 00000000 00000000 00000000 00000000 00000010 00110010 10010100)

State 348 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -144020 (11111111 11111111 11111111 11111111 11111111 11111101 11001101 01101100)

State 350 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -319680 (11111111 11111111 11111111 11111111 11111111 11111011 00011111 01000000)

State 351 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -19980 (11111111 11111111 11111111 11111111 11111111 11111111 10110001 11110100)

State 354 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -164000 (11111111 11111111 11111111 11111111 11111111 11111101 01111111 01100000)
An Overflow Occurred in the node a0

State 359 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 360 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 362 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 164000 (00000000 00000000 00000000 00000000 00000000 00000010 10000000 10100000)

State 366 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 164000 (00000000 00000000 00000000 00000000 00000000 00000010 10000000 10100000)

State 369 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = -164000 (11111111 11111111 11111111 11111111 11111111 11111101 01111111 01100000)

State 371 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 372 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 375 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -164000 (11111111 11111111 11111111 11111111 11111111 11111101 01111111 01100000)

State 377 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 378 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 381 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -164000 (11111111 11111111 11111111 11111111 11111111 11111101 01111111 01100000)

State 384 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 386 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -2624000 (11111111 11111111 11111111 11111111 11111111 11010111 11110110 00000000)

State 387 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -164000 (11111111 11111111 11111111 11111111 11111111 11111101 01111111 01100000)

State 390 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 164000 (00000000 00000000 00000000 00000000 00000000 00000010 10000000 10100000)

State 392 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 393 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 396 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 164000 (00000000 00000000 00000000 00000000 00000000 00000010 10000000 10100000)
An Overflow Occurred in the node a0

State 401 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -512512 (11111111 11111111 11111111 11111111 11111111 11111000 00101110 00000000)

State 402 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -32032 (11111111 11111111 11111111 11111111 11111111 11111111 10000010 11100000)

State 404 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -196032 (11111111 11111111 11111111 11111111 11111111 11111101 00000010 01000000)

State 408 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-196032 << 4) / 16

State 411 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 164000 (00000000 00000000 00000000 00000000 00000000 00000010 10000000 10100000)

State 413 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 414 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 417 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 164000 (00000000 00000000 00000000 00000000 00000000 00000010 10000000 10100000)

State 419 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 1024000 (00000000 00000000 00000000 00000000 00000000 00001111 10100000 00000000)

State 420 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 64000 (00000000 00000000 00000000 00000000 00000000 00000000 11111010 00000000)

State 423 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 228000 (00000000 00000000 00000000 00000000 00000000 00000011 01111010 10100000)

State 426 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 428 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 3136512 (00000000 00000000 00000000 00000000 00000000 00101111 11011100 00000000)

State 429 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 196032 (00000000 00000000 00000000 00000000 00000000 00000010 11111101 11000000)

State 432 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -196032 (11111111 11111111 11111111 11111111 11111111 11111101 00000010 01000000)

State 434 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -511488 (11111111 11111111 11111111 11111111 11111111 11111000 00110010 00000000)

State 435 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -31968 (11111111 11111111 11111111 11111111 11111111 11111111 10000011 00100000)

State 438 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -228000 (11111111 11111111 11111111 11111111 11111111 11111100 10000101 01100000)
An Overflow Occurred in the node a0

State 443 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 480480 (00000000 00000000 00000000 00000000 00000000 00000111 01010100 11100000)

State 444 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 30030 (00000000 00000000 00000000 00000000 00000000 00000000 01110101 01001110)

State 446 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 258030 (00000000 00000000 00000000 00000000 00000000 00000011 11101111 11101110)

State 450 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 258030 (00000000 00000000 00000000 00000000 00000000 00000011 11101111 11101110)

State 453 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = -228000 (11111111 11111111 11111111 11111111 11111111 11111100 10000101 01100000)

State 455 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 456 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 459 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -228000 (11111111 11111111 11111111 11111111 11111111 11111100 10000101 01100000)

State 461 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -960000 (11111111 11111111 11111111 11111111 11111111 11110001 01011010 00000000)

State 462 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -60000 (11111111 11111111 11111111 11111111 11111111 11111111 00010101 10100000)

State 465 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -288000 (11111111 11111111 11111111 11111111 11111111 11111011 10011011 00000000)

State 468 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 470 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -4128480 (11111111 11111111 11111111 11111111 11111111 11000001 00000001 00100000)

State 471 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -258030 (11111111 11111111 11111111 11111111 11111111 11111100 00010000 00010010)

State 474 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 258030 (00000000 00000000 00000000 00000000 00000000 00000011 11101111 11101110)

State 476 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 479520 (00000000 00000000 00000000 00000000 00000000 00000111 01010001 00100000)

State 477 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 29970 (00000000 00000000 00000000 00000000 00000000 00000000 01110101 00010010)

State 480 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 288000 (00000000 00000000 00000000 00000000 00000000 00000100 01100101 00000000)
An Overflow Occurred in the node a0

State 485 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 512512 (00000000 00000000 00000000 00000000 00000000 00000111 11010010 00000000)

State 486 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 32032 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00100000)

State 488 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -255968 (11111111 11111111 11111111 11111111 11111111 11111100 00011000 00100000)

State 492 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-255968 << 4) / 16

State 495 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 288000 (00000000 00000000 00000000 00000000 00000000 00000100 01100101 00000000)

State 497 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 498 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 501 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 288000 (00000000 00000000 00000000 00000000 00000000 00000100 01100101 00000000)

State 503 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -1024000 (11111111 11111111 11111111 11111111 11111111 11110000 01100000 00000000)

State 504 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -64000 (11111111 11111111 11111111 11111111 11111111 11111111 00000110 00000000)

State 507 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 224000 (00000000 00000000 00000000 00000000 00000000 00000011 01101011 00000000)

State 510 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 512 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 4095488 (00000000 00000000 00000000 00000000 00000000 00111110 01111110 00000000)

State 513 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 255968 (00000000 00000000 00000000 00000000 00000000 00000011 11100111 11100000)

State 516 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -255968 (11111111 11111111 11111111 11111111 11111111 11111100 00011000 00100000)

State 518 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 511488 (00000000 00000000 00000000 00000000 00000000 00000111 11001110 00000000)

State 519 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 31968 (00000000 00000000 00000000 00000000 00000000 00000000 01111100 11100000)

State 522 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -224000 (11111111 11111111 11111111 11111111 11111111 11111100 10010101 00000000)
An Overflow Occurred in the node a0
An Overflow Occurred in system's output
An Overflow Occurred in system's output

State 531 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-05-impl3.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-05-impl3.c: Parsing
In file included from benchmarks/ds-05-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.214s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 3 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 3 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 3 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 3 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 3 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 3 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 132 iteration 2 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.173s (1869 assignments)
Slicing time: 0.004s (removed 460 assignments)
Generated 597 VCC(s), 294 remaining after simplification (1409 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.088s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.088s
Runtime decision procedure: 16.423s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 8.000000 (01000000 00100000 00000000 00000000 00000000 00000000 00000000 00000000)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 8 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 8.000000 (01000000 00100000 00000000 00000000 00000000 00000000 00000000 00000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 16016.000000 (01000000 11001111 01001000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 16016 (00000000 00000000 00000000 00000000 00000000 00000000 00111110 10010000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 58 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 59 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 60 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 32000.000000 (01000000 11011111 01000000 00000000 00000000 00000000 00000000 00000000)

State 70 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 15984.000000 (01000000 11001111 00111000 00000000 00000000 00000000 00000000 00000000)

State 71 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 15984 (00000000 00000000 00000000 00000000 00000000 00000000 00111110 01110000)

State 72 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 73 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 74 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = 4 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000100)

State 76 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 77 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = 3 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000011)

State 79 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 80 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = 2 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000010)

State 82 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 83 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 85 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 86 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = -1 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111111)

State 88 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 89 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = -8 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111000)

State 91 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 92 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = 4 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000100)

State 94 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 95 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = 2 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000010)

State 97 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 98 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = -4 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111100)

State 100 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 101 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = -7 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001)

State 103 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 104 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 105 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 107 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 64064 (00000000 00000000 00000000 00000000 00000000 00000000 11111010 01000000)

State 108 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 8008 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 01001000)

State 110 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 8008 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 01001000)

State 114 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 8008 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 01001000)

State 117 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 119 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 120 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 123 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 125 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -128000 (11111111 11111111 11111111 11111111 11111111 11111110 00001100 00000000)

State 126 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -16000 (11111111 11111111 11111111 11111111 11111111 11111111 11000001 10000000)

State 129 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -16000 (11111111 11111111 11111111 11111111 11111111 11111111 11000001 10000000)

State 132 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 134 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -64064 (11111111 11111111 11111111 11111111 11111111 11111111 00000101 11000000)

State 135 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -8008 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 10111000)

State 138 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 8008 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 01001000)

State 140 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 63936 (00000000 00000000 00000000 00000000 00000000 00000000 11111001 11000000)

State 141 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 7992 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 00111000)

State 144 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 16000 (00000000 00000000 00000000 00000000 00000000 00000000 00111110 10000000)
An Overflow Occurred in the node a0

State 149 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 48048 (00000000 00000000 00000000 00000000 00000000 00000000 10111011 10110000)

State 150 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 6006 (00000000 00000000 00000000 00000000 00000000 00000000 00010111 01110110)

State 152 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -9994 (11111111 11111111 11111111 11111111 11111111 11111111 11011000 11110110)

State 156 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-9994 << 3) / 8

State 159 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 16000 (00000000 00000000 00000000 00000000 00000000 00000000 00111110 10000000)

State 161 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 162 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 165 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 16000 (00000000 00000000 00000000 00000000 00000000 00000000 00111110 10000000)

State 167 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -96000 (11111111 11111111 11111111 11111111 11111111 11111110 10001001 00000000)

State 168 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -12000 (11111111 11111111 11111111 11111111 11111111 11111111 11010001 00100000)

State 171 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 4000 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 10100000)

State 174 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 176 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 79952 (00000000 00000000 00000000 00000000 00000000 00000001 00111000 01010000)

State 177 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 9994 (00000000 00000000 00000000 00000000 00000000 00000000 00100111 00001010)

State 180 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -9994 (11111111 11111111 11111111 11111111 11111111 11111111 11011000 11110110)

State 182 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 47952 (00000000 00000000 00000000 00000000 00000000 00000000 10111011 01010000)

State 183 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 5994 (00000000 00000000 00000000 00000000 00000000 00000000 00010111 01101010)

State 186 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -4000 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 01100000)
An Overflow Occurred in the node a0

State 191 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 32032 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00100000)

State 192 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 4004 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 10100100)

State 194 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 8004 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 01000100)

State 198 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 8004 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 01000100)

State 201 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = -4000 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 01100000)

State 203 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 204 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 207 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -4000 (11111111 11111111 11111111 11111111 11111111 11111111 11110000 01100000)

State 209 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -64000 (11111111 11111111 11111111 11111111 11111111 11111111 00000110 00000000)

State 210 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -8000 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 11000000)

State 213 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -12000 (11111111 11111111 11111111 11111111 11111111 11111111 11010001 00100000)

State 216 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 218 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -64032 (11111111 11111111 11111111 11111111 11111111 11111111 00000101 11100000)

State 219 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -8004 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 10111100)

State 222 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 8004 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 01000100)

State 224 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 31968 (00000000 00000000 00000000 00000000 00000000 00000000 01111100 11100000)

State 225 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 3996 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 10011100)

State 228 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 12000 (00000000 00000000 00000000 00000000 00000000 00000000 00101110 11100000)
An Overflow Occurred in the node a0

State 233 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 234 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 236 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -12000 (11111111 11111111 11111111 11111111 11111111 11111111 11010001 00100000)

State 240 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-12000 << 3) / 8

State 243 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 12000 (00000000 00000000 00000000 00000000 00000000 00000000 00101110 11100000)

State 245 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 246 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 249 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 12000 (00000000 00000000 00000000 00000000 00000000 00000000 00101110 11100000)

State 251 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 252 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 255 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 12000 (00000000 00000000 00000000 00000000 00000000 00000000 00101110 11100000)

State 258 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 260 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 96000 (00000000 00000000 00000000 00000000 00000000 00000001 01110111 00000000)

State 261 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 12000 (00000000 00000000 00000000 00000000 00000000 00000000 00101110 11100000)

State 264 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -12000 (11111111 11111111 11111111 11111111 11111111 11111111 11010001 00100000)

State 266 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 267 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 270 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -12000 (11111111 11111111 11111111 11111111 11111111 11111111 11010001 00100000)
An Overflow Occurred in the node a0

State 275 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -16016 (11111111 11111111 11111111 11111111 11111111 11111111 11000001 01110000)

State 276 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -2002 (11111111 11111111 11111111 11111111 11111111 11111111 11111000 00101110)

State 278 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 9998 (00000000 00000000 00000000 00000000 00000000 00000000 00100111 00001110)

State 282 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 9998 (00000000 00000000 00000000 00000000 00000000 00000000 00100111 00001110)

State 285 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = -12000 (11111111 11111111 11111111 11111111 11111111 11111111 11010001 00100000)

State 287 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 288 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 291 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -12000 (11111111 11111111 11111111 11111111 11111111 11111111 11010001 00100000)

State 293 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 32000 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00000000)

State 294 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 4000 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 10100000)

State 297 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -8000 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 11000000)

State 300 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 302 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -79984 (11111111 11111111 11111111 11111111 11111111 11111110 11000111 10010000)

State 303 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -9998 (11111111 11111111 11111111 11111111 11111111 11111111 11011000 11110010)

State 306 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 9998 (00000000 00000000 00000000 00000000 00000000 00000000 00100111 00001110)

State 308 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -15984 (11111111 11111111 11111111 11111111 11111111 11111111 11000001 10010000)

State 309 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -1998 (11111111 11111111 11111111 11111111 11111111 11111111 11111000 00110010)

State 312 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 8000 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 01000000)
An Overflow Occurred in the node a0

State 317 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -128128 (11111111 11111111 11111111 11111111 11111111 11111110 00001011 10000000)

State 318 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -16016 (11111111 11111111 11111111 11111111 11111111 11111111 11000001 01110000)

State 320 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -24016 (11111111 11111111 11111111 11111111 11111111 11111111 10100010 00110000)

State 324 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-24016 << 3) / 8

State 327 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 8000 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 01000000)

State 329 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 330 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 333 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 8000 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 01000000)

State 335 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 256000 (00000000 00000000 00000000 00000000 00000000 00000011 11101000 00000000)

State 336 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 32000 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00000000)

State 339 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 40000 (00000000 00000000 00000000 00000000 00000000 00000000 10011100 01000000)

State 342 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 344 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 192128 (00000000 00000000 00000000 00000000 00000000 00000010 11101110 10000000)

State 345 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 24016 (00000000 00000000 00000000 00000000 00000000 00000000 01011101 11010000)

State 348 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -24016 (11111111 11111111 11111111 11111111 11111111 11111111 10100010 00110000)

State 350 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -127872 (11111111 11111111 11111111 11111111 11111111 11111110 00001100 10000000)

State 351 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -15984 (11111111 11111111 11111111 11111111 11111111 11111111 11000001 10010000)

State 354 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -40000 (11111111 11111111 11111111 11111111 11111111 11111111 01100011 11000000)
An Overflow Occurred in the node a0

State 359 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 64064 (00000000 00000000 00000000 00000000 00000000 00000000 11111010 01000000)

State 360 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 8008 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 01001000)

State 362 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 48008 (00000000 00000000 00000000 00000000 00000000 00000000 10111011 10001000)

State 366 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 48008 (00000000 00000000 00000000 00000000 00000000 00000000 10111011 10001000)

State 369 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = -40000 (11111111 11111111 11111111 11111111 11111111 11111111 01100011 11000000)

State 371 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 372 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 375 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -40000 (11111111 11111111 11111111 11111111 11111111 11111111 01100011 11000000)

State 377 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -128000 (11111111 11111111 11111111 11111111 11111111 11111110 00001100 00000000)

State 378 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -16000 (11111111 11111111 11111111 11111111 11111111 11111111 11000001 10000000)

State 381 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -56000 (11111111 11111111 11111111 11111111 11111111 11111111 00100101 01000000)

State 384 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 386 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -384064 (11111111 11111111 11111111 11111111 11111111 11111010 00100011 11000000)

State 387 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -48008 (11111111 11111111 11111111 11111111 11111111 11111111 01000100 01111000)

State 390 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 48008 (00000000 00000000 00000000 00000000 00000000 00000000 10111011 10001000)

State 392 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 63936 (00000000 00000000 00000000 00000000 00000000 00000000 11111001 11000000)

State 393 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 7992 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 00111000)

State 396 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 56000 (00000000 00000000 00000000 00000000 00000000 00000000 11011010 11000000)
An Overflow Occurred in the node a0

State 401 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 32032 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00100000)

State 402 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 4004 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 10100100)

State 404 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -51996 (11111111 11111111 11111111 11111111 11111111 11111111 00110100 11100100)

State 408 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-51996 << 3) / 8

State 411 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 56000 (00000000 00000000 00000000 00000000 00000000 00000000 11011010 11000000)

State 413 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 414 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 417 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 56000 (00000000 00000000 00000000 00000000 00000000 00000000 11011010 11000000)

State 419 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -64000 (11111111 11111111 11111111 11111111 11111111 11111111 00000110 00000000)

State 420 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -8000 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 11000000)

State 423 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 48000 (00000000 00000000 00000000 00000000 00000000 00000000 10111011 10000000)

State 426 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 428 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 415968 (00000000 00000000 00000000 00000000 00000000 00000110 01011000 11100000)

State 429 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 51996 (00000000 00000000 00000000 00000000 00000000 00000000 11001011 00011100)

State 432 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -51996 (11111111 11111111 11111111 11111111 11111111 11111111 00110100 11100100)

State 434 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 31968 (00000000 00000000 00000000 00000000 00000000 00000000 01111100 11100000)

State 435 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 3996 (00000000 00000000 00000000 00000000 00000000 00000000 00001111 10011100)

State 438 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -48000 (11111111 11111111 11111111 11111111 11111111 11111111 01000100 10000000)
An Overflow Occurred in the node a0

State 443 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -64064 (11111111 11111111 11111111 11111111 11111111 11111111 00000101 11000000)

State 444 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -8008 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 10111000)

State 446 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 39992 (00000000 00000000 00000000 00000000 00000000 00000000 10011100 00111000)

State 450 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 39992 (00000000 00000000 00000000 00000000 00000000 00000000 10011100 00111000)

State 453 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = -48000 (11111111 11111111 11111111 11111111 11111111 11111111 01000100 10000000)

State 455 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 456 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 459 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -48000 (11111111 11111111 11111111 11111111 11111111 11111111 01000100 10000000)

State 461 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 128000 (00000000 00000000 00000000 00000000 00000000 00000001 11110100 00000000)

State 462 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 16000 (00000000 00000000 00000000 00000000 00000000 00000000 00111110 10000000)

State 465 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -32000 (11111111 11111111 11111111 11111111 11111111 11111111 10000011 00000000)

State 468 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 470 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -319936 (11111111 11111111 11111111 11111111 11111111 11111011 00011110 01000000)

State 471 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -39992 (11111111 11111111 11111111 11111111 11111111 11111111 01100011 11001000)

State 474 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 39992 (00000000 00000000 00000000 00000000 00000000 00000000 10011100 00111000)

State 476 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -63936 (11111111 11111111 11111111 11111111 11111111 11111111 00000110 01000000)

State 477 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -7992 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 11001000)

State 480 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 32000 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00000000)
An Overflow Occurred in the node a0

State 485 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -112112 (11111111 11111111 11111111 11111111 11111111 11111110 01001010 00010000)

State 486 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -14014 (11111111 11111111 11111111 11111111 11111111 11111111 11001001 01000010)

State 488 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -46014 (11111111 11111111 11111111 11111111 11111111 11111111 01001100 01000010)

State 492 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-46014 << 3) / 8

State 495 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 32000 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00000000)

State 497 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 498 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 501 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 32000 (00000000 00000000 00000000 00000000 00000000 00000000 01111101 00000000)

State 503 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 224000 (00000000 00000000 00000000 00000000 00000000 00000011 01101011 00000000)

State 504 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 28000 (00000000 00000000 00000000 00000000 00000000 00000000 01101101 01100000)

State 507 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 60000 (00000000 00000000 00000000 00000000 00000000 00000000 11101010 01100000)

State 510 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 512 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 368112 (00000000 00000000 00000000 00000000 00000000 00000101 10011101 11110000)

State 513 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 46014 (00000000 00000000 00000000 00000000 00000000 00000000 10110011 10111110)

State 516 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -46014 (11111111 11111111 11111111 11111111 11111111 11111111 01001100 01000010)

State 518 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -111888 (11111111 11111111 11111111 11111111 11111111 11111110 01001010 11110000)

State 519 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -13986 (11111111 11111111 11111111 11111111 11111111 11111111 11001001 01011110)

State 522 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -60000 (11111111 11111111 11111111 11111111 11111111 11111111 00010101 10100000)
An Overflow Occurred in the node a0
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output

State 546 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-06-impl1.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-06-impl1.c: Parsing
In file included from benchmarks/ds-06-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.141s
GOTO program processing time: 0.022s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.115s (1329 assignments)
Slicing time: 0.002s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.074s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.074s
Runtime decision procedure: 99.287s
Building error trace

Counterexample:

State 10 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 4096.000000 (01000000 10110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 11 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 4096 (00000000 00000000 00000000 00000000 00000000 00000000 00010000 00000000)

State 12 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 4096.000000 (01000000 10110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 4096 (00000000 00000000 00000000 00000000 00000000 00000000 00010000 00000000)

State 24 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 34 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 3.809280e+3 (01000000 10101101 11000010 10001111 01011100 00101000 11110101 11000011)

State 35 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 3809 (00000000 00000000 00000000 00000000 00000000 00000000 00001110 11100001)

State 36 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 2.800000e-1 (00111111 11010001 11101011 10000101 00011110 10111000 01100000 00000000)

State 46 file fixed-point.h line 224 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = 0.000000 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 47 file fixed-point.h line 233 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 48 file fixed-point.h line 234 function fxp_double_to_fxp thread 0
----------------------------------------------------
  residue = 3563.000000 (01000000 10101011 11010110 00000000 00000000 00000000 00000000 00000000)

State 49 file fixed-point.h line 236 function fxp_double_to_fxp thread 0
----------------------------------------------------
  ftemp = -1.000000 (10111111 11110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 50 file fixed-point.h line 237 function fxp_double_to_fxp thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 51 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 52 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[0] = 3182 (00000000 00000000 00000000 00000000 00000000 00000000 00001100 01101110)

State 54 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 55 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[1] = -2443 (11111111 11111111 11111111 11111111 11111111 11111111 11110110 01110101)

State 57 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[2] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 58 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[2] = 3446 (00000000 00000000 00000000 00000000 00000000 00000000 00001101 01110110)

State 60 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[3] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 61 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[3] = -2700 (11111111 11111111 11111111 11111111 11111111 11111111 11110101 01110100)

State 63 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[4] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 64 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[4] = 1784 (00000000 00000000 00000000 00000000 00000000 00000000 00000110 11111000)

State 66 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[5] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 67 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[5] = -1666 (11111111 11111111 11111111 11111111 11111111 11111111 11111001 01111110)

State 69 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[6] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 70 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[6] = 1240 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 11011000)

State 72 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[7] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 73 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[7] = -2264 (11111111 11111111 11111111 11111111 11111111 11111111 11110111 00101000)

State 75 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[8] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 76 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[8] = 2822 (00000000 00000000 00000000 00000000 00000000 00000000 00001011 00000110)

State 78 file verify_overflow.h line 82 function verify_overflow thread 0
----------------------------------------------------
  y[9] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 79 file verify_overflow.h line 83 function verify_overflow thread 0
----------------------------------------------------
  x[9] = 260 (00000000 00000000 00000000 00000000 00000000 00000000 00000001 00000100)

State 81 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[0] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 82 file verify_overflow.h line 105 function verify_overflow thread 0
----------------------------------------------------
  waux[1] = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 84 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 12120238 (00000000 00000000 00000000 00000000 00000000 10111000 11110000 10101110)

State 85 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 2959 (00000000 00000000 00000000 00000000 00000000 00000000 00001011 10001111)

State 87 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 2959 (00000000 00000000 00000000 00000000 00000000 00000000 00001011 10001111)

State 91 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 2959 (00000000 00000000 00000000 00000000 00000000 00000000 00001011 10001111)

State 94 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 96 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 12120064 (00000000 00000000 00000000 00000000 00000000 10111000 11110000 00000000)

State 97 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 2959 (00000000 00000000 00000000 00000000 00000000 00000000 00001011 10001111)

State 100 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -2959 (11111111 11111111 11111111 11111111 11111111 11111111 11110100 01110001)

State 102 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -11340648 (11111111 11111111 11111111 11111111 11111111 01010010 11110100 10011000)

State 103 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -2769 (11111111 11111111 11111111 11111111 11111111 11111111 11110101 00101111)

State 106 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -5728 (11111111 11111111 11111111 11111111 11111111 11111111 11101001 10100000)
An Overflow Occurred in the node a0

State 111 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -9305387 (11111111 11111111 11111111 11111111 11111111 01110010 00000010 11010101)

State 112 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -2272 (11111111 11111111 11111111 11111111 11111111 11111111 11110111 00100000)

State 114 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -8000 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 11000000)

State 118 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-8000 << 12) / 4096

State 121 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 123 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -32768000 (11111111 11111111 11111111 11111111 11111110 00001100 00000000 00000000)

State 124 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -8000 (11111111 11111111 11111111 11111111 11111111 11111111 11100000 11000000)

State 127 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 8000 (00000000 00000000 00000000 00000000 00000000 00000000 00011111 01000000)

State 129 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 8706852 (00000000 00000000 00000000 00000000 00000000 10000100 11011011 00100100)

State 130 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 2126 (00000000 00000000 00000000 00000000 00000000 00000000 00001000 01001110)

State 133 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 10126 (00000000 00000000 00000000 00000000 00000000 00000000 00100111 10001110)
An Overflow Occurred in the node a0

State 138 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 13125814 (00000000 00000000 00000000 00000000 00000000 11001000 01001000 10110110)

State 139 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 3205 (00000000 00000000 00000000 00000000 00000000 00000000 00001100 10000101)

State 141 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 13331 (00000000 00000000 00000000 00000000 00000000 00000000 00110100 00010011)

State 145 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 13331 (00000000 00000000 00000000 00000000 00000000 00000000 00110100 00010011)

State 148 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 150 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 54603776 (00000000 00000000 00000000 00000000 00000011 01000001 00110000 00000000)

State 151 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 13331 (00000000 00000000 00000000 00000000 00000000 00000000 00110100 00010011)

State 154 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -13331 (11111111 11111111 11111111 11111111 11111111 11111111 11001011 11101101)

State 156 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -12281544 (11111111 11111111 11111111 11111111 11111111 01000100 10011001 00111000)

State 157 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -2998 (11111111 11111111 11111111 11111111 11111111 11111111 11110100 01001010)

State 160 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -16329 (11111111 11111111 11111111 11111111 11111111 11111111 11000000 00110111)
An Overflow Occurred in the node a0

State 165 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -10284300 (11111111 11111111 11111111 11111111 11111111 01100011 00010010 11110100)

State 166 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -2511 (11111111 11111111 11111111 11111111 11111111 11111111 11110110 00110001)

State 168 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -18840 (11111111 11111111 11111111 11111111 11111111 11111111 10110110 01101000)

State 172 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-18840 << 12) / 4096

State 175 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 177 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -77168640 (11111111 11111111 11111111 11111111 11111011 01100110 10000000 00000000)

State 178 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -18840 (11111111 11111111 11111111 11111111 11111111 11111111 10110110 01101000)

State 181 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 18840 (00000000 00000000 00000000 00000000 00000000 00000000 01001001 10011000)

State 183 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 9622800 (00000000 00000000 00000000 00000000 00000000 10010010 11010101 00010000)

State 184 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 2349 (00000000 00000000 00000000 00000000 00000000 00000000 00001001 00101101)

State 187 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 21189 (00000000 00000000 00000000 00000000 00000000 00000000 01010010 11000101)
An Overflow Occurred in the node a0

State 192 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 6795256 (00000000 00000000 00000000 00000000 00000000 01100111 10101111 11111000)

State 193 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 1659 (00000000 00000000 00000000 00000000 00000000 00000000 00000110 01111011)

State 195 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 22848 (00000000 00000000 00000000 00000000 00000000 00000000 01011001 01000000)

State 199 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 22848 (00000000 00000000 00000000 00000000 00000000 00000000 01011001 01000000)

State 202 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 204 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 93585408 (00000000 00000000 00000000 00000000 00000101 10010100 00000000 00000000)

State 205 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 22848 (00000000 00000000 00000000 00000000 00000000 00000000 01011001 01000000)

State 208 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -22848 (11111111 11111111 11111111 11111111 11111111 11111111 10100110 11000000)

State 210 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -6358176 (11111111 11111111 11111111 11111111 11111111 10011110 11111011 01100000)

State 211 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -1552 (11111111 11111111 11111111 11111111 11111111 11111111 11111001 11110000)

State 214 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -24400 (11111111 11111111 11111111 11111111 11111111 11111111 10100000 10110000)
An Overflow Occurred in the node a0

State 219 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -6345794 (11111111 11111111 11111111 11111111 11111111 10011111 00101011 10111110)

State 220 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -1549 (11111111 11111111 11111111 11111111 11111111 11111111 11111001 11110011)

State 222 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -25949 (11111111 11111111 11111111 11111111 11111111 11111111 10011010 10100011)

State 226 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-25949 << 12) / 4096

State 229 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 231 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -106287104 (11111111 11111111 11111111 11111111 11111001 10101010 00110000 00000000)

State 232 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -25949 (11111111 11111111 11111111 11111111 11111111 11111111 10011010 10100011)

State 235 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 25949 (00000000 00000000 00000000 00000000 00000000 00000000 01100101 01011101)

State 237 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 5937624 (00000000 00000000 00000000 00000000 00000000 01011010 10011001 11011000)

State 238 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 1450 (00000000 00000000 00000000 00000000 00000000 00000000 00000101 10101010)

State 241 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 27399 (00000000 00000000 00000000 00000000 00000000 00000000 01101011 00000111)
An Overflow Occurred in the node a0

State 246 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 4723160 (00000000 00000000 00000000 00000000 00000000 01001000 00010001 11011000)

State 247 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 1153 (00000000 00000000 00000000 00000000 00000000 00000000 00000100 10000001)

State 249 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 28552 (00000000 00000000 00000000 00000000 00000000 00000000 01101111 10001000)

State 253 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 28552 (00000000 00000000 00000000 00000000 00000000 00000000 01101111 10001000)

State 256 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 258 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 116948992 (00000000 00000000 00000000 00000000 00000110 11111000 10000000 00000000)

State 259 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 28552 (00000000 00000000 00000000 00000000 00000000 00000000 01101111 10001000)

State 262 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -28552 (11111111 11111111 11111111 11111111 11111111 11111111 10010000 01111000)

State 264 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -4419360 (11111111 11111111 11111111 11111111 11111111 10111100 10010000 11100000)

State 265 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -1079 (11111111 11111111 11111111 11111111 11111111 11111111 11111011 11001001)

State 268 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -29631 (11111111 11111111 11111111 11111111 11111111 11111111 10001100 01000001)
An Overflow Occurred in the node a0

State 273 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -8623576 (11111111 11111111 11111111 11111111 11111111 01111100 01101010 00101000)

State 274 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -2105 (11111111 11111111 11111111 11111111 11111111 11111111 11110111 11000111)

State 276 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -31736 (11111111 11111111 11111111 11111111 11111111 11111111 10000100 00001000)

State 280 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-31736 << 12) / 4096

State 283 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 285 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -129990656 (11111111 11111111 11111111 11111111 11111000 01000000 10000000 00000000)

State 286 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -31736 (11111111 11111111 11111111 11111111 11111111 11111111 10000100 00001000)

State 289 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 31736 (00000000 00000000 00000000 00000000 00000000 00000000 01111011 11111000)

State 291 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 8068896 (00000000 00000000 00000000 00000000 00000000 01111011 00011111 00100000)

State 292 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 1970 (00000000 00000000 00000000 00000000 00000000 00000000 00000111 10110010)

State 295 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 33706 (00000000 00000000 00000000 00000000 00000000 00000000 10000011 10101010)
An Overflow Occurred in the node a0

State 300 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 10748998 (00000000 00000000 00000000 00000000 00000000 10100100 00000100 01000110)

State 301 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 2624 (00000000 00000000 00000000 00000000 00000000 00000000 00001010 01000000)

State 303 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 36330 (00000000 00000000 00000000 00000000 00000000 00000000 10001101 11101010)

State 307 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = 36330 (00000000 00000000 00000000 00000000 00000000 00000000 10001101 11101010)

State 310 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 312 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 148807680 (00000000 00000000 00000000 00000000 00001000 11011110 10100000 00000000)

State 313 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 36330 (00000000 00000000 00000000 00000000 00000000 00000000 10001101 11101010)

State 316 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = -36330 (11111111 11111111 11111111 11111111 11111111 11111111 01110010 00010110)

State 318 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -10057608 (11111111 11111111 11111111 11111111 11111111 01100110 10001000 01111000)

State 319 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -2455 (11111111 11111111 11111111 11111111 11111111 11111111 11110110 01101001)

State 322 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -38785 (11111111 11111111 11111111 11111111 11111111 11111111 01101000 01111111)
An Overflow Occurred in the node a0

State 327 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = 990340 (00000000 00000000 00000000 00000000 00000000 00001111 00011100 10000100)

State 328 file fixed-point.h line 357 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = 242 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 11110010)

State 330 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = -38543 (11111111 11111111 11111111 11111111 11111111 11111111 01101001 01110001)

State 334 file fixed-point.h line 374 function fxp_div thread 0
----------------------------------------------------
  tmpdiv = (-38543 << 12) / 4096

State 337 file realizations.h line 79 function fxp_transposed_direct_form_2 thread 0
----------------------------------------------------
  *(w + (signed long int)j) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 339 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -157872128 (11111111 11111111 11111111 11111111 11110110 10010111 00010000 00000000)

State 340 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -38543 (11111111 11111111 11111111 11111111 11111111 11111111 01101001 01110001)

State 343 file fixed-point.h line 342 function fxp_sub thread 0
----------------------------------------------------
  tmpsub = 38543 (00000000 00000000 00000000 00000000 00000000 00000000 10010110 10001111)

State 345 file fixed-point.h line 355 function fxp_mult thread 0
----------------------------------------------------
  tmpmult = -926640 (11111111 11111111 11111111 11111111 11111111 11110001 11011100 01010000)

State 346 file fixed-point.h line 359 function fxp_mult thread 0
----------------------------------------------------
  tmpmultprec = -226 (11111111 11111111 11111111 11111111 11111111 11111111 11111111 00011110)

State 349 file fixed-point.h line 329 function fxp_add thread 0
----------------------------------------------------
  tmpadd = 38317 (00000000 00000000 00000000 00000000 00000000 00000000 10010101 10101101)
An Overflow Occurred in the node a0
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output
An Overflow Occurred in system's output

State 379 file compatibility.h line 36 function __DSVERIFIER_assert thread 0
----------------------------------------------------
Violated property:
  file compatibility.h line 36 function __DSVERIFIER_assert
  assertion expression
  expression

VERIFICATION FAILED
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-06-impl2.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-06-impl2.c: Parsing
In file included from benchmarks/ds-06-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.495s
GOTO program processing time: 0.022s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.114s (1329 assignments)
Slicing time: 0.003s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.074s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.074s
Runtime decision procedure: 48.914s
BMC program time: 49.106s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-06-impl3.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-06-impl3.c: Parsing
In file included from benchmarks/ds-06-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.367s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.116s (1329 assignments)
Slicing time: 0.002s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.074s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.074s
Runtime decision procedure: 12.057s
BMC program time: 12.249s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-07-impl1.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-07-impl1.c: Parsing
In file included from benchmarks/ds-07-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.135s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.115s (1329 assignments)
Slicing time: 0.003s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.074s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.074s
Runtime decision procedure: 73.390s
BMC program time: 73.582s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-07-impl2.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-07-impl2.c: Parsing
In file included from benchmarks/ds-07-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.217s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.128s (1329 assignments)
Slicing time: 0.003s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.083s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.083s
Runtime decision procedure: 39.999s
BMC program time: 40.213s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-07-impl3.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-07-impl3.c: Parsing
In file included from benchmarks/ds-07-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.216s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.114s (1329 assignments)
Slicing time: 0.003s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.074s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.074s
Runtime decision procedure: 11.964s
BMC program time: 12.155s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-08-impl1.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-08-impl1.c: Parsing
In file included from benchmarks/ds-08-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.183s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.118s (1329 assignments)
Slicing time: 0.002s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.075s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.075s
Runtime decision procedure: 41.404s
BMC program time: 41.600s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-08-impl2.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-08-impl2.c: Parsing
In file included from benchmarks/ds-08-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.260s
GOTO program processing time: 0.024s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.117s (1329 assignments)
Slicing time: 0.003s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.075s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.075s
Runtime decision procedure: 19.668s
BMC program time: 19.863s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-08-impl3.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-08-impl3.c: Parsing
In file included from benchmarks/ds-08-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.151s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.116s (1329 assignments)
Slicing time: 0.003s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.075s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.075s
Runtime decision procedure: 18.508s
BMC program time: 18.702s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-09-impl1.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-09-impl1.c: Parsing
In file included from benchmarks/ds-09-impl1.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.136s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.116s (1329 assignments)
Slicing time: 0.003s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.074s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.074s
Runtime decision procedure: 74.762s
BMC program time: 74.955s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-09-impl2.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-09-impl2.c: Parsing
In file included from benchmarks/ds-09-impl2.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.155s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.118s (1329 assignments)
Slicing time: 0.002s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.075s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.075s
Runtime decision procedure: 40.036s
BMC program time: 40.231s

VERIFICATION SUCCESSFUL
yashchopda@yash-Latitude-3490:~/Desktop/ESBMC-6.6.0-Linux/bin$ ./esbmc ds-09-impl3.c --show-cex
ESBMC version 6.6.0 64-bit x86_64 linux
file ds-09-impl3.c: Parsing
In file included from benchmarks/ds-09-impl3.c:1:
In file included from /home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/dsverifier.h:24:
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:29: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
           ~~~~             ^~~~~~
           %.0ld
/home/yashchopda/Desktop/dsverifier-v2.0.3-esbmc-v4.0-cbmc-5.6/bmc/core/functions.h:186:37: warning: format specifies type 'double' but the argument has type 'fxp_t' (aka 'long') [-Wformat]
   printf("%.0f == %.0f\n", y[idx], y[idx-window_size]);
                   ~~~~             ^~~~~~~~~~~~~~~~~~
                   %.0ld
Converting
Generating GOTO Program
GOTO program creation time: 1.162s
GOTO program processing time: 0.023s
Starting Bounded Model Checking
Unwinding loop 386 iteration 1 file dsverifier.h line 422 function call_verification_task
Unwinding loop 386 iteration 2 file dsverifier.h line 422 function call_verification_task
Unwinding loop 387 iteration 1 file dsverifier.h line 448 function call_verification_task
Unwinding loop 387 iteration 2 file dsverifier.h line 448 function call_verification_task
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 1 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 4 iteration 2 file fixed-point.h line 260 function fxp_double_to_fxp_array
Unwinding loop 209 iteration 1 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 2 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 3 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 4 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 5 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 6 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 7 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 8 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 9 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 209 iteration 10 file verify_overflow.h line 81 function verify_overflow
Unwinding loop 210 iteration 1 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 210 iteration 2 file verify_overflow.h line 98 function verify_overflow
Unwinding loop 211 iteration 1 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 211 iteration 2 file verify_overflow.h line 101 function verify_overflow
Unwinding loop 212 iteration 1 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 212 iteration 2 file verify_overflow.h line 104 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 1 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 2 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 3 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 4 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 5 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 6 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 7 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 8 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 9 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 132 iteration 1 file realizations.h line 78 function fxp_transposed_direct_form_2
Unwinding loop 213 iteration 10 file verify_overflow.h line 112 function verify_overflow
Unwinding loop 2 iteration 1 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 2 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 3 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 4 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 5 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 6 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 7 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 8 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 9 file fixed-point.h line 171 function fxp_verify_overflow_array
Unwinding loop 2 iteration 10 file fixed-point.h line 171 function fxp_verify_overflow_array
Symex completed in: 0.118s (1329 assignments)
Slicing time: 0.002s (removed 367 assignments)
Generated 423 VCC(s), 196 remaining after simplification (962 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.074s
Solving with solver Boolector 3.2.0
Encoding to solver time: 0.074s
Runtime decision procedure: 12.203s
BMC program time: 12.398s

VERIFICATION SUCCESSFUL

